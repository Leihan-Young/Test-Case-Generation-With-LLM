() {
    Option help = new Option("h", "help", false, "print this message");
    Option version = new Option("v", "version", false, "print version information");
    Option newRun = new Option("n", "new", false, "Create NLT cache entries only for new items");
    Option trackerRun = new Option("t", "tracker", false, "Create NLT cache entries only for tracker items");

    Option timeLimit = OptionBuilder.withLongOpt("limit").hasArg()
                                    .withValueSeparator()
                                    .withDescription("Set time limit for execution, in minutes")
                                    .create("l");

    Option age = OptionBuilder.withLongOpt("age").hasArg()
                              .withValueSeparator()
                              .withDescription("Age (in days) of cache item before being recomputed")
                              .create("a");

    Option server = OptionBuilder.withLongOpt("server").hasArg()
                                 .withValueSeparator()
                                 .withDescription("The NLT server address")
                                 .create("s");

    Option numResults = OptionBuilder.withLongOpt("results").hasArg()
                                     .withValueSeparator()
                                     .withDescription("Number of results per item")
                                     .create("r");

    Option configFile = OptionBuilder.withLongOpt("file").hasArg()
                                     .withValueSeparator()
                                     .withDescription("Use the specified configuration file")
                                     .create();

    Options options = new Options();
    options.addOption(help);
    options.addOption(version);
    options.addOption(newRun);
    options.addOption(trackerRun);
    options.addOption(timeLimit);
    options.addOption(age);
    options.addOption(server);
    options.addOption(numResults);
    options.addOption(configFile);

    // create the command line parser
    CommandLineParser parser = new PosixParser();

    String[] args = new String[] {
            "-v",
            "-l",
            "10",
            "-age",
            "5",
            "-file",
            "filename"
        };

    CommandLine line = parser.parse(options, args);
    assertTrue(line.hasOption("v"));
    assertEquals(line.getOptionValue("l"), "10");
    assertEquals(line.getOptionValue("age"), "5");
    assertEquals(line.getOptionValue("file"), "filename");
    assertNull(line.getOptionValue("limit")); // This assertion will fail because of a bug in the program.
}
```