Getting Chart-7 focal context...
focal_context=package org.jfree.data.time;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.data.general.Series;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.SeriesException;
/**
 * A structure containing zero, one or many {@link TimePeriodValue} instances.  
 * The time periods can overlap, and are maintained in the order that they are 
 * added to the collection.
 * <p>
 * This is similar to the {@link TimeSeries} class, except that the time 
 * periods can have irregular lengths.
 */
public class TimePeriodValues extends Series implements Serializable {
    private String domain;
    private String range;
    private List data;
    private int minStartIndex = -1;
    private int maxStartIndex = -1;
    private int minMiddleIndex = -1;
    private int maxMiddleIndex = -1;
    private int minEndIndex = -1;
    private int maxEndIndex = -1;
    /**
     * Update the index values for the maximum and minimum bounds.
     * 
     * @param period  the time period.
     * @param index  the index of the time period.
     */
    private void updateBounds(TimePeriod period, int index) {
        
        long start = period.getStart().getTime();
        long end = period.getEnd().getTime();
        long middle = start + ((end - start) / 2);

        if (this.minStartIndex >= 0) {
            long minStart = getDataItem(this.minStartIndex).getPeriod()
                .getStart().getTime();
            if (start < minStart) {
                this.minStartIndex = index;           
            }
        }
        else {
            this.minStartIndex = index;
        }
        
        if (this.maxStartIndex >= 0) {
            long maxStart = getDataItem(this.maxStartIndex).getPeriod()
                .getStart().getTime();
            if (start > maxStart) {
                this.maxStartIndex = index;           
            }
        }
        else {
            this.maxStartIndex = index;
        }
        
        if (this.minMiddleIndex >= 0) {
            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
                .getTime();
            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                .getTime();
            long minMiddle = s + (e - s) / 2;
            if (middle < minMiddle) {
                this.minMiddleIndex = index;           
            }
        }
        else {
            this.minMiddleIndex = index;
        }
        
        if (this.maxMiddleIndex >= 0) {
            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
                .getTime();
            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                .getTime();
            long maxMiddle = s + (e - s) / 2;
            if (middle > maxMiddle) {
                this.maxMiddleIndex = index;           
            }
        }
        else {
            this.maxMiddleIndex = index;
        }
        
        if (this.minEndIndex >= 0) {
            long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
                .getTime();
            if (end < minEnd) {
                this.minEndIndex = index;           
            }
        }
        else {
            this.minEndIndex = index;
        }
       
        if (this.maxEndIndex >= 0) {
            long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
                .getTime();
            if (end > maxEnd) {
                this.maxEndIndex = index;           
            }
        }
        else {
            this.maxEndIndex = index;
        }
        
    }
}

Getting Chart-7 test prefix...
oracle_focal_context=package org.jfree.data.time;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.data.general.Series;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.SeriesException;
/**
 * A structure containing zero, one or many {@link TimePeriodValue} instances.  
 * The time periods can overlap, and are maintained in the order that they are 
 * added to the collection.
 * <p>
 * This is similar to the {@link TimeSeries} class, except that the time 
 * periods can have irregular lengths.
 */
public class TimePeriodValues extends Series implements Serializable {
    private String domain;
    private String range;
    private List data;
    private int minStartIndex = -1;
    private int maxStartIndex = -1;
    private int minMiddleIndex = -1;
    private int maxMiddleIndex = -1;
    private int minEndIndex = -1;
    private int maxEndIndex = -1;
    /**
     * Returns the index of the time period with the maximum middle 
     * milliseconds.
     * 
     * @return The index.
     */
    public int getMaxMiddleIndex() {
        return this.maxMiddleIndex;
    }
    /**
     * Adds a data item to the series and sends a {@link SeriesChangeEvent} to
     * all registered listeners.
     *
     * @param item  the item (<code>null</code> not permitted).
     */
    public void add(TimePeriodValue item) {
        if (item == null) {
            throw new IllegalArgumentException("Null item not allowed.");
        }
        this.data.add(item);
        updateBounds(item.getPeriod(), this.data.size() - 1);
        fireSeriesChanged();
    }
    /**
     * Adds a new data item to the series and sends a {@link SeriesChangeEvent}
     * to all registered listeners.
     *
     * @param period  the time period (<code>null</code> not permitted).
     * @param value  the value.
     * 
     * @see #add(TimePeriod, Number)
     */
    public void add(TimePeriod period, double value) {
        TimePeriodValue item = new TimePeriodValue(period, value);
        add(item);
    }
    /**
     * Adds a new data item to the series and sends a {@link SeriesChangeEvent}
     * to all registered listeners.
     *
     * @param period  the time period (<code>null</code> not permitted).
     * @param value  the value (<code>null</code> permitted).
     */
    public void add(TimePeriod period, Number value) {
        TimePeriodValue item = new TimePeriodValue(period, value);
        add(item);
    }
    /**
     * Creates a new (empty) collection of time period values.
     *
     * @param name  the name of the series (<code>null</code> not permitted).
     */
    public TimePeriodValues(Comparable name) {
        this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);
    }
    /**
     * Creates a new time series that contains no data.
     * <P>
     * Descriptions can be specified for the domain and range.  One situation
     * where this is helpful is when generating a chart for the time series -
     * axis labels can be taken from the domain and range description.
     *
     * @param name  the name of the series (<code>null</code> not permitted).
     * @param domain  the domain description.
     * @param range  the range description.
     */
    public TimePeriodValues(Comparable name, String domain, String range) {
        super(name);
        this.domain = domain;
        this.range = range;
        this.data = new ArrayList();
    }
}

test_class_path=org/jfree/data/time/junit/TimePeriodValuesTests.java, test_prefix=    public void testGetMaxMiddleIndex() {
        TimePeriodValues s = new TimePeriodValues("Test");
        _tmp_var_0_ = -1;
        _tmp_var_1_ =  s.getMaxMiddleIndex();
        $ASSERT$
        s.add(new SimpleTimePeriod(100L, 200L), 1.0);
        _tmp_var_2_ = 0;
        _tmp_var_3_ =  s.getMaxMiddleIndex();
        $ASSERT$
        s.add(new SimpleTimePeriod(300L, 400L), 2.0);
        _tmp_var_4_ = 1;
        _tmp_var_5_ =  s.getMaxMiddleIndex();
        $ASSERT$
        s.add(new SimpleTimePeriod(0L, 50L), 3.0);
        _tmp_var_6_ = 1;
        _tmp_var_7_ =  s.getMaxMiddleIndex();
        $ASSERT$
        s.add(new SimpleTimePeriod(150L, 200L), 4.0);
        _tmp_var_8_ = 1;
        _tmp_var_9_ =  s.getMaxMiddleIndex();
        $ASSERT$
    }

Constructing unit test prompt for Chart-7
unit_test_prompt=# Java Program:
A java program with one or more bugs.
```
package org.jfree.data.time;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.data.general.Series;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.SeriesException;
/**
 * A structure containing zero, one or many {@link TimePeriodValue} instances.  
 * The time periods can overlap, and are maintained in the order that they are 
 * added to the collection.
 * <p>
 * This is similar to the {@link TimeSeries} class, except that the time 
 * periods can have irregular lengths.
 */
public class TimePeriodValues extends Series implements Serializable {
    private String domain;
    private String range;
    private List data;
    private int minStartIndex = -1;
    private int maxStartIndex = -1;
    private int minMiddleIndex = -1;
    private int maxMiddleIndex = -1;
    private int minEndIndex = -1;
    private int maxEndIndex = -1;
    /**
     * Update the index values for the maximum and minimum bounds.
     * 
     * @param period  the time period.
     * @param index  the index of the time period.
     */
    private void updateBounds(TimePeriod period, int index) {
        
        long start = period.getStart().getTime();
        long end = period.getEnd().getTime();
        long middle = start + ((end - start) / 2);

        if (this.minStartIndex >= 0) {
            long minStart = getDataItem(this.minStartIndex).getPeriod()
                .getStart().getTime();
            if (start < minStart) {
                this.minStartIndex = index;           
            }
        }
        else {
            this.minStartIndex = index;
        }
        
        if (this.maxStartIndex >= 0) {
            long maxStart = getDataItem(this.maxStartIndex).getPeriod()
                .getStart().getTime();
            if (start > maxStart) {
                this.maxStartIndex = index;           
            }
        }
        else {
            this.maxStartIndex = index;
        }
        
        if (this.minMiddleIndex >= 0) {
            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
                .getTime();
            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                .getTime();
            long minMiddle = s + (e - s) / 2;
            if (middle < minMiddle) {
                this.minMiddleIndex = index;           
            }
        }
        else {
            this.minMiddleIndex = index;
        }
        
        if (this.maxMiddleIndex >= 0) {
            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
                .getTime();
            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                .getTime();
            long maxMiddle = s + (e - s) / 2;
            if (middle > maxMiddle) {
                this.maxMiddleIndex = index;           
            }
        }
        else {
            this.maxMiddleIndex = index;
        }
        
        if (this.minEndIndex >= 0) {
            long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
                .getTime();
            if (end < minEnd) {
                this.minEndIndex = index;           
            }
        }
        else {
            this.minEndIndex = index;
        }
       
        if (this.maxEndIndex >= 0) {
            long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
                .getTime();
            if (end > maxEnd) {
                this.maxEndIndex = index;           
            }
        }
        else {
            this.maxEndIndex = index;
        }
        
    }
}

```
# Test Code:
A test method that can reveal the bug of the java program.
```
public void test
Invoking LLM(gpt-3.5-turbo) for Chart-7 unit test
unit_test_response=() {
    TimePeriodValues values = new TimePeriodValues("Test");
    TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    assertEquals(0, values.getMinStartIndex());
    assertEquals(2, values.getMaxStartIndex());
    assertEquals(1, values.getMinMiddleIndex());
    assertEquals(1, values.getMaxMiddleIndex());
    assertEquals(2, values.getMinEndIndex());
    assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    assertEquals(0, values.getMinStartIndex());
    assertEquals(3, values.getMaxStartIndex());
    assertEquals(1, values.getMinMiddleIndex());
    assertEquals(3, values.getMaxMiddleIndex());
    assertEquals(2, values.getMinEndIndex());
    assertEquals(3, values.getMaxEndIndex());
}
```
Constructing test code for Chart-7 unit test
Finished constructing test code for Chart-7 unit test
Finished invoking LLM(gpt-3.5-turbo) for Chart-7 unit test
Constructing oracle test prompt for Chart-7
oracle_test_prompt=# Java Program:
A java program with one or more bugs.
```
package org.jfree.data.time;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.data.general.Series;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.SeriesException;
/**
 * A structure containing zero, one or many {@link TimePeriodValue} instances.  
 * The time periods can overlap, and are maintained in the order that they are 
 * added to the collection.
 * <p>
 * This is similar to the {@link TimeSeries} class, except that the time 
 * periods can have irregular lengths.
 */
public class TimePeriodValues extends Series implements Serializable {
    private String domain;
    private String range;
    private List data;
    private int minStartIndex = -1;
    private int maxStartIndex = -1;
    private int minMiddleIndex = -1;
    private int maxMiddleIndex = -1;
    private int minEndIndex = -1;
    private int maxEndIndex = -1;
    /**
     * Returns the index of the time period with the maximum middle 
     * milliseconds.
     * 
     * @return The index.
     */
    public int getMaxMiddleIndex() {
        return this.maxMiddleIndex;
    }
    /**
     * Adds a data item to the series and sends a {@link SeriesChangeEvent} to
     * all registered listeners.
     *
     * @param item  the item (<code>null</code> not permitted).
     */
    public void add(TimePeriodValue item) {
        if (item == null) {
            throw new IllegalArgumentException("Null item not allowed.");
        }
        this.data.add(item);
        updateBounds(item.getPeriod(), this.data.size() - 1);
        fireSeriesChanged();
    }
    /**
     * Adds a new data item to the series and sends a {@link SeriesChangeEvent}
     * to all registered listeners.
     *
     * @param period  the time period (<code>null</code> not permitted).
     * @param value  the value.
     * 
     * @see #add(TimePeriod, Number)
     */
    public void add(TimePeriod period, double value) {
        TimePeriodValue item = new TimePeriodValue(period, value);
        add(item);
    }
    /**
     * Adds a new data item to the series and sends a {@link SeriesChangeEvent}
     * to all registered listeners.
     *
     * @param period  the time period (<code>null</code> not permitted).
     * @param value  the value (<code>null</code> permitted).
     */
    public void add(TimePeriod period, Number value) {
        TimePeriodValue item = new TimePeriodValue(period, value);
        add(item);
    }
    /**
     * Creates a new (empty) collection of time period values.
     *
     * @param name  the name of the series (<code>null</code> not permitted).
     */
    public TimePeriodValues(Comparable name) {
        this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);
    }
    /**
     * Creates a new time series that contains no data.
     * <P>
     * Descriptions can be specified for the domain and range.  One situation
     * where this is helpful is when generating a chart for the time series -
     * axis labels can be taken from the domain and range description.
     *
     * @param name  the name of the series (<code>null</code> not permitted).
     * @param domain  the domain description.
     * @param range  the range description.
     */
    public TimePeriodValues(Comparable name, String domain, String range) {
        super(name);
        this.domain = domain;
        this.range = range;
        this.data = new ArrayList();
    }
}

```
# Incomplete Test Code:
A test method that is incomplete. To complete the test code, $ASSERT$ should be replaced with assert statements (assertTrue, assertFalse, fail, assertEquals, assertNotEquals, assertArrayEquals, assertNotNull, assertNull, assertSame, assertNotSame), and $EXCEPTION$ should be replaced with exception class. Other statements stay the same.
```
    public void testGetMaxMiddleIndex() {
        TimePeriodValues s = new TimePeriodValues("Test");
        _tmp_var_0_ = -1;
        _tmp_var_1_ =  s.getMaxMiddleIndex();
        $ASSERT$
        s.add(new SimpleTimePeriod(100L, 200L), 1.0);
        _tmp_var_2_ = 0;
        _tmp_var_3_ =  s.getMaxMiddleIndex();
        $ASSERT$
        s.add(new SimpleTimePeriod(300L, 400L), 2.0);
        _tmp_var_4_ = 1;
        _tmp_var_5_ =  s.getMaxMiddleIndex();
        $ASSERT$
        s.add(new SimpleTimePeriod(0L, 50L), 3.0);
        _tmp_var_6_ = 1;
        _tmp_var_7_ =  s.getMaxMiddleIndex();
        $ASSERT$
        s.add(new SimpleTimePeriod(150L, 200L), 4.0);
        _tmp_var_8_ = 1;
        _tmp_var_9_ =  s.getMaxMiddleIndex();
        $ASSERT$
    }

```
# Test Code:
A test method that completes the incomplete test code. And it contains no $ASSERT$ or $EXCEPTION$
```
public void test
Invoking LLM(gpt-3.5-turbo) for Chart-7 oracle test
oracle_test_response=GetMaxMiddleIndex() {
    TimePeriodValues s = new TimePeriodValues("Test");
    int expectedIndex = -1;
    int actualIndex = s.getMaxMiddleIndex();
    assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(100L, 200L), 1.0);
    expectedIndex = 0;
    actualIndex = s.getMaxMiddleIndex();
    assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(300L, 400L), 2.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(0L, 50L), 3.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(150L, 200L), 4.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    assertEquals(expectedIndex, actualIndex);
}
Constructing test code for Chart-7 oracle test
Finished constructing test code for Chart-7 oracle test
Finished invoking LLM(gpt-3.5-turbo) for Chart-7 oracle test
Checking out Chart 7b...
checkout_cmd=defects4j checkout -p Chart -v 7b -w /jTrans/Eval/src/Chart/7b >/dev/null 2>&1
Finished checking out Chart 7b.
Checking out Chart 7f...
checkout_cmd=defects4j checkout -p Chart -v 7f -w /jTrans/Eval/src/Chart/7f >/dev/null 2>&1
Finished checking out Chart 7f.
runTestWithRetry NO.1 try
runTest
trigger_code=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}
, check_out_path=/jTrans/Eval/src/Chart/7b, test_class_path=org/jfree/data/time/junit/TimePeriodValuesTests.java
test_code_path=/jTrans/Eval/src/Chart/7b/tests
trigger_method_lines=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/7b -t org.jfree.data.time.junit.TimePeriodValuesTests::newTestMethod1
org/jfree/data/time/junit/TimePeriodValuesTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ FAIL
Executed command:  cd /jTrans/Eval/src/Chart/7b && /workspace/defects4j/major/bin/ant -f /workspace/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/workspace/defects4j -Dd4j.dir.projects=/workspace/defects4j/framework/projects -Dbasedir=/jTrans/Eval/src/Chart/7b -Dbuild.compiler=javac1.7  compile.tests 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /workspace/defects4j/framework/projects/defects4j.build.xml

initialise:

compile:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/7b/build
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:57: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 578 source files to /jTrans/Eval/src/Chart/7b/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Transparency.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AlphaComposite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Composite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/AffineTransform.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/ImageIcon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/EventListenerList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InvalidObjectException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventObject.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/CharacterIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/FontMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Polygon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/LineMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/PathIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JScrollPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AWTEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Insets.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseMotionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PageFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/Printable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterJob.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFileChooser.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenuItem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JOptionPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPopupMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings
     [copy] Copying 1 file to /jTrans/Eval/src/Chart/7b/build/org/jfree/chart
     [copy] Copying 12 files to /jTrans/Eval/src/Chart/7b/build/org/jfree/chart
     [copy] Copying 9 files to /jTrans/Eval/src/Chart/7b/build/org/jfree/chart/plot
     [copy] Copying 10 files to /jTrans/Eval/src/Chart/7b/build/org/jfree/chart/editor
     [copy] Copying 5 files to /jTrans/Eval/src/Chart/7b/build/org/jfree/chart/ui

compile-experimental:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:106: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 4 source files to /jTrans/Eval/src/Chart/7b/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Float.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings

compile.tests:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/7b/build-tests
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:123: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 359 source files to /jTrans/Eval/src/Chart/7b/build-tests
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Polygon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Arc2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/GeneralPath.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /jTrans/Eval/src/Chart/7b/tests/org/jfree/data/time/junit/TimePeriodValuesTests.java:451: error: cannot find symbol
    [javac]     TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    [javac]     ^
    [javac]   symbol:   class TimePeriod
    [javac]   location: class TimePeriodValuesTests
    [javac] /jTrans/Eval/src/Chart/7b/tests/org/jfree/data/time/junit/TimePeriodValuesTests.java:452: error: cannot find symbol
    [javac]     TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    [javac]     ^
    [javac]   symbol:   class TimePeriod
    [javac]   location: class TimePeriodValuesTests
    [javac] /jTrans/Eval/src/Chart/7b/tests/org/jfree/data/time/junit/TimePeriodValuesTests.java:453: error: cannot find symbol
    [javac]     TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    [javac]     ^
    [javac]   symbol:   class TimePeriod
    [javac]   location: class TimePeriodValuesTests
    [javac] /jTrans/Eval/src/Chart/7b/tests/org/jfree/data/time/junit/TimePeriodValuesTests.java:469: error: cannot find symbol
    [javac]     TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    [javac]     ^
    [javac]   symbol:   class TimePeriod
    [javac]   location: class TimePeriodValuesTests
    [javac] Note: Some input files use or override a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] 4 errors
    [javac] 100 warnings

BUILD FAILED
runTest
trigger_code=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}
, check_out_path=/jTrans/Eval/src/Chart/7f, test_class_path=org/jfree/data/time/junit/TimePeriodValuesTests.java
test_code_path=/jTrans/Eval/src/Chart/7f/tests
trigger_method_lines=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/7f -t org.jfree.data.time.junit.TimePeriodValuesTests::newTestMethod1
org/jfree/data/time/junit/TimePeriodValuesTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ FAIL
Executed command:  cd /jTrans/Eval/src/Chart/7f && /workspace/defects4j/major/bin/ant -f /workspace/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/workspace/defects4j -Dd4j.dir.projects=/workspace/defects4j/framework/projects -Dbasedir=/jTrans/Eval/src/Chart/7f -Dbuild.compiler=javac1.7  compile.tests 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /workspace/defects4j/framework/projects/defects4j.build.xml

initialise:

compile:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/7f/build
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:57: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 578 source files to /jTrans/Eval/src/Chart/7f/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Transparency.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AlphaComposite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Composite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/AffineTransform.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/ImageIcon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/EventListenerList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InvalidObjectException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventObject.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/CharacterIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/FontMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Polygon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/LineMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/PathIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JScrollPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AWTEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Insets.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseMotionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PageFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/Printable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterJob.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFileChooser.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenuItem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JOptionPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPopupMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings
     [copy] Copying 1 file to /jTrans/Eval/src/Chart/7f/build/org/jfree/chart
     [copy] Copying 12 files to /jTrans/Eval/src/Chart/7f/build/org/jfree/chart
     [copy] Copying 9 files to /jTrans/Eval/src/Chart/7f/build/org/jfree/chart/plot
     [copy] Copying 10 files to /jTrans/Eval/src/Chart/7f/build/org/jfree/chart/editor
     [copy] Copying 5 files to /jTrans/Eval/src/Chart/7f/build/org/jfree/chart/ui

compile-experimental:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:106: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 4 source files to /jTrans/Eval/src/Chart/7f/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Float.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings

compile.tests:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/7f/build-tests
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:123: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 359 source files to /jTrans/Eval/src/Chart/7f/build-tests
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Polygon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Arc2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/GeneralPath.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /jTrans/Eval/src/Chart/7f/tests/org/jfree/data/time/junit/TimePeriodValuesTests.java:451: error: cannot find symbol
    [javac]     TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    [javac]     ^
    [javac]   symbol:   class TimePeriod
    [javac]   location: class TimePeriodValuesTests
    [javac] /jTrans/Eval/src/Chart/7f/tests/org/jfree/data/time/junit/TimePeriodValuesTests.java:452: error: cannot find symbol
    [javac]     TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    [javac]     ^
    [javac]   symbol:   class TimePeriod
    [javac]   location: class TimePeriodValuesTests
    [javac] /jTrans/Eval/src/Chart/7f/tests/org/jfree/data/time/junit/TimePeriodValuesTests.java:453: error: cannot find symbol
    [javac]     TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    [javac]     ^
    [javac]   symbol:   class TimePeriod
    [javac]   location: class TimePeriodValuesTests
    [javac] /jTrans/Eval/src/Chart/7f/tests/org/jfree/data/time/junit/TimePeriodValuesTests.java:469: error: cannot find symbol
    [javac]     TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    [javac]     ^
    [javac]   symbol:   class TimePeriod
    [javac]   location: class TimePeriodValuesTests
    [javac] Note: Some input files use or override a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] 4 errors
    [javac] 100 warnings

BUILD FAILED
res_in_bug=Build failed, res_in_fix=Build failed
build_fail_error_message:

[javac]error: cannot find symbol
[javac]     TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests

[javac]error: cannot find symbol
[javac]     TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests

[javac]error: cannot find symbol
[javac]     TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests

[javac]error: cannot find symbol
[javac]     TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests
[javac] Note: Some input files use or override a deprecated API.
[javac] Note: Recompile with -Xlint:deprecation for details.

[user]:# Java Program:
A java program with one or more bugs.
```
package org.jfree.data.time;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.data.general.Series;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.SeriesException;
/**
 * A structure containing zero, one or many {@link TimePeriodValue} instances.  
 * The time periods can overlap, and are maintained in the order that they are 
 * added to the collection.
 * <p>
 * This is similar to the {@link TimeSeries} class, except that the time 
 * periods can have irregular lengths.
 */
public class TimePeriodValues extends Series implements Serializable {
    private String domain;
    private String range;
    private List data;
    private int minStartIndex = -1;
    private int maxStartIndex = -1;
    private int minMiddleIndex = -1;
    private int maxMiddleIndex = -1;
    private int minEndIndex = -1;
    private int maxEndIndex = -1;
    /**
     * Update the index values for the maximum and minimum bounds.
     * 
     * @param period  the time period.
     * @param index  the index of the time period.
     */
    private void updateBounds(TimePeriod period, int index) {
        
        long start = period.getStart().getTime();
        long end = period.getEnd().getTime();
        long middle = start + ((end - start) / 2);

        if (this.minStartIndex >= 0) {
            long minStart = getDataItem(this.minStartIndex).getPeriod()
                .getStart().getTime();
            if (start < minStart) {
                this.minStartIndex = index;           
            }
        }
        else {
            this.minStartIndex = index;
        }
        
        if (this.maxStartIndex >= 0) {
            long maxStart = getDataItem(this.maxStartIndex).getPeriod()
                .getStart().getTime();
            if (start > maxStart) {
                this.maxStartIndex = index;           
            }
        }
        else {
            this.maxStartIndex = index;
        }
        
        if (this.minMiddleIndex >= 0) {
            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
                .getTime();
            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                .getTime();
            long minMiddle = s + (e - s) / 2;
            if (middle < minMiddle) {
                this.minMiddleIndex = index;           
            }
        }
        else {
            this.minMiddleIndex = index;
        }
        
        if (this.maxMiddleIndex >= 0) {
            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
                .getTime();
            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                .getTime();
            long maxMiddle = s + (e - s) / 2;
            if (middle > maxMiddle) {
                this.maxMiddleIndex = index;           
            }
        }
        else {
            this.maxMiddleIndex = index;
        }
        
        if (this.minEndIndex >= 0) {
            long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
                .getTime();
            if (end < minEnd) {
                this.minEndIndex = index;           
            }
        }
        else {
            this.minEndIndex = index;
        }
       
        if (this.maxEndIndex >= 0) {
            long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
                .getTime();
            if (end > maxEnd) {
                this.maxEndIndex = index;           
            }
        }
        else {
            this.maxEndIndex = index;
        }
        
    }
}

```
# Test Code:
A test method that can reveal the bug of the java program.
```
public void test

[assistant]:() {
    TimePeriodValues values = new TimePeriodValues("Test");
    TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    assertEquals(0, values.getMinStartIndex());
    assertEquals(2, values.getMaxStartIndex());
    assertEquals(1, values.getMinMiddleIndex());
    assertEquals(1, values.getMaxMiddleIndex());
    assertEquals(2, values.getMinEndIndex());
    assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    assertEquals(0, values.getMinStartIndex());
    assertEquals(3, values.getMaxStartIndex());
    assertEquals(1, values.getMinMiddleIndex());
    assertEquals(3, values.getMaxMiddleIndex());
    assertEquals(2, values.getMinEndIndex());
    assertEquals(3, values.getMaxEndIndex());
}
```

[user]:The test method you provided is not able to be built. Please complete the markdown file again with the error information. The error occurred while building the test method is:
[javac]error: cannot find symbol
[javac]     TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests
[javac]error: cannot find symbol
[javac]     TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests
[javac]error: cannot find symbol
[javac]     TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests
[javac]error: cannot find symbol
[javac]     TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests
[javac] Note: Some input files use or override a deprecated API.
[javac] Note: Recompile with -Xlint:deprecation for details.

```
public void test

Invoking LLM(gpt-3.5-turbo) for Chart-7 NO.2 try
runTestWithRetry NO.2 try
runTest
trigger_code=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    SimpleTimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    SimpleTimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    SimpleTimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    SimpleTimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}
, check_out_path=/jTrans/Eval/src/Chart/7b, test_class_path=org/jfree/data/time/junit/TimePeriodValuesTests.java
test_code_path=/jTrans/Eval/src/Chart/7b/tests
trigger_method_lines=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    SimpleTimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    SimpleTimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    SimpleTimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    SimpleTimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/7b -t org.jfree.data.time.junit.TimePeriodValuesTests::newTestMethod1
org/jfree/data/time/junit/TimePeriodValuesTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 1
runTest
trigger_code=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    SimpleTimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    SimpleTimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    SimpleTimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    SimpleTimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}
, check_out_path=/jTrans/Eval/src/Chart/7f, test_class_path=org/jfree/data/time/junit/TimePeriodValuesTests.java
test_code_path=/jTrans/Eval/src/Chart/7f/tests
trigger_method_lines=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    SimpleTimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    SimpleTimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    SimpleTimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    SimpleTimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/7f -t org.jfree.data.time.junit.TimePeriodValuesTests::newTestMethod1
org/jfree/data/time/junit/TimePeriodValuesTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 1
res_in_bug=Test failed, res_in_fix=Test failed
[user]:# Java Program:
A java program with one or more bugs.
```
package org.jfree.data.time;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.data.general.Series;
import org.jfree.data.general.SeriesChangeEvent;
import org.jfree.data.general.SeriesException;
/**
 * A structure containing zero, one or many {@link TimePeriodValue} instances.  
 * The time periods can overlap, and are maintained in the order that they are 
 * added to the collection.
 * <p>
 * This is similar to the {@link TimeSeries} class, except that the time 
 * periods can have irregular lengths.
 */
public class TimePeriodValues extends Series implements Serializable {
    private String domain;
    private String range;
    private List data;
    private int minStartIndex = -1;
    private int maxStartIndex = -1;
    private int minMiddleIndex = -1;
    private int maxMiddleIndex = -1;
    private int minEndIndex = -1;
    private int maxEndIndex = -1;
    /**
     * Update the index values for the maximum and minimum bounds.
     * 
     * @param period  the time period.
     * @param index  the index of the time period.
     */
    private void updateBounds(TimePeriod period, int index) {
        
        long start = period.getStart().getTime();
        long end = period.getEnd().getTime();
        long middle = start + ((end - start) / 2);

        if (this.minStartIndex >= 0) {
            long minStart = getDataItem(this.minStartIndex).getPeriod()
                .getStart().getTime();
            if (start < minStart) {
                this.minStartIndex = index;           
            }
        }
        else {
            this.minStartIndex = index;
        }
        
        if (this.maxStartIndex >= 0) {
            long maxStart = getDataItem(this.maxStartIndex).getPeriod()
                .getStart().getTime();
            if (start > maxStart) {
                this.maxStartIndex = index;           
            }
        }
        else {
            this.maxStartIndex = index;
        }
        
        if (this.minMiddleIndex >= 0) {
            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
                .getTime();
            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                .getTime();
            long minMiddle = s + (e - s) / 2;
            if (middle < minMiddle) {
                this.minMiddleIndex = index;           
            }
        }
        else {
            this.minMiddleIndex = index;
        }
        
        if (this.maxMiddleIndex >= 0) {
            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
                .getTime();
            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                .getTime();
            long maxMiddle = s + (e - s) / 2;
            if (middle > maxMiddle) {
                this.maxMiddleIndex = index;           
            }
        }
        else {
            this.maxMiddleIndex = index;
        }
        
        if (this.minEndIndex >= 0) {
            long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
                .getTime();
            if (end < minEnd) {
                this.minEndIndex = index;           
            }
        }
        else {
            this.minEndIndex = index;
        }
       
        if (this.maxEndIndex >= 0) {
            long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
                .getTime();
            if (end > maxEnd) {
                this.maxEndIndex = index;           
            }
        }
        else {
            this.maxEndIndex = index;
        }
        
    }
}

```
# Test Code:
A test method that can reveal the bug of the java program.
```
public void test

[assistant]:() {
    TimePeriodValues values = new TimePeriodValues("Test");
    TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    assertEquals(0, values.getMinStartIndex());
    assertEquals(2, values.getMaxStartIndex());
    assertEquals(1, values.getMinMiddleIndex());
    assertEquals(1, values.getMaxMiddleIndex());
    assertEquals(2, values.getMinEndIndex());
    assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    assertEquals(0, values.getMinStartIndex());
    assertEquals(3, values.getMaxStartIndex());
    assertEquals(1, values.getMinMiddleIndex());
    assertEquals(3, values.getMaxMiddleIndex());
    assertEquals(2, values.getMinEndIndex());
    assertEquals(3, values.getMaxEndIndex());
}
```

[user]:The test method you provided is not able to be built. Please complete the markdown file again with the error information. The error occurred while building the test method is:
[javac]error: cannot find symbol
[javac]     TimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests
[javac]error: cannot find symbol
[javac]     TimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests
[javac]error: cannot find symbol
[javac]     TimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests
[javac]error: cannot find symbol
[javac]     TimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
[javac]     ^
[javac]   symbol:   class TimePeriod
[javac]   location: class TimePeriodValuesTests
[javac] Note: Some input files use or override a deprecated API.
[javac] Note: Recompile with -Xlint:deprecation for details.

```
public void test

[assistant]:() {
    TimePeriodValues values = new TimePeriodValues("Test");
    SimpleTimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    SimpleTimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    SimpleTimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    assertEquals(0, values.getMinStartIndex());
    assertEquals(2, values.getMaxStartIndex());
    assertEquals(1, values.getMinMiddleIndex());
    assertEquals(1, values.getMaxMiddleIndex());
    assertEquals(2, values.getMinEndIndex());
    assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    SimpleTimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(5500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    assertEquals(0, values.getMinStartIndex());
    assertEquals(3, values.getMaxStartIndex());
    assertEquals(1, values.getMinMiddleIndex());
    assertEquals(3, values.getMaxMiddleIndex());
    assertEquals(2, values.getMinEndIndex());
    assertEquals(3, values.getMaxEndIndex());
}
```

[user]:The test method you provided fails to find the bug in the java program. Please complete the markdown file again.

```
public void test

Invoking LLM(gpt-3.5-turbo) for Chart-7 NO.3 try
runTestWithRetry NO.3 try
runTest
trigger_code=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    SimpleTimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    SimpleTimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    SimpleTimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    SimpleTimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(4500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(3, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}
, check_out_path=/jTrans/Eval/src/Chart/7b, test_class_path=org/jfree/data/time/junit/TimePeriodValuesTests.java
test_code_path=/jTrans/Eval/src/Chart/7b/tests
trigger_method_lines=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    SimpleTimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    SimpleTimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    SimpleTimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    SimpleTimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(4500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(3, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/7b -t org.jfree.data.time.junit.TimePeriodValuesTests::newTestMethod1
org/jfree/data/time/junit/TimePeriodValuesTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 1
runTest
trigger_code=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    SimpleTimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    SimpleTimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    SimpleTimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    SimpleTimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(4500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(3, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}
, check_out_path=/jTrans/Eval/src/Chart/7f, test_class_path=org/jfree/data/time/junit/TimePeriodValuesTests.java
test_code_path=/jTrans/Eval/src/Chart/7f/tests
trigger_method_lines=public void test() {
    TimePeriodValues values = new TimePeriodValues("Test");
    SimpleTimePeriod period1 = new SimpleTimePeriod(new Date(1000), new Date(2000));
    SimpleTimePeriod period2 = new SimpleTimePeriod(new Date(3000), new Date(4000));
    SimpleTimePeriod period3 = new SimpleTimePeriod(new Date(5000), new Date(6000));
    
    // add the time periods to the collection
    values.add(new TimePeriodValue(period1, 1.0));
    values.add(new TimePeriodValue(period2, 2.0));
    values.add(new TimePeriodValue(period3, 3.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(2, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(1, values.getMaxMiddleIndex());
    Assert.assertEquals(2, values.getMinEndIndex());
    Assert.assertEquals(2, values.getMaxEndIndex());
    
    // add another time period to the collection
    SimpleTimePeriod period4 = new SimpleTimePeriod(new Date(1500), new Date(4500));
    values.add(new TimePeriodValue(period4, 4.0));
    
    // check if the indices of the minimum and maximum start, middle, and end values are correct
    Assert.assertEquals(0, values.getMinStartIndex());
    Assert.assertEquals(3, values.getMaxStartIndex());
    Assert.assertEquals(1, values.getMinMiddleIndex());
    Assert.assertEquals(3, values.getMaxMiddleIndex());
    Assert.assertEquals(3, values.getMinEndIndex());
    Assert.assertEquals(3, values.getMaxEndIndex());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/7f -t org.jfree.data.time.junit.TimePeriodValuesTests::newTestMethod1
org/jfree/data/time/junit/TimePeriodValuesTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 1
res_in_bug=Test failed, res_in_fix=Test failed
runTestWithRetry NO.1 try
runTest
trigger_code=public void testGetMaxMiddleIndex() {
    TimePeriodValues s = new TimePeriodValues("Test");
    int expectedIndex = -1;
    int actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(100L, 200L), 1.0);
    expectedIndex = 0;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(300L, 400L), 2.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(0L, 50L), 3.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(150L, 200L), 4.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
}
, check_out_path=/jTrans/Eval/src/Chart/7b, test_class_path=org/jfree/data/time/junit/TimePeriodValuesTests.java
test_code_path=/jTrans/Eval/src/Chart/7b/tests
trigger_method_lines=public void testGetMaxMiddleIndex() {
    TimePeriodValues s = new TimePeriodValues("Test");
    int expectedIndex = -1;
    int actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(100L, 200L), 1.0);
    expectedIndex = 0;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(300L, 400L), 2.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(0L, 50L), 3.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(150L, 200L), 4.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/7b -t org.jfree.data.time.junit.TimePeriodValuesTests::newTestMethod1
org/jfree/data/time/junit/TimePeriodValuesTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 1
runTest
trigger_code=public void testGetMaxMiddleIndex() {
    TimePeriodValues s = new TimePeriodValues("Test");
    int expectedIndex = -1;
    int actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(100L, 200L), 1.0);
    expectedIndex = 0;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(300L, 400L), 2.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(0L, 50L), 3.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(150L, 200L), 4.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
}
, check_out_path=/jTrans/Eval/src/Chart/7f, test_class_path=org/jfree/data/time/junit/TimePeriodValuesTests.java
test_code_path=/jTrans/Eval/src/Chart/7f/tests
trigger_method_lines=public void testGetMaxMiddleIndex() {
    TimePeriodValues s = new TimePeriodValues("Test");
    int expectedIndex = -1;
    int actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(100L, 200L), 1.0);
    expectedIndex = 0;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(300L, 400L), 2.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(0L, 50L), 3.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
    
    s.add(new SimpleTimePeriod(150L, 200L), 4.0);
    expectedIndex = 1;
    actualIndex = s.getMaxMiddleIndex();
    Assert.assertEquals(expectedIndex, actualIndex);
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/7f -t org.jfree.data.time.junit.TimePeriodValuesTests::newTestMethod1
org/jfree/data/time/junit/TimePeriodValuesTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 0
-----------------------------------------------
res_in_bug=Test failed, res_in_fix=Test passed
unit_res_in_bug=Test failed,unit_res_in_fix=Test failed,oracle_res_in_bug=Test failed,oracle_res_in_fix=Test passed
