Getting Chart-22 focal context...
focal_context=package org.jfree.data;
import java.io.Serializable;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
/**
 * A data structure that stores zero, one or many objects, where each object is
 * associated with two keys (a 'row' key and a 'column' key).
 */
public class KeyedObjects2D implements Cloneable, Serializable {
    private static final long serialVersionUID = -1015873563138522374L;
    private List rowKeys;
    private List columnKeys;
    private List rows;
    /**
     * Removes an entire column from the table.
     *
     * @param columnIndex  the column index.
     * 
     * @see #removeRow(int)
     */
    public void removeColumn(int columnIndex) {
        Comparable columnKey = getColumnKey(columnIndex);
        removeColumn(columnKey);
    }
    /**
     * Returns the object for the given row and column keys.
     *
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     *
     * @return The object (possibly <code>null</code>).
     * 
     * @throws IllegalArgumentException if <code>rowKey<code> or 
     *         <code>columnKey</code> is <code>null</code>.
     * @throws UnknownKeyException if <code>rowKey</code> or 
     *         <code>columnKey</code> is not recognised.
     */
    public Object getObject(Comparable rowKey, Comparable columnKey) {
        if (rowKey == null) {
            throw new IllegalArgumentException("Null 'rowKey' argument.");
        }
        if (columnKey == null) {
            throw new IllegalArgumentException("Null 'columnKey' argument.");
        }
        int row = this.rowKeys.indexOf(rowKey);
        if (row < 0) {
            throw new UnknownKeyException("Row key (" + rowKey 
                    + ") not recognised.");
        }
        int column = this.columnKeys.indexOf(columnKey);
        if (column < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        if (row >= 0) {
        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
            return rowData.getObject(columnKey);
        }
        else {
            return null;
        }
    }
    /**
     * Removes an entire row from the table.
     *
     * @param rowIndex  the row index.
     * 
     * @see #removeColumn(int)
     */
    public void removeRow(int rowIndex) {
        this.rowKeys.remove(rowIndex);
        this.rows.remove(rowIndex);
    }
    /**
     * Tests this object for equality with an arbitrary object.
     *
     * @param obj  the object to test (<code>null</code> permitted).
     *
     * @return A boolean.
     */
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof KeyedObjects2D)) {
            return false;
        }
        
        KeyedObjects2D that = (KeyedObjects2D) obj;
        if (!getRowKeys().equals(that.getRowKeys())) {
            return false;
        }
        if (!getColumnKeys().equals(that.getColumnKeys())) {
            return false;
        }
        int rowCount = getRowCount();
        if (rowCount != that.getRowCount()) {
            return false;
        }
        int colCount = getColumnCount();
        if (colCount != that.getColumnCount()) {
            return false;
        }
        for (int r = 0; r < rowCount; r++) {
            for (int c = 0; c < colCount; c++) {
                Object v1 = getObject(r, c);
                Object v2 = that.getObject(r, c);
                if (v1 == null) {
                    if (v2 != null) {
                        return false;
                    }
                }
                else {
                    if (!v1.equals(v2)) {
                        return false;
                    }
                }
            }
        }
        return true;
    }
    /**
     * Removes an entire column from the table.
     *
     * @param columnKey  the column key (<code>null</code> not permitted).
     * 
     * @throws UnknownKeyException if <code>rowKey</code> is not recognised.
     * 
     * @see #removeRow(Comparable)
     */
    public void removeColumn(Comparable columnKey) {
        int index = getColumnIndex(columnKey);
        if (index < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        Iterator iterator = this.rows.iterator();
        while (iterator.hasNext()) {
            KeyedObjects rowData = (KeyedObjects) iterator.next();
                rowData.removeValue(columnKey);
        }
        this.columnKeys.remove(columnKey);
    }
    /**
     * Removes an object from the table by setting it to <code>null</code>.  If
     * all the objects in the specified row and/or column are now 
     * <code>null</code>, the row and/or column is removed from the table.
     *
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     * 
     * @see #addObject(Object, Comparable, Comparable)
     */
    public void removeObject(Comparable rowKey, Comparable columnKey) {
        setObject(null, rowKey, columnKey);
        
        // 1. check whether the row is now empty.
        boolean allNull = true;
        int rowIndex = getRowIndex(rowKey);
        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);

        for (int item = 0, itemCount = row.getItemCount(); item < itemCount; 
             item++) {
            if (row.getObject(item) != null) {
                allNull = false;
                break;
            }
        }
        
        if (allNull) {
            this.rowKeys.remove(rowIndex);
            this.rows.remove(rowIndex);
        }
        
        // 2. check whether the column is now empty.
        
        
    }
}

Getting Chart-22 test prefix...
oracle_focal_context=package org.jfree.data;
import java.io.Serializable;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
/**
 * A data structure that stores zero, one or many objects, where each object is
 * associated with two keys (a 'row' key and a 'column' key).
 */
public class KeyedObjects2D implements Cloneable, Serializable {
    private static final long serialVersionUID = -1015873563138522374L;
    private List rowKeys;
    private List columnKeys;
    private List rows;
    /**
     * Returns the column count.
     *
     * @return The column count.
     * 
     * @see #getRowCount()
     */
    public int getColumnCount() {
        return this.columnKeys.size();
    }
    /**
     * Adds or updates an object.
     *
     * @param object  the object.
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     */
    public void setObject(Object object, Comparable rowKey, 
            Comparable columnKey) {

        if (rowKey == null) {
            throw new IllegalArgumentException("Null 'rowKey' argument.");
        }
        if (columnKey == null) {
            throw new IllegalArgumentException("Null 'columnKey' argument.");
        }
        KeyedObjects row;
        int rowIndex = this.rowKeys.indexOf(rowKey);
        if (rowIndex >= 0) {
            row = (KeyedObjects) this.rows.get(rowIndex);
        }
        else {
            this.rowKeys.add(rowKey);
            row = new KeyedObjects();
            this.rows.add(row);
        }
        row.setObject(columnKey, object);
        int columnIndex = this.columnKeys.indexOf(columnKey);
        if (columnIndex < 0) {
            this.columnKeys.add(columnKey);
        }

    }
    /**
     * Returns the object for a given row and column.
     *
     * @param row  the row index (in the range 0 to getRowCount() - 1).
     * @param column  the column index (in the range 0 to getColumnCount() - 1).
     *
     * @return The object (possibly <code>null</code>).
     * 
     * @see #getObject(Comparable, Comparable)
     */
    public Object getObject(int row, int column) {
        Object result = null;
        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
        if (rowData != null) {
            Comparable columnKey = (Comparable) this.columnKeys.get(column);
            if (columnKey != null) {
                int index = rowData.getIndex(columnKey);
                if (index >= 0) {
                    result = rowData.getObject(columnKey);
                }
            }
        }
        return result;
    }
    /**
     * Returns the object for the given row and column keys.
     *
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     *
     * @return The object (possibly <code>null</code>).
     * 
     * @throws IllegalArgumentException if <code>rowKey<code> or 
     *         <code>columnKey</code> is <code>null</code>.
     * @throws UnknownKeyException if <code>rowKey</code> or 
     *         <code>columnKey</code> is not recognised.
     */
    public Object getObject(Comparable rowKey, Comparable columnKey) {
        if (rowKey == null) {
            throw new IllegalArgumentException("Null 'rowKey' argument.");
        }
        if (columnKey == null) {
            throw new IllegalArgumentException("Null 'columnKey' argument.");
        }
        int row = this.rowKeys.indexOf(rowKey);
        if (row < 0) {
            throw new UnknownKeyException("Row key (" + rowKey 
                    + ") not recognised.");
        }
        int column = this.columnKeys.indexOf(columnKey);
        if (column < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        if (row >= 0) {
        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
            return rowData.getObject(columnKey);
        }
        else {
            return null;
        }
    }
    /**
     * Creates a new instance (initially empty).
     */
    public KeyedObjects2D() {
        this.rowKeys = new java.util.ArrayList();
        this.columnKeys = new java.util.ArrayList();
        this.rows = new java.util.ArrayList();
    }
    /**
     * Removes an entire column from the table.
     *
     * @param columnIndex  the column index.
     * 
     * @see #removeRow(int)
     */
    public void removeColumn(int columnIndex) {
        Comparable columnKey = getColumnKey(columnIndex);
        removeColumn(columnKey);
    }
    /**
     * Removes an entire column from the table.
     *
     * @param columnKey  the column key (<code>null</code> not permitted).
     * 
     * @throws UnknownKeyException if <code>rowKey</code> is not recognised.
     * 
     * @see #removeRow(Comparable)
     */
    public void removeColumn(Comparable columnKey) {
        int index = getColumnIndex(columnKey);
        if (index < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        Iterator iterator = this.rows.iterator();
        while (iterator.hasNext()) {
            KeyedObjects rowData = (KeyedObjects) iterator.next();
                rowData.removeValue(columnKey);
        }
        this.columnKeys.remove(columnKey);
    }
}

test_class_path=org/jfree/data/junit/KeyedObjects2DTests.java, test_prefix=    public void testRemoveColumnByKey() {
        KeyedObjects2D data = new KeyedObjects2D();
        data.setObject("Obj1", "R1", "C1");
        data.setObject("Obj2", "R2", "C2");
        data.removeColumn("C2");
        _tmp_var_0_ = 1;
        _tmp_var_1_ =  data.getColumnCount();
        $ASSERT$
        _tmp_var_2_ = "Obj1";
        _tmp_var_3_ =  data.getObject(0, 0);
        $ASSERT$
        
        // try unknown column key
        boolean pass = false;
        try {
            data.removeColumn("XXX");
        }
        catch ($EXCEPTION$ e) {
            pass = true;
        }
        _tmp_var_4_ = pass;
        $ASSERT$
        
        // try null column key
        pass = false;
        try {
            data.removeColumn(null);
        }
        catch ($EXCEPTION$ e) {
            pass = true;
        }
        _tmp_var_5_ = pass;
        $ASSERT$
    }

Constructing unit test prompt for Chart-22
unit_test_prompt=# Java Program:
A java program with one or more bugs.
```
package org.jfree.data;
import java.io.Serializable;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
/**
 * A data structure that stores zero, one or many objects, where each object is
 * associated with two keys (a 'row' key and a 'column' key).
 */
public class KeyedObjects2D implements Cloneable, Serializable {
    private static final long serialVersionUID = -1015873563138522374L;
    private List rowKeys;
    private List columnKeys;
    private List rows;
    /**
     * Removes an entire column from the table.
     *
     * @param columnIndex  the column index.
     * 
     * @see #removeRow(int)
     */
    public void removeColumn(int columnIndex) {
        Comparable columnKey = getColumnKey(columnIndex);
        removeColumn(columnKey);
    }
    /**
     * Returns the object for the given row and column keys.
     *
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     *
     * @return The object (possibly <code>null</code>).
     * 
     * @throws IllegalArgumentException if <code>rowKey<code> or 
     *         <code>columnKey</code> is <code>null</code>.
     * @throws UnknownKeyException if <code>rowKey</code> or 
     *         <code>columnKey</code> is not recognised.
     */
    public Object getObject(Comparable rowKey, Comparable columnKey) {
        if (rowKey == null) {
            throw new IllegalArgumentException("Null 'rowKey' argument.");
        }
        if (columnKey == null) {
            throw new IllegalArgumentException("Null 'columnKey' argument.");
        }
        int row = this.rowKeys.indexOf(rowKey);
        if (row < 0) {
            throw new UnknownKeyException("Row key (" + rowKey 
                    + ") not recognised.");
        }
        int column = this.columnKeys.indexOf(columnKey);
        if (column < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        if (row >= 0) {
        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
            return rowData.getObject(columnKey);
        }
        else {
            return null;
        }
    }
    /**
     * Removes an entire row from the table.
     *
     * @param rowIndex  the row index.
     * 
     * @see #removeColumn(int)
     */
    public void removeRow(int rowIndex) {
        this.rowKeys.remove(rowIndex);
        this.rows.remove(rowIndex);
    }
    /**
     * Tests this object for equality with an arbitrary object.
     *
     * @param obj  the object to test (<code>null</code> permitted).
     *
     * @return A boolean.
     */
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof KeyedObjects2D)) {
            return false;
        }
        
        KeyedObjects2D that = (KeyedObjects2D) obj;
        if (!getRowKeys().equals(that.getRowKeys())) {
            return false;
        }
        if (!getColumnKeys().equals(that.getColumnKeys())) {
            return false;
        }
        int rowCount = getRowCount();
        if (rowCount != that.getRowCount()) {
            return false;
        }
        int colCount = getColumnCount();
        if (colCount != that.getColumnCount()) {
            return false;
        }
        for (int r = 0; r < rowCount; r++) {
            for (int c = 0; c < colCount; c++) {
                Object v1 = getObject(r, c);
                Object v2 = that.getObject(r, c);
                if (v1 == null) {
                    if (v2 != null) {
                        return false;
                    }
                }
                else {
                    if (!v1.equals(v2)) {
                        return false;
                    }
                }
            }
        }
        return true;
    }
    /**
     * Removes an entire column from the table.
     *
     * @param columnKey  the column key (<code>null</code> not permitted).
     * 
     * @throws UnknownKeyException if <code>rowKey</code> is not recognised.
     * 
     * @see #removeRow(Comparable)
     */
    public void removeColumn(Comparable columnKey) {
        int index = getColumnIndex(columnKey);
        if (index < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        Iterator iterator = this.rows.iterator();
        while (iterator.hasNext()) {
            KeyedObjects rowData = (KeyedObjects) iterator.next();
                rowData.removeValue(columnKey);
        }
        this.columnKeys.remove(columnKey);
    }
    /**
     * Removes an object from the table by setting it to <code>null</code>.  If
     * all the objects in the specified row and/or column are now 
     * <code>null</code>, the row and/or column is removed from the table.
     *
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     * 
     * @see #addObject(Object, Comparable, Comparable)
     */
    public void removeObject(Comparable rowKey, Comparable columnKey) {
        setObject(null, rowKey, columnKey);
        
        // 1. check whether the row is now empty.
        boolean allNull = true;
        int rowIndex = getRowIndex(rowKey);
        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);

        for (int item = 0, itemCount = row.getItemCount(); item < itemCount; 
             item++) {
            if (row.getObject(item) != null) {
                allNull = false;
                break;
            }
        }
        
        if (allNull) {
            this.rowKeys.remove(rowIndex);
            this.rows.remove(rowIndex);
        }
        
        // 2. check whether the column is now empty.
        
        
    }
}

```
# Test Code:
A test method that can reveal the bug of the java program.
```
public void test
Invoking LLM(gpt-3.5-turbo) for Chart-22 unit test
unit_test_response=KeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject(1, "row1", "col1");
    data.addObject(2, "row2", "col2");
    data.addObject(3, "row3", "col3");
    data.removeObject("row2", "col2");
    assertNull(data.getObject("row2", "col2"));
    assertEquals(2, data.getRowCount());
    assertEquals(3, data.getColumnCount());
}
```
This test method adds three objects with their respective row and column keys to a `KeyedObjects2D` instance. Then, it removes the second object using the `removeObject` method and asserts that the removed object cannot be retrieved using `getObject`. Finally, it asserts that the row count is 2 and the column count is 3. This test method can reveal a bug in the `removeObject` method if it fails any of the assertions.
Constructing test code for Chart-22 unit test
Finished constructing test code for Chart-22 unit test
Finished invoking LLM(gpt-3.5-turbo) for Chart-22 unit test
Constructing oracle test prompt for Chart-22
oracle_test_prompt=# Java Program:
A java program with one or more bugs.
```
package org.jfree.data;
import java.io.Serializable;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
/**
 * A data structure that stores zero, one or many objects, where each object is
 * associated with two keys (a 'row' key and a 'column' key).
 */
public class KeyedObjects2D implements Cloneable, Serializable {
    private static final long serialVersionUID = -1015873563138522374L;
    private List rowKeys;
    private List columnKeys;
    private List rows;
    /**
     * Returns the column count.
     *
     * @return The column count.
     * 
     * @see #getRowCount()
     */
    public int getColumnCount() {
        return this.columnKeys.size();
    }
    /**
     * Adds or updates an object.
     *
     * @param object  the object.
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     */
    public void setObject(Object object, Comparable rowKey, 
            Comparable columnKey) {

        if (rowKey == null) {
            throw new IllegalArgumentException("Null 'rowKey' argument.");
        }
        if (columnKey == null) {
            throw new IllegalArgumentException("Null 'columnKey' argument.");
        }
        KeyedObjects row;
        int rowIndex = this.rowKeys.indexOf(rowKey);
        if (rowIndex >= 0) {
            row = (KeyedObjects) this.rows.get(rowIndex);
        }
        else {
            this.rowKeys.add(rowKey);
            row = new KeyedObjects();
            this.rows.add(row);
        }
        row.setObject(columnKey, object);
        int columnIndex = this.columnKeys.indexOf(columnKey);
        if (columnIndex < 0) {
            this.columnKeys.add(columnKey);
        }

    }
    /**
     * Returns the object for a given row and column.
     *
     * @param row  the row index (in the range 0 to getRowCount() - 1).
     * @param column  the column index (in the range 0 to getColumnCount() - 1).
     *
     * @return The object (possibly <code>null</code>).
     * 
     * @see #getObject(Comparable, Comparable)
     */
    public Object getObject(int row, int column) {
        Object result = null;
        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
        if (rowData != null) {
            Comparable columnKey = (Comparable) this.columnKeys.get(column);
            if (columnKey != null) {
                int index = rowData.getIndex(columnKey);
                if (index >= 0) {
                    result = rowData.getObject(columnKey);
                }
            }
        }
        return result;
    }
    /**
     * Returns the object for the given row and column keys.
     *
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     *
     * @return The object (possibly <code>null</code>).
     * 
     * @throws IllegalArgumentException if <code>rowKey<code> or 
     *         <code>columnKey</code> is <code>null</code>.
     * @throws UnknownKeyException if <code>rowKey</code> or 
     *         <code>columnKey</code> is not recognised.
     */
    public Object getObject(Comparable rowKey, Comparable columnKey) {
        if (rowKey == null) {
            throw new IllegalArgumentException("Null 'rowKey' argument.");
        }
        if (columnKey == null) {
            throw new IllegalArgumentException("Null 'columnKey' argument.");
        }
        int row = this.rowKeys.indexOf(rowKey);
        if (row < 0) {
            throw new UnknownKeyException("Row key (" + rowKey 
                    + ") not recognised.");
        }
        int column = this.columnKeys.indexOf(columnKey);
        if (column < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        if (row >= 0) {
        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
            return rowData.getObject(columnKey);
        }
        else {
            return null;
        }
    }
    /**
     * Creates a new instance (initially empty).
     */
    public KeyedObjects2D() {
        this.rowKeys = new java.util.ArrayList();
        this.columnKeys = new java.util.ArrayList();
        this.rows = new java.util.ArrayList();
    }
    /**
     * Removes an entire column from the table.
     *
     * @param columnIndex  the column index.
     * 
     * @see #removeRow(int)
     */
    public void removeColumn(int columnIndex) {
        Comparable columnKey = getColumnKey(columnIndex);
        removeColumn(columnKey);
    }
    /**
     * Removes an entire column from the table.
     *
     * @param columnKey  the column key (<code>null</code> not permitted).
     * 
     * @throws UnknownKeyException if <code>rowKey</code> is not recognised.
     * 
     * @see #removeRow(Comparable)
     */
    public void removeColumn(Comparable columnKey) {
        int index = getColumnIndex(columnKey);
        if (index < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        Iterator iterator = this.rows.iterator();
        while (iterator.hasNext()) {
            KeyedObjects rowData = (KeyedObjects) iterator.next();
                rowData.removeValue(columnKey);
        }
        this.columnKeys.remove(columnKey);
    }
}

```
# Incomplete Test Code:
A test method that is incomplete. To complete the test code, $ASSERT$ should be replaced with assert statements (assertTrue, assertFalse, fail, assertEquals, assertNotEquals, assertArrayEquals, assertNotNull, assertNull, assertSame, assertNotSame), and $EXCEPTION$ should be replaced with exception class. Other statements stay the same.
```
    public void testRemoveColumnByKey() {
        KeyedObjects2D data = new KeyedObjects2D();
        data.setObject("Obj1", "R1", "C1");
        data.setObject("Obj2", "R2", "C2");
        data.removeColumn("C2");
        _tmp_var_0_ = 1;
        _tmp_var_1_ =  data.getColumnCount();
        $ASSERT$
        _tmp_var_2_ = "Obj1";
        _tmp_var_3_ =  data.getObject(0, 0);
        $ASSERT$
        
        // try unknown column key
        boolean pass = false;
        try {
            data.removeColumn("XXX");
        }
        catch ($EXCEPTION$ e) {
            pass = true;
        }
        _tmp_var_4_ = pass;
        $ASSERT$
        
        // try null column key
        pass = false;
        try {
            data.removeColumn(null);
        }
        catch ($EXCEPTION$ e) {
            pass = true;
        }
        _tmp_var_5_ = pass;
        $ASSERT$
    }

```
# Test Code:
A test method that completes the incomplete test code. And it contains no $ASSERT$ or $EXCEPTION$
```
public void test
Invoking LLM(gpt-3.5-turbo) for Chart-22 oracle test
oracle_test_response=RemoveColumnByKey() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.setObject("Obj1", "R1", "C1");
    data.setObject("Obj2", "R2", "C2");
    data.removeColumn("C2");
    assertEquals(1, data.getColumnCount());
    assertEquals("Obj1", data.getObject(0, 0));

    // try unknown column key
    boolean pass = false;
    try {
        data.removeColumn("XXX");
    } catch (UnknownKeyException e) {
        pass = true;
    }
    assertTrue(pass);

    // try null column key
    pass = false;
    try {
        data.removeColumn(null);
    } catch (IllegalArgumentException e) {
        pass = true;
    }
    assertTrue(pass);
}
Constructing test code for Chart-22 oracle test
Finished constructing test code for Chart-22 oracle test
Finished invoking LLM(gpt-3.5-turbo) for Chart-22 oracle test
Checking out Chart 22b...
checkout_cmd=defects4j checkout -p Chart -v 22b -w /jTrans/Eval/src/Chart/22b >/dev/null 2>&1
Finished checking out Chart 22b.
Checking out Chart 22f...
checkout_cmd=defects4j checkout -p Chart -v 22f -w /jTrans/Eval/src/Chart/22f >/dev/null 2>&1
Finished checking out Chart 22f.
runTestWithRetry NO.1 try
runTest
trigger_code=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject(1, "row1", "col1");
    data.addObject(2, "row2", "col2");
    data.addObject(3, "row3", "col3");
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}
, check_out_path=/jTrans/Eval/src/Chart/22b, test_class_path=org/jfree/data/junit/KeyedObjects2DTests.java
test_code_path=/jTrans/Eval/src/Chart/22b/tests
trigger_method_lines=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject(1, "row1", "col1");
    data.addObject(2, "row2", "col2");
    data.addObject(3, "row3", "col3");
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/22b -t org.jfree.data.junit.KeyedObjects2DTests::newTestMethod1
org/jfree/data/junit/KeyedObjects2DTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ FAIL
Executed command:  cd /jTrans/Eval/src/Chart/22b && /workspace/defects4j/major/bin/ant -f /workspace/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/workspace/defects4j -Dd4j.dir.projects=/workspace/defects4j/framework/projects -Dbasedir=/jTrans/Eval/src/Chart/22b -Dbuild.compiler=javac1.7  compile.tests 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /workspace/defects4j/framework/projects/defects4j.build.xml

initialise:

compile:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/22b/build
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:57: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 558 source files to /jTrans/Eval/src/Chart/22b/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Transparency.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AlphaComposite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Composite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/AffineTransform.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/ImageIcon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/EventListenerList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InvalidObjectException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventObject.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/CharacterIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/FontMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Polygon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/LineMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/PathIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JScrollPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AWTEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Insets.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseMotionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PageFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/Printable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterJob.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFileChooser.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenuItem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JOptionPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPopupMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings
     [copy] Copying 1 file to /jTrans/Eval/src/Chart/22b/build/org/jfree/chart
     [copy] Copying 12 files to /jTrans/Eval/src/Chart/22b/build/org/jfree/chart
     [copy] Copying 9 files to /jTrans/Eval/src/Chart/22b/build/org/jfree/chart/plot
     [copy] Copying 10 files to /jTrans/Eval/src/Chart/22b/build/org/jfree/chart/editor
     [copy] Copying 5 files to /jTrans/Eval/src/Chart/22b/build/org/jfree/chart/ui

compile-experimental:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:106: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 26 source files to /jTrans/Eval/src/Chart/22b/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BorderLayout.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JSlider.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/ChangeEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/ChangeListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GridLayout.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JLabel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/EventListenerList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventObject.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Arc2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/GeneralPath.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/FontMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Area.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BorderLayout.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JSlider.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/ChangeEvent.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/ChangeListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GridLayout.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JLabel.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] 100 warnings

compile.tests:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/22b/build-tests
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:123: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 332 source files to /jTrans/Eval/src/Chart/22b/build-tests
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /jTrans/Eval/src/Chart/22b/tests/org/jfree/data/junit/KeyedObjects2DTests.java:432: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject(1, "row1", "col1");
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: int,String,String
    [javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
    [javac] /jTrans/Eval/src/Chart/22b/tests/org/jfree/data/junit/KeyedObjects2DTests.java:433: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject(2, "row2", "col2");
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: int,String,String
    [javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
    [javac] /jTrans/Eval/src/Chart/22b/tests/org/jfree/data/junit/KeyedObjects2DTests.java:434: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject(3, "row3", "col3");
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: int,String,String
    [javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
    [javac] Note: /jTrans/Eval/src/Chart/22b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] 3 errors
    [javac] 100 warnings

BUILD FAILED
runTest
trigger_code=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject(1, "row1", "col1");
    data.addObject(2, "row2", "col2");
    data.addObject(3, "row3", "col3");
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}
, check_out_path=/jTrans/Eval/src/Chart/22f, test_class_path=org/jfree/data/junit/KeyedObjects2DTests.java
test_code_path=/jTrans/Eval/src/Chart/22f/tests
trigger_method_lines=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject(1, "row1", "col1");
    data.addObject(2, "row2", "col2");
    data.addObject(3, "row3", "col3");
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/22f -t org.jfree.data.junit.KeyedObjects2DTests::newTestMethod1
org/jfree/data/junit/KeyedObjects2DTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ FAIL
Executed command:  cd /jTrans/Eval/src/Chart/22f && /workspace/defects4j/major/bin/ant -f /workspace/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/workspace/defects4j -Dd4j.dir.projects=/workspace/defects4j/framework/projects -Dbasedir=/jTrans/Eval/src/Chart/22f -Dbuild.compiler=javac1.7  compile.tests 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /workspace/defects4j/framework/projects/defects4j.build.xml

initialise:

compile:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/22f/build
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:57: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 558 source files to /jTrans/Eval/src/Chart/22f/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Transparency.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AlphaComposite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Composite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/AffineTransform.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/ImageIcon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/EventListenerList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InvalidObjectException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventObject.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/CharacterIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/FontMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Polygon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/LineMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/PathIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JScrollPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AWTEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Insets.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseMotionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PageFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/Printable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterJob.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFileChooser.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenuItem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JOptionPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPopupMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings
     [copy] Copying 1 file to /jTrans/Eval/src/Chart/22f/build/org/jfree/chart
     [copy] Copying 12 files to /jTrans/Eval/src/Chart/22f/build/org/jfree/chart
     [copy] Copying 9 files to /jTrans/Eval/src/Chart/22f/build/org/jfree/chart/plot
     [copy] Copying 10 files to /jTrans/Eval/src/Chart/22f/build/org/jfree/chart/editor
     [copy] Copying 5 files to /jTrans/Eval/src/Chart/22f/build/org/jfree/chart/ui

compile-experimental:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:106: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 26 source files to /jTrans/Eval/src/Chart/22f/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BorderLayout.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JSlider.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/ChangeEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/ChangeListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GridLayout.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JLabel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/EventListenerList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventObject.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Arc2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/GeneralPath.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/FontMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Area.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BorderLayout.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JSlider.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/ChangeEvent.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/ChangeListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GridLayout.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JLabel.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] 100 warnings

compile.tests:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/22f/build-tests
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:123: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 332 source files to /jTrans/Eval/src/Chart/22f/build-tests
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /jTrans/Eval/src/Chart/22f/tests/org/jfree/data/junit/KeyedObjects2DTests.java:432: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject(1, "row1", "col1");
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: int,String,String
    [javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
    [javac] /jTrans/Eval/src/Chart/22f/tests/org/jfree/data/junit/KeyedObjects2DTests.java:433: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject(2, "row2", "col2");
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: int,String,String
    [javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
    [javac] /jTrans/Eval/src/Chart/22f/tests/org/jfree/data/junit/KeyedObjects2DTests.java:434: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject(3, "row3", "col3");
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: int,String,String
    [javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
    [javac] Note: /jTrans/Eval/src/Chart/22f/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] 3 errors
    [javac] 100 warnings

BUILD FAILED
res_in_bug=Build failed, res_in_fix=Build failed
build_fail_error_message:

[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject(1, "row1", "col1");
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: int,String,String
[javac]   reason: actual argument int cannot be converted to Object by method invocation conversion

[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject(2, "row2", "col2");
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: int,String,String
[javac]   reason: actual argument int cannot be converted to Object by method invocation conversion

[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject(3, "row3", "col3");
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: int,String,String
[javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
[javac] Note: /jTrans/Eval/src/Chart/22b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
[javac] Note: Recompile with -Xlint:deprecation for details.

[user]:# Java Program:
A java program with one or more bugs.
```
package org.jfree.data;
import java.io.Serializable;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
/**
 * A data structure that stores zero, one or many objects, where each object is
 * associated with two keys (a 'row' key and a 'column' key).
 */
public class KeyedObjects2D implements Cloneable, Serializable {
    private static final long serialVersionUID = -1015873563138522374L;
    private List rowKeys;
    private List columnKeys;
    private List rows;
    /**
     * Removes an entire column from the table.
     *
     * @param columnIndex  the column index.
     * 
     * @see #removeRow(int)
     */
    public void removeColumn(int columnIndex) {
        Comparable columnKey = getColumnKey(columnIndex);
        removeColumn(columnKey);
    }
    /**
     * Returns the object for the given row and column keys.
     *
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     *
     * @return The object (possibly <code>null</code>).
     * 
     * @throws IllegalArgumentException if <code>rowKey<code> or 
     *         <code>columnKey</code> is <code>null</code>.
     * @throws UnknownKeyException if <code>rowKey</code> or 
     *         <code>columnKey</code> is not recognised.
     */
    public Object getObject(Comparable rowKey, Comparable columnKey) {
        if (rowKey == null) {
            throw new IllegalArgumentException("Null 'rowKey' argument.");
        }
        if (columnKey == null) {
            throw new IllegalArgumentException("Null 'columnKey' argument.");
        }
        int row = this.rowKeys.indexOf(rowKey);
        if (row < 0) {
            throw new UnknownKeyException("Row key (" + rowKey 
                    + ") not recognised.");
        }
        int column = this.columnKeys.indexOf(columnKey);
        if (column < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        if (row >= 0) {
        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
            return rowData.getObject(columnKey);
        }
        else {
            return null;
        }
    }
    /**
     * Removes an entire row from the table.
     *
     * @param rowIndex  the row index.
     * 
     * @see #removeColumn(int)
     */
    public void removeRow(int rowIndex) {
        this.rowKeys.remove(rowIndex);
        this.rows.remove(rowIndex);
    }
    /**
     * Tests this object for equality with an arbitrary object.
     *
     * @param obj  the object to test (<code>null</code> permitted).
     *
     * @return A boolean.
     */
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof KeyedObjects2D)) {
            return false;
        }
        
        KeyedObjects2D that = (KeyedObjects2D) obj;
        if (!getRowKeys().equals(that.getRowKeys())) {
            return false;
        }
        if (!getColumnKeys().equals(that.getColumnKeys())) {
            return false;
        }
        int rowCount = getRowCount();
        if (rowCount != that.getRowCount()) {
            return false;
        }
        int colCount = getColumnCount();
        if (colCount != that.getColumnCount()) {
            return false;
        }
        for (int r = 0; r < rowCount; r++) {
            for (int c = 0; c < colCount; c++) {
                Object v1 = getObject(r, c);
                Object v2 = that.getObject(r, c);
                if (v1 == null) {
                    if (v2 != null) {
                        return false;
                    }
                }
                else {
                    if (!v1.equals(v2)) {
                        return false;
                    }
                }
            }
        }
        return true;
    }
    /**
     * Removes an entire column from the table.
     *
     * @param columnKey  the column key (<code>null</code> not permitted).
     * 
     * @throws UnknownKeyException if <code>rowKey</code> is not recognised.
     * 
     * @see #removeRow(Comparable)
     */
    public void removeColumn(Comparable columnKey) {
        int index = getColumnIndex(columnKey);
        if (index < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        Iterator iterator = this.rows.iterator();
        while (iterator.hasNext()) {
            KeyedObjects rowData = (KeyedObjects) iterator.next();
                rowData.removeValue(columnKey);
        }
        this.columnKeys.remove(columnKey);
    }
    /**
     * Removes an object from the table by setting it to <code>null</code>.  If
     * all the objects in the specified row and/or column are now 
     * <code>null</code>, the row and/or column is removed from the table.
     *
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     * 
     * @see #addObject(Object, Comparable, Comparable)
     */
    public void removeObject(Comparable rowKey, Comparable columnKey) {
        setObject(null, rowKey, columnKey);
        
        // 1. check whether the row is now empty.
        boolean allNull = true;
        int rowIndex = getRowIndex(rowKey);
        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);

        for (int item = 0, itemCount = row.getItemCount(); item < itemCount; 
             item++) {
            if (row.getObject(item) != null) {
                allNull = false;
                break;
            }
        }
        
        if (allNull) {
            this.rowKeys.remove(rowIndex);
            this.rows.remove(rowIndex);
        }
        
        // 2. check whether the column is now empty.
        
        
    }
}

```
# Test Code:
A test method that can reveal the bug of the java program.
```
public void test

[assistant]:KeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject(1, "row1", "col1");
    data.addObject(2, "row2", "col2");
    data.addObject(3, "row3", "col3");
    data.removeObject("row2", "col2");
    assertNull(data.getObject("row2", "col2"));
    assertEquals(2, data.getRowCount());
    assertEquals(3, data.getColumnCount());
}
```
This test method adds three objects with their respective row and column keys to a `KeyedObjects2D` instance. Then, it removes the second object using the `removeObject` method and asserts that the removed object cannot be retrieved using `getObject`. Finally, it asserts that the row count is 2 and the column count is 3. This test method can reveal a bug in the `removeObject` method if it fails any of the assertions.

[user]:The test method you provided is not able to be built. Please complete the markdown file again with the error information. The error occurred while building the test method is:
[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject(1, "row1", "col1");
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: int,String,String
[javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject(2, "row2", "col2");
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: int,String,String
[javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject(3, "row3", "col3");
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: int,String,String
[javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
[javac] Note: /jTrans/Eval/src/Chart/22b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
[javac] Note: Recompile with -Xlint:deprecation for details.

```
public void test

Invoking LLM(gpt-3.5-turbo) for Chart-22 NO.2 try
runTestWithRetry NO.2 try
runTest
trigger_code=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject("row1", "col1", 1);
    data.addObject("row2", "col2", 2);
    data.addObject("row3", "col3", 3);
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}
, check_out_path=/jTrans/Eval/src/Chart/22b, test_class_path=org/jfree/data/junit/KeyedObjects2DTests.java
test_code_path=/jTrans/Eval/src/Chart/22b/tests
trigger_method_lines=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject("row1", "col1", 1);
    data.addObject("row2", "col2", 2);
    data.addObject("row3", "col3", 3);
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/22b -t org.jfree.data.junit.KeyedObjects2DTests::newTestMethod1
org/jfree/data/junit/KeyedObjects2DTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ FAIL
Executed command:  cd /jTrans/Eval/src/Chart/22b && /workspace/defects4j/major/bin/ant -f /workspace/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/workspace/defects4j -Dd4j.dir.projects=/workspace/defects4j/framework/projects -Dbasedir=/jTrans/Eval/src/Chart/22b -Dbuild.compiler=javac1.7  compile.tests 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /workspace/defects4j/framework/projects/defects4j.build.xml

initialise:

compile:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:57: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds

compile-experimental:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:106: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds

compile.tests:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:123: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 78 source files to /jTrans/Eval/src/Chart/22b/build-tests
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IndexOutOfBoundsException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IndexOutOfBoundsException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /jTrans/Eval/src/Chart/22b/tests/org/jfree/data/junit/KeyedObjects2DTests.java:432: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject("row1", "col1", 1);
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: String,String,int
    [javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion
    [javac] /jTrans/Eval/src/Chart/22b/tests/org/jfree/data/junit/KeyedObjects2DTests.java:433: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject("row2", "col2", 2);
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: String,String,int
    [javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion
    [javac] /jTrans/Eval/src/Chart/22b/tests/org/jfree/data/junit/KeyedObjects2DTests.java:434: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject("row3", "col3", 3);
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: String,String,int
    [javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/System.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/System.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NullPointerException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NullPointerException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassCastException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 3 errors
    [javac] 100 warnings

BUILD FAILED
runTest
trigger_code=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject("row1", "col1", 1);
    data.addObject("row2", "col2", 2);
    data.addObject("row3", "col3", 3);
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}
, check_out_path=/jTrans/Eval/src/Chart/22f, test_class_path=org/jfree/data/junit/KeyedObjects2DTests.java
test_code_path=/jTrans/Eval/src/Chart/22f/tests
trigger_method_lines=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject("row1", "col1", 1);
    data.addObject("row2", "col2", 2);
    data.addObject("row3", "col3", 3);
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/22f -t org.jfree.data.junit.KeyedObjects2DTests::newTestMethod1
org/jfree/data/junit/KeyedObjects2DTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ FAIL
Executed command:  cd /jTrans/Eval/src/Chart/22f && /workspace/defects4j/major/bin/ant -f /workspace/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/workspace/defects4j -Dd4j.dir.projects=/workspace/defects4j/framework/projects -Dbasedir=/jTrans/Eval/src/Chart/22f -Dbuild.compiler=javac1.7  compile.tests 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /workspace/defects4j/framework/projects/defects4j.build.xml

initialise:

compile:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:57: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds

compile-experimental:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:106: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds

compile.tests:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:123: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 78 source files to /jTrans/Eval/src/Chart/22f/build-tests
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IndexOutOfBoundsException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IndexOutOfBoundsException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /jTrans/Eval/src/Chart/22f/tests/org/jfree/data/junit/KeyedObjects2DTests.java:432: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject("row1", "col1", 1);
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: String,String,int
    [javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion
    [javac] /jTrans/Eval/src/Chart/22f/tests/org/jfree/data/junit/KeyedObjects2DTests.java:433: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject("row2", "col2", 2);
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: String,String,int
    [javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion
    [javac] /jTrans/Eval/src/Chart/22f/tests/org/jfree/data/junit/KeyedObjects2DTests.java:434: error: method addObject in class KeyedObjects2D cannot be applied to given types;
    [javac]     data.addObject("row3", "col3", 3);
    [javac]         ^
    [javac]   required: Object,Comparable,Comparable
    [javac]   found: String,String,int
    [javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/System.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/System.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NullPointerException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NullPointerException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassCastException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 3 errors
    [javac] 100 warnings

BUILD FAILED
res_in_bug=Build failed, res_in_fix=Build failed
build_fail_error_message:

[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject("row1", "col1", 1);
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: String,String,int
[javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion

[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject("row2", "col2", 2);
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: String,String,int
[javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion

[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject("row3", "col3", 3);
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: String,String,int
[javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion

[user]:# Java Program:
A java program with one or more bugs.
```
package org.jfree.data;
import java.io.Serializable;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
/**
 * A data structure that stores zero, one or many objects, where each object is
 * associated with two keys (a 'row' key and a 'column' key).
 */
public class KeyedObjects2D implements Cloneable, Serializable {
    private static final long serialVersionUID = -1015873563138522374L;
    private List rowKeys;
    private List columnKeys;
    private List rows;
    /**
     * Removes an entire column from the table.
     *
     * @param columnIndex  the column index.
     * 
     * @see #removeRow(int)
     */
    public void removeColumn(int columnIndex) {
        Comparable columnKey = getColumnKey(columnIndex);
        removeColumn(columnKey);
    }
    /**
     * Returns the object for the given row and column keys.
     *
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     *
     * @return The object (possibly <code>null</code>).
     * 
     * @throws IllegalArgumentException if <code>rowKey<code> or 
     *         <code>columnKey</code> is <code>null</code>.
     * @throws UnknownKeyException if <code>rowKey</code> or 
     *         <code>columnKey</code> is not recognised.
     */
    public Object getObject(Comparable rowKey, Comparable columnKey) {
        if (rowKey == null) {
            throw new IllegalArgumentException("Null 'rowKey' argument.");
        }
        if (columnKey == null) {
            throw new IllegalArgumentException("Null 'columnKey' argument.");
        }
        int row = this.rowKeys.indexOf(rowKey);
        if (row < 0) {
            throw new UnknownKeyException("Row key (" + rowKey 
                    + ") not recognised.");
        }
        int column = this.columnKeys.indexOf(columnKey);
        if (column < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        if (row >= 0) {
        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
            return rowData.getObject(columnKey);
        }
        else {
            return null;
        }
    }
    /**
     * Removes an entire row from the table.
     *
     * @param rowIndex  the row index.
     * 
     * @see #removeColumn(int)
     */
    public void removeRow(int rowIndex) {
        this.rowKeys.remove(rowIndex);
        this.rows.remove(rowIndex);
    }
    /**
     * Tests this object for equality with an arbitrary object.
     *
     * @param obj  the object to test (<code>null</code> permitted).
     *
     * @return A boolean.
     */
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof KeyedObjects2D)) {
            return false;
        }
        
        KeyedObjects2D that = (KeyedObjects2D) obj;
        if (!getRowKeys().equals(that.getRowKeys())) {
            return false;
        }
        if (!getColumnKeys().equals(that.getColumnKeys())) {
            return false;
        }
        int rowCount = getRowCount();
        if (rowCount != that.getRowCount()) {
            return false;
        }
        int colCount = getColumnCount();
        if (colCount != that.getColumnCount()) {
            return false;
        }
        for (int r = 0; r < rowCount; r++) {
            for (int c = 0; c < colCount; c++) {
                Object v1 = getObject(r, c);
                Object v2 = that.getObject(r, c);
                if (v1 == null) {
                    if (v2 != null) {
                        return false;
                    }
                }
                else {
                    if (!v1.equals(v2)) {
                        return false;
                    }
                }
            }
        }
        return true;
    }
    /**
     * Removes an entire column from the table.
     *
     * @param columnKey  the column key (<code>null</code> not permitted).
     * 
     * @throws UnknownKeyException if <code>rowKey</code> is not recognised.
     * 
     * @see #removeRow(Comparable)
     */
    public void removeColumn(Comparable columnKey) {
        int index = getColumnIndex(columnKey);
        if (index < 0) {
            throw new UnknownKeyException("Column key (" + columnKey 
                    + ") not recognised.");
        }
        Iterator iterator = this.rows.iterator();
        while (iterator.hasNext()) {
            KeyedObjects rowData = (KeyedObjects) iterator.next();
                rowData.removeValue(columnKey);
        }
        this.columnKeys.remove(columnKey);
    }
    /**
     * Removes an object from the table by setting it to <code>null</code>.  If
     * all the objects in the specified row and/or column are now 
     * <code>null</code>, the row and/or column is removed from the table.
     *
     * @param rowKey  the row key (<code>null</code> not permitted).
     * @param columnKey  the column key (<code>null</code> not permitted).
     * 
     * @see #addObject(Object, Comparable, Comparable)
     */
    public void removeObject(Comparable rowKey, Comparable columnKey) {
        setObject(null, rowKey, columnKey);
        
        // 1. check whether the row is now empty.
        boolean allNull = true;
        int rowIndex = getRowIndex(rowKey);
        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);

        for (int item = 0, itemCount = row.getItemCount(); item < itemCount; 
             item++) {
            if (row.getObject(item) != null) {
                allNull = false;
                break;
            }
        }
        
        if (allNull) {
            this.rowKeys.remove(rowIndex);
            this.rows.remove(rowIndex);
        }
        
        // 2. check whether the column is now empty.
        
        
    }
}

```
# Test Code:
A test method that can reveal the bug of the java program.
```
public void test

[assistant]:KeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject(1, "row1", "col1");
    data.addObject(2, "row2", "col2");
    data.addObject(3, "row3", "col3");
    data.removeObject("row2", "col2");
    assertNull(data.getObject("row2", "col2"));
    assertEquals(2, data.getRowCount());
    assertEquals(3, data.getColumnCount());
}
```
This test method adds three objects with their respective row and column keys to a `KeyedObjects2D` instance. Then, it removes the second object using the `removeObject` method and asserts that the removed object cannot be retrieved using `getObject`. Finally, it asserts that the row count is 2 and the column count is 3. This test method can reveal a bug in the `removeObject` method if it fails any of the assertions.

[user]:The test method you provided is not able to be built. Please complete the markdown file again with the error information. The error occurred while building the test method is:
[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject(1, "row1", "col1");
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: int,String,String
[javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject(2, "row2", "col2");
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: int,String,String
[javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject(3, "row3", "col3");
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: int,String,String
[javac]   reason: actual argument int cannot be converted to Object by method invocation conversion
[javac] Note: /jTrans/Eval/src/Chart/22b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
[javac] Note: Recompile with -Xlint:deprecation for details.

```
public void test

[assistant]:KeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject("row1", "col1", 1);
    data.addObject("row2", "col2", 2);
    data.addObject("row3", "col3", 3);
    data.removeObject("row2", "col2");
    assertNull(data.getObject("row2", "col2"));
    assertEquals(2, data.getRowCount());
    assertEquals(3, data.getColumnCount());
}
```
The error occurred because the `addObject` method expects an `Object` as the first parameter, but the test code passed an `int`. The corrected version of the test method has the `int` values as the last parameter in the `addObject` method call.

[user]:The test method you provided is not able to be built. Please complete the markdown file again with the error information. The error occurred while building the test method is:
[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject("row1", "col1", 1);
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: String,String,int
[javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion
[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject("row2", "col2", 2);
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: String,String,int
[javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion
[javac]error: method addObject in class KeyedObjects2D cannot be applied to given types;
[javac]     data.addObject("row3", "col3", 3);
[javac]         ^
[javac]   required: Object,Comparable,Comparable
[javac]   found: String,String,int
[javac]   reason: actual argument int cannot be converted to Comparable by method invocation conversion

```
public void test

Invoking LLM(gpt-3.5-turbo) for Chart-22 NO.3 try
runTestWithRetry NO.3 try
runTest
trigger_code=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject("row1", "col1", Integer.valueOf(1));
    data.addObject("row2", "col2", Integer.valueOf(2));
    data.addObject("row3", "col3", Integer.valueOf(3));
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}
, check_out_path=/jTrans/Eval/src/Chart/22b, test_class_path=org/jfree/data/junit/KeyedObjects2DTests.java
test_code_path=/jTrans/Eval/src/Chart/22b/tests
trigger_method_lines=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject("row1", "col1", Integer.valueOf(1));
    data.addObject("row2", "col2", Integer.valueOf(2));
    data.addObject("row3", "col3", Integer.valueOf(3));
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/22b -t org.jfree.data.junit.KeyedObjects2DTests::newTestMethod1
org/jfree/data/junit/KeyedObjects2DTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 1
runTest
trigger_code=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject("row1", "col1", Integer.valueOf(1));
    data.addObject("row2", "col2", Integer.valueOf(2));
    data.addObject("row3", "col3", Integer.valueOf(3));
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}
, check_out_path=/jTrans/Eval/src/Chart/22f, test_class_path=org/jfree/data/junit/KeyedObjects2DTests.java
test_code_path=/jTrans/Eval/src/Chart/22f/tests
trigger_method_lines=public void testKeyedObjects2D() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.addObject("row1", "col1", Integer.valueOf(1));
    data.addObject("row2", "col2", Integer.valueOf(2));
    data.addObject("row3", "col3", Integer.valueOf(3));
    data.removeObject("row2", "col2");
    Assert.assertNull(data.getObject("row2", "col2"));
    Assert.assertEquals(2, data.getRowCount());
    Assert.assertEquals(3, data.getColumnCount());
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/22f -t org.jfree.data.junit.KeyedObjects2DTests::newTestMethod1
org/jfree/data/junit/KeyedObjects2DTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 1
res_in_bug=Test failed, res_in_fix=Test failed
runTestWithRetry NO.1 try
runTest
trigger_code=public void testRemoveColumnByKey() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.setObject("Obj1", "R1", "C1");
    data.setObject("Obj2", "R2", "C2");
    data.removeColumn("C2");
    Assert.assertEquals(1, data.getColumnCount());
    Assert.assertEquals("Obj1", data.getObject(0, 0));

    // try unknown column key
    boolean pass = false;
    try {
        data.removeColumn("XXX");
    } catch (UnknownKeyException e) {
        pass = true;
    }
    Assert.assertTrue(pass);

    // try null column key
    pass = false;
    try {
        data.removeColumn(null);
    } catch (IllegalArgumentException e) {
        pass = true;
    }
    Assert.assertTrue(pass);
}
, check_out_path=/jTrans/Eval/src/Chart/22b, test_class_path=org/jfree/data/junit/KeyedObjects2DTests.java
test_code_path=/jTrans/Eval/src/Chart/22b/tests
trigger_method_lines=public void testRemoveColumnByKey() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.setObject("Obj1", "R1", "C1");
    data.setObject("Obj2", "R2", "C2");
    data.removeColumn("C2");
    Assert.assertEquals(1, data.getColumnCount());
    Assert.assertEquals("Obj1", data.getObject(0, 0));

    // try unknown column key
    boolean pass = false;
    try {
        data.removeColumn("XXX");
    } catch (UnknownKeyException e) {
        pass = true;
    }
    Assert.assertTrue(pass);

    // try null column key
    pass = false;
    try {
        data.removeColumn(null);
    } catch (IllegalArgumentException e) {
        pass = true;
    }
    Assert.assertTrue(pass);
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/22b -t org.jfree.data.junit.KeyedObjects2DTests::newTestMethod1
org/jfree/data/junit/KeyedObjects2DTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 1
runTest
trigger_code=public void testRemoveColumnByKey() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.setObject("Obj1", "R1", "C1");
    data.setObject("Obj2", "R2", "C2");
    data.removeColumn("C2");
    Assert.assertEquals(1, data.getColumnCount());
    Assert.assertEquals("Obj1", data.getObject(0, 0));

    // try unknown column key
    boolean pass = false;
    try {
        data.removeColumn("XXX");
    } catch (UnknownKeyException e) {
        pass = true;
    }
    Assert.assertTrue(pass);

    // try null column key
    pass = false;
    try {
        data.removeColumn(null);
    } catch (IllegalArgumentException e) {
        pass = true;
    }
    Assert.assertTrue(pass);
}
, check_out_path=/jTrans/Eval/src/Chart/22f, test_class_path=org/jfree/data/junit/KeyedObjects2DTests.java
test_code_path=/jTrans/Eval/src/Chart/22f/tests
trigger_method_lines=public void testRemoveColumnByKey() {
    KeyedObjects2D data = new KeyedObjects2D();
    data.setObject("Obj1", "R1", "C1");
    data.setObject("Obj2", "R2", "C2");
    data.removeColumn("C2");
    Assert.assertEquals(1, data.getColumnCount());
    Assert.assertEquals("Obj1", data.getObject(0, 0));

    // try unknown column key
    boolean pass = false;
    try {
        data.removeColumn("XXX");
    } catch (UnknownKeyException e) {
        pass = true;
    }
    Assert.assertTrue(pass);

    // try null column key
    pass = false;
    try {
        data.removeColumn(null);
    } catch (IllegalArgumentException e) {
        pass = true;
    }
    Assert.assertTrue(pass);
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/22f -t org.jfree.data.junit.KeyedObjects2DTests::newTestMethod1
org/jfree/data/junit/KeyedObjects2DTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 0
-----------------------------------------------
res_in_bug=Test failed, res_in_fix=Test passed
unit_res_in_bug=Test failed,unit_res_in_fix=Test failed,oracle_res_in_bug=Test failed,oracle_res_in_fix=Test passed
