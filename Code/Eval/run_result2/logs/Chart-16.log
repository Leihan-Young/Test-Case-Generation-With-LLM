Getting Chart-16 focal context...
focal_context=/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -----------------------------------
 * DefaultIntervalCategoryDataset.java
 * -----------------------------------
 * (C) Copyright 2002-2008, by Jeremy Bowman and Contributors.
 *
 * Original Author:  Jeremy Bowman;
 * Contributor(s):   David Gilbert (for Object Refinery Limited);
 *
 * Changes
 * -------
 * 29-Apr-2002 : Version 1, contributed by Jeremy Bowman (DG);
 * 24-Oct-2002 : Amendments for changes made to the dataset interface (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 08-Mar-2007 : Added equals() and clone() overrides (DG);
 * 20-Jun-2007 : Removed deprecated code (DG);
 * 25-Feb-2008 : Fix for the special case where the dataset is empty, see bug 
 *               1897580 (DG)
 *
 */
package org.jfree.data.category;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ResourceBundle;
import org.jfree.data.DataUtilities;
import org.jfree.data.UnknownKeyException;
import org.jfree.data.general.AbstractSeriesDataset;
/**
 * A convenience class that provides a default implementation of the
 * {@link IntervalCategoryDataset} interface.
 * <p>
 * The standard constructor accepts data in a two dimensional array where the
 * first dimension is the series, and the second dimension is the category.
 */
public class DefaultIntervalCategoryDataset extends AbstractSeriesDataset
        implements IntervalCategoryDataset {
    private Comparable[] seriesKeys;
    private Comparable[] categoryKeys;
    private Number[][] startData;
    private Number[][] endData;
    /**
     * Returns the number of series in the dataset (possibly zero).
     *
     * @return The number of series in the dataset.
     * 
     * @see #getRowCount()
     * @see #getCategoryCount()
     */
    public int getSeriesCount() {
        int result = 0;
        if (this.startData != null) {
            result = this.startData.length;
        }
        return result;
    }
    /**
     * Returns the index for the given category.
     *
     * @param category  the category (<code>null</code> not permitted).
     *
     * @return The index.
     * 
     * @see #getColumnIndex(Comparable)
     */
    public int getCategoryIndex(Comparable category) {
        int result = -1;
        for (int i = 0; i < this.categoryKeys.length; i++) {
            if (category.equals(this.categoryKeys[i])) {
                result = i;
                break;
            }
        }
        return result;
    }
    /**
     * Sets the categories for the dataset.
     *
     * @param categoryKeys  an array of objects representing the categories in 
     *                      the dataset.
     *                      
     * @see #getRowKeys()
     * @see #setSeriesKeys(Comparable[])
     */
    public void setCategoryKeys(Comparable[] categoryKeys) {
        if (categoryKeys == null) {
            throw new IllegalArgumentException("Null 'categoryKeys' argument.");
        }
        if (categoryKeys.length != this.startData[0].length) {
            throw new IllegalArgumentException(
                    "The number of categories does not match the data.");
        }
        for (int i = 0; i < categoryKeys.length; i++) {
            if (categoryKeys[i] == null) {
                throw new IllegalArgumentException(
                    "DefaultIntervalCategoryDataset.setCategoryKeys(): "
                    + "null category not permitted.");
            }
        }
        this.categoryKeys = categoryKeys;
        fireDatasetChanged();
    }
}

Getting Chart-16 test prefix...
oracle_focal_context=/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -----------------------------------
 * DefaultIntervalCategoryDataset.java
 * -----------------------------------
 * (C) Copyright 2002-2008, by Jeremy Bowman and Contributors.
 *
 * Original Author:  Jeremy Bowman;
 * Contributor(s):   David Gilbert (for Object Refinery Limited);
 *
 * Changes
 * -------
 * 29-Apr-2002 : Version 1, contributed by Jeremy Bowman (DG);
 * 24-Oct-2002 : Amendments for changes made to the dataset interface (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 08-Mar-2007 : Added equals() and clone() overrides (DG);
 * 20-Jun-2007 : Removed deprecated code (DG);
 * 25-Feb-2008 : Fix for the special case where the dataset is empty, see bug 
 *               1897580 (DG)
 *
 */
package org.jfree.data.category;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ResourceBundle;
import org.jfree.data.DataUtilities;
import org.jfree.data.UnknownKeyException;
import org.jfree.data.general.AbstractSeriesDataset;
/**
 * A convenience class that provides a default implementation of the
 * {@link IntervalCategoryDataset} interface.
 * <p>
 * The standard constructor accepts data in a two dimensional array where the
 * first dimension is the series, and the second dimension is the category.
 */
public class DefaultIntervalCategoryDataset extends AbstractSeriesDataset
        implements IntervalCategoryDataset {
    private Comparable[] seriesKeys;
    private Comparable[] categoryKeys;
    private Number[][] startData;
    private Number[][] endData;
    /**
     * Returns the index for the given category.
     *
     * @param category  the category (<code>null</code> not permitted).
     *
     * @return The index.
     * 
     * @see #getColumnIndex(Comparable)
     */
    public int getCategoryIndex(Comparable category) {
        int result = -1;
        for (int i = 0; i < this.categoryKeys.length; i++) {
            if (category.equals(this.categoryKeys[i])) {
                result = i;
                break;
            }
        }
        return result;
    }
    /**
     * Creates a new dataset using the specified data values and automatically
     * generated series and category keys.
     *
     * @param starts  the starting values for the intervals (<code>null</code>
     *                not permitted).
     * @param ends  the ending values for the intervals (<code>null</code> not
     *                permitted).
     */
    public DefaultIntervalCategoryDataset(double[][] starts, double[][] ends) {
        this(DataUtilities.createNumberArray2D(starts),
                DataUtilities.createNumberArray2D(ends));
    }
    /**
     * Constructs a dataset and populates it with data from the array.
     * <p>
     * The arrays are indexed as data[series][category].  Series and category
     * names are automatically generated - you can change them using the
     * {@link #setSeriesKeys(Comparable[])} and 
     * {@link #setCategoryKeys(Comparable[])} methods.
     *
     * @param starts  the start values data.
     * @param ends  the end values data.
     */
    public DefaultIntervalCategoryDataset(Number[][] starts, Number[][] ends) {
        this(null, null, starts, ends);
    }
    /**
     * Constructs a DefaultIntervalCategoryDataset, populates it with data
     * from the arrays, and uses the supplied names for the series.
     * <p>
     * Category names are generated automatically ("Category 1", "Category 2",
     * etc).
     *
     * @param seriesNames  the series names (if <code>null</code>, series names
     *         will be generated automatically).
     * @param starts  the start values data, indexed as data[series][category].
     * @param ends  the end values data, indexed as data[series][category].
     */
    public DefaultIntervalCategoryDataset(String[] seriesNames,
                                          Number[][] starts,
                                          Number[][] ends) {

        this(seriesNames, null, starts, ends);

    }
    /**
     * Constructs a DefaultIntervalCategoryDataset, populates it with data
     * from the arrays, and uses the supplied names for the series and the
     * supplied objects for the categories.
     *
     * @param seriesKeys  the series keys (if <code>null</code>, series keys
     *         will be generated automatically).
     * @param categoryKeys  the category keys (if <code>null</code>, category 
     *         keys will be generated automatically).
     * @param starts  the start values data, indexed as data[series][category].
     * @param ends  the end values data, indexed as data[series][category].
     */
    public DefaultIntervalCategoryDataset(Comparable[] seriesKeys,
                                          Comparable[] categoryKeys,
                                          Number[][] starts,
                                          Number[][] ends) {

        this.startData = starts;
        this.endData = ends;

        if (starts != null && ends != null) {

            String baseName = "org.jfree.data.resources.DataPackageResources";
            ResourceBundle resources = ResourceBundle.getBundle(baseName);

            int seriesCount = starts.length;
            if (seriesCount != ends.length) {
                String errMsg = "DefaultIntervalCategoryDataset: the number "
                    + "of series in the start value dataset does "
                    + "not match the number of series in the end "
                    + "value dataset.";
                throw new IllegalArgumentException(errMsg);
            }
            if (seriesCount > 0) {

                // set up the series names...
                if (seriesKeys != null) {

                    if (seriesKeys.length != seriesCount) {
                        throw new IllegalArgumentException(
                                "The number of series keys does not "
                                + "match the number of series in the data.");
                    }

                    this.seriesKeys = seriesKeys;
                }
                else {
                    String prefix = resources.getString(
                            "series.default-prefix") + " ";
                    this.seriesKeys = generateKeys(seriesCount, prefix);
                }

                // set up the category names...
                int categoryCount = starts[0].length;
                if (categoryCount != ends[0].length) {
                    String errMsg = "DefaultIntervalCategoryDataset: the "
                                + "number of categories in the start value "
                                + "dataset does not match the number of "
                                + "categories in the end value dataset.";
                    throw new IllegalArgumentException(errMsg);
                }
                if (categoryKeys != null) {
                    if (categoryKeys.length != categoryCount) {
                        throw new IllegalArgumentException(
                                "The number of category keys does not match "
                                + "the number of categories in the data.");
                    }
                    this.categoryKeys = categoryKeys;
                }
                else {
                    String prefix = resources.getString(
                            "categories.default-prefix") + " ";
                    this.categoryKeys = generateKeys(categoryCount, prefix);
                }

            }
            else {
                this.seriesKeys = null;
                this.categoryKeys = null;
            }
        }

    }
}

test_class_path=org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java, test_prefix=    public void testGetCategoryIndex() {
    	// check an empty dataset
    	DefaultIntervalCategoryDataset empty 
    	        = new DefaultIntervalCategoryDataset(new double[0][0], 
    	        		new double[0][0]);
    	_tmp_var_0_ = -1;
    	_tmp_var_1_ =  empty.getCategoryIndex("ABC");
    	$ASSERT$
    }

Constructing unit test prompt for Chart-16
unit_test_prompt=# Java Program:
A java program with one or more bugs.
```
/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -----------------------------------
 * DefaultIntervalCategoryDataset.java
 * -----------------------------------
 * (C) Copyright 2002-2008, by Jeremy Bowman and Contributors.
 *
 * Original Author:  Jeremy Bowman;
 * Contributor(s):   David Gilbert (for Object Refinery Limited);
 *
 * Changes
 * -------
 * 29-Apr-2002 : Version 1, contributed by Jeremy Bowman (DG);
 * 24-Oct-2002 : Amendments for changes made to the dataset interface (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 08-Mar-2007 : Added equals() and clone() overrides (DG);
 * 20-Jun-2007 : Removed deprecated code (DG);
 * 25-Feb-2008 : Fix for the special case where the dataset is empty, see bug 
 *               1897580 (DG)
 *
 */
package org.jfree.data.category;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ResourceBundle;
import org.jfree.data.DataUtilities;
import org.jfree.data.UnknownKeyException;
import org.jfree.data.general.AbstractSeriesDataset;
/**
 * A convenience class that provides a default implementation of the
 * {@link IntervalCategoryDataset} interface.
 * <p>
 * The standard constructor accepts data in a two dimensional array where the
 * first dimension is the series, and the second dimension is the category.
 */
public class DefaultIntervalCategoryDataset extends AbstractSeriesDataset
        implements IntervalCategoryDataset {
    private Comparable[] seriesKeys;
    private Comparable[] categoryKeys;
    private Number[][] startData;
    private Number[][] endData;
    /**
     * Returns the number of series in the dataset (possibly zero).
     *
     * @return The number of series in the dataset.
     * 
     * @see #getRowCount()
     * @see #getCategoryCount()
     */
    public int getSeriesCount() {
        int result = 0;
        if (this.startData != null) {
            result = this.startData.length;
        }
        return result;
    }
    /**
     * Returns the index for the given category.
     *
     * @param category  the category (<code>null</code> not permitted).
     *
     * @return The index.
     * 
     * @see #getColumnIndex(Comparable)
     */
    public int getCategoryIndex(Comparable category) {
        int result = -1;
        for (int i = 0; i < this.categoryKeys.length; i++) {
            if (category.equals(this.categoryKeys[i])) {
                result = i;
                break;
            }
        }
        return result;
    }
    /**
     * Sets the categories for the dataset.
     *
     * @param categoryKeys  an array of objects representing the categories in 
     *                      the dataset.
     *                      
     * @see #getRowKeys()
     * @see #setSeriesKeys(Comparable[])
     */
    public void setCategoryKeys(Comparable[] categoryKeys) {
        if (categoryKeys == null) {
            throw new IllegalArgumentException("Null 'categoryKeys' argument.");
        }
        if (categoryKeys.length != this.startData[0].length) {
            throw new IllegalArgumentException(
                    "The number of categories does not match the data.");
        }
        for (int i = 0; i < categoryKeys.length; i++) {
            if (categoryKeys[i] == null) {
                throw new IllegalArgumentException(
                    "DefaultIntervalCategoryDataset.setCategoryKeys(): "
                    + "null category not permitted.");
            }
        }
        this.categoryKeys = categoryKeys;
        fireDatasetChanged();
    }
}

```
# Test Code:
A test method that can reveal the bug of the java program.
```
public void test
Invoking LLM(gpt-3.5-turbo) for Chart-16 unit test
unit_test_response=DefaultIntervalCategoryDataset() {
    DefaultIntervalCategoryDataset dataset = new DefaultIntervalCategoryDataset();
    Comparable[] seriesKeys = {"Series 1", "Series 2"};
    Comparable[] categoryKeys = {"Category 1", "Category 2", "Category 3"};
    Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    Number[][] endData = {{2, 3, 4}, {5, 6, 7}};

    dataset.setSeriesKeys(seriesKeys);
    dataset.setCategoryKeys(categoryKeys);
    dataset.setStartData(startData);
    dataset.setEndData(endData);

    assertEquals(2, dataset.getSeriesCount());
    assertEquals(3, dataset.getCategoryCount());
    assertEquals("Series 1", dataset.getSeriesKey(0));
    assertEquals("Series 2", dataset.getSeriesKey(1));
    assertEquals("Category 1", dataset.getCategoryKey(0));
    assertEquals("Category 2", dataset.getCategoryKey(1));
    assertEquals("Category 3", dataset.getCategoryKey(2));
    assertEquals(1, dataset.getStartValue(0, 0));
    assertEquals(3, dataset.getEndValue(0, 0));
    assertEquals(4, dataset.getStartValue(1, 0));
    assertEquals(7, dataset.getEndValue(1, 2));
}
```
Constructing test code for Chart-16 unit test
Finished constructing test code for Chart-16 unit test
Finished invoking LLM(gpt-3.5-turbo) for Chart-16 unit test
Constructing oracle test prompt for Chart-16
oracle_test_prompt=# Java Program:
A java program with one or more bugs.
```
/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -----------------------------------
 * DefaultIntervalCategoryDataset.java
 * -----------------------------------
 * (C) Copyright 2002-2008, by Jeremy Bowman and Contributors.
 *
 * Original Author:  Jeremy Bowman;
 * Contributor(s):   David Gilbert (for Object Refinery Limited);
 *
 * Changes
 * -------
 * 29-Apr-2002 : Version 1, contributed by Jeremy Bowman (DG);
 * 24-Oct-2002 : Amendments for changes made to the dataset interface (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 08-Mar-2007 : Added equals() and clone() overrides (DG);
 * 20-Jun-2007 : Removed deprecated code (DG);
 * 25-Feb-2008 : Fix for the special case where the dataset is empty, see bug 
 *               1897580 (DG)
 *
 */
package org.jfree.data.category;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ResourceBundle;
import org.jfree.data.DataUtilities;
import org.jfree.data.UnknownKeyException;
import org.jfree.data.general.AbstractSeriesDataset;
/**
 * A convenience class that provides a default implementation of the
 * {@link IntervalCategoryDataset} interface.
 * <p>
 * The standard constructor accepts data in a two dimensional array where the
 * first dimension is the series, and the second dimension is the category.
 */
public class DefaultIntervalCategoryDataset extends AbstractSeriesDataset
        implements IntervalCategoryDataset {
    private Comparable[] seriesKeys;
    private Comparable[] categoryKeys;
    private Number[][] startData;
    private Number[][] endData;
    /**
     * Returns the index for the given category.
     *
     * @param category  the category (<code>null</code> not permitted).
     *
     * @return The index.
     * 
     * @see #getColumnIndex(Comparable)
     */
    public int getCategoryIndex(Comparable category) {
        int result = -1;
        for (int i = 0; i < this.categoryKeys.length; i++) {
            if (category.equals(this.categoryKeys[i])) {
                result = i;
                break;
            }
        }
        return result;
    }
    /**
     * Creates a new dataset using the specified data values and automatically
     * generated series and category keys.
     *
     * @param starts  the starting values for the intervals (<code>null</code>
     *                not permitted).
     * @param ends  the ending values for the intervals (<code>null</code> not
     *                permitted).
     */
    public DefaultIntervalCategoryDataset(double[][] starts, double[][] ends) {
        this(DataUtilities.createNumberArray2D(starts),
                DataUtilities.createNumberArray2D(ends));
    }
    /**
     * Constructs a dataset and populates it with data from the array.
     * <p>
     * The arrays are indexed as data[series][category].  Series and category
     * names are automatically generated - you can change them using the
     * {@link #setSeriesKeys(Comparable[])} and 
     * {@link #setCategoryKeys(Comparable[])} methods.
     *
     * @param starts  the start values data.
     * @param ends  the end values data.
     */
    public DefaultIntervalCategoryDataset(Number[][] starts, Number[][] ends) {
        this(null, null, starts, ends);
    }
    /**
     * Constructs a DefaultIntervalCategoryDataset, populates it with data
     * from the arrays, and uses the supplied names for the series.
     * <p>
     * Category names are generated automatically ("Category 1", "Category 2",
     * etc).
     *
     * @param seriesNames  the series names (if <code>null</code>, series names
     *         will be generated automatically).
     * @param starts  the start values data, indexed as data[series][category].
     * @param ends  the end values data, indexed as data[series][category].
     */
    public DefaultIntervalCategoryDataset(String[] seriesNames,
                                          Number[][] starts,
                                          Number[][] ends) {

        this(seriesNames, null, starts, ends);

    }
    /**
     * Constructs a DefaultIntervalCategoryDataset, populates it with data
     * from the arrays, and uses the supplied names for the series and the
     * supplied objects for the categories.
     *
     * @param seriesKeys  the series keys (if <code>null</code>, series keys
     *         will be generated automatically).
     * @param categoryKeys  the category keys (if <code>null</code>, category 
     *         keys will be generated automatically).
     * @param starts  the start values data, indexed as data[series][category].
     * @param ends  the end values data, indexed as data[series][category].
     */
    public DefaultIntervalCategoryDataset(Comparable[] seriesKeys,
                                          Comparable[] categoryKeys,
                                          Number[][] starts,
                                          Number[][] ends) {

        this.startData = starts;
        this.endData = ends;

        if (starts != null && ends != null) {

            String baseName = "org.jfree.data.resources.DataPackageResources";
            ResourceBundle resources = ResourceBundle.getBundle(baseName);

            int seriesCount = starts.length;
            if (seriesCount != ends.length) {
                String errMsg = "DefaultIntervalCategoryDataset: the number "
                    + "of series in the start value dataset does "
                    + "not match the number of series in the end "
                    + "value dataset.";
                throw new IllegalArgumentException(errMsg);
            }
            if (seriesCount > 0) {

                // set up the series names...
                if (seriesKeys != null) {

                    if (seriesKeys.length != seriesCount) {
                        throw new IllegalArgumentException(
                                "The number of series keys does not "
                                + "match the number of series in the data.");
                    }

                    this.seriesKeys = seriesKeys;
                }
                else {
                    String prefix = resources.getString(
                            "series.default-prefix") + " ";
                    this.seriesKeys = generateKeys(seriesCount, prefix);
                }

                // set up the category names...
                int categoryCount = starts[0].length;
                if (categoryCount != ends[0].length) {
                    String errMsg = "DefaultIntervalCategoryDataset: the "
                                + "number of categories in the start value "
                                + "dataset does not match the number of "
                                + "categories in the end value dataset.";
                    throw new IllegalArgumentException(errMsg);
                }
                if (categoryKeys != null) {
                    if (categoryKeys.length != categoryCount) {
                        throw new IllegalArgumentException(
                                "The number of category keys does not match "
                                + "the number of categories in the data.");
                    }
                    this.categoryKeys = categoryKeys;
                }
                else {
                    String prefix = resources.getString(
                            "categories.default-prefix") + " ";
                    this.categoryKeys = generateKeys(categoryCount, prefix);
                }

            }
            else {
                this.seriesKeys = null;
                this.categoryKeys = null;
            }
        }

    }
}

```
# Incomplete Test Code:
A test method that is incomplete. To complete the test code, $ASSERT$ should be replaced with assert statements (assertTrue, assertFalse, fail, assertEquals, assertNotEquals, assertArrayEquals, assertNotNull, assertNull, assertSame, assertNotSame), and $EXCEPTION$ should be replaced with exception class. Other statements stay the same.
```
    public void testGetCategoryIndex() {
    	// check an empty dataset
    	DefaultIntervalCategoryDataset empty 
    	        = new DefaultIntervalCategoryDataset(new double[0][0], 
    	        		new double[0][0]);
    	_tmp_var_0_ = -1;
    	_tmp_var_1_ =  empty.getCategoryIndex("ABC");
    	$ASSERT$
    }

```
# Test Code:
A test method that completes the incomplete test code. And it contains no $ASSERT$ or $EXCEPTION$
```
public void test
Invoking LLM(gpt-3.5-turbo) for Chart-16 oracle test
oracle_test_response=GetCategoryIndex() {
    // check an empty dataset
    DefaultIntervalCategoryDataset empty = new DefaultIntervalCategoryDataset(new double[0][0], new double[0][0]);
    int expectedIndex = -1;
    int actualIndex = empty.getCategoryIndex("ABC");
    assertEquals(expectedIndex, actualIndex);
}
Constructing test code for Chart-16 oracle test
Finished constructing test code for Chart-16 oracle test
Finished invoking LLM(gpt-3.5-turbo) for Chart-16 oracle test
Checking out Chart 16b...
checkout_cmd=defects4j checkout -p Chart -v 16b -w /jTrans/Eval/src/Chart/16b >/dev/null 2>&1
Finished checking out Chart 16b.
Checking out Chart 16f...
checkout_cmd=defects4j checkout -p Chart -v 16f -w /jTrans/Eval/src/Chart/16f >/dev/null 2>&1
Finished checking out Chart 16f.
runTestWithRetry NO.1 try
runTest
trigger_code=public void testDefaultIntervalCategoryDataset() {
    DefaultIntervalCategoryDataset dataset = new DefaultIntervalCategoryDataset();
    Comparable[] seriesKeys = {"Series 1", "Series 2"};
    Comparable[] categoryKeys = {"Category 1", "Category 2", "Category 3"};
    Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    Number[][] endData = {{2, 3, 4}, {5, 6, 7}};

    dataset.setSeriesKeys(seriesKeys);
    dataset.setCategoryKeys(categoryKeys);
    dataset.setStartData(startData);
    dataset.setEndData(endData);

    Assert.assertEquals(2, dataset.getSeriesCount());
    Assert.assertEquals(3, dataset.getCategoryCount());
    Assert.assertEquals("Series 1", dataset.getSeriesKey(0));
    Assert.assertEquals("Series 2", dataset.getSeriesKey(1));
    Assert.assertEquals("Category 1", dataset.getCategoryKey(0));
    Assert.assertEquals("Category 2", dataset.getCategoryKey(1));
    Assert.assertEquals("Category 3", dataset.getCategoryKey(2));
    Assert.assertEquals(1, dataset.getStartValue(0, 0));
    Assert.assertEquals(3, dataset.getEndValue(0, 0));
    Assert.assertEquals(4, dataset.getStartValue(1, 0));
    Assert.assertEquals(7, dataset.getEndValue(1, 2));
}
, check_out_path=/jTrans/Eval/src/Chart/16b, test_class_path=org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java
test_code_path=/jTrans/Eval/src/Chart/16b/tests
trigger_method_lines=public void testDefaultIntervalCategoryDataset() {
    DefaultIntervalCategoryDataset dataset = new DefaultIntervalCategoryDataset();
    Comparable[] seriesKeys = {"Series 1", "Series 2"};
    Comparable[] categoryKeys = {"Category 1", "Category 2", "Category 3"};
    Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    Number[][] endData = {{2, 3, 4}, {5, 6, 7}};

    dataset.setSeriesKeys(seriesKeys);
    dataset.setCategoryKeys(categoryKeys);
    dataset.setStartData(startData);
    dataset.setEndData(endData);

    Assert.assertEquals(2, dataset.getSeriesCount());
    Assert.assertEquals(3, dataset.getCategoryCount());
    Assert.assertEquals("Series 1", dataset.getSeriesKey(0));
    Assert.assertEquals("Series 2", dataset.getSeriesKey(1));
    Assert.assertEquals("Category 1", dataset.getCategoryKey(0));
    Assert.assertEquals("Category 2", dataset.getCategoryKey(1));
    Assert.assertEquals("Category 3", dataset.getCategoryKey(2));
    Assert.assertEquals(1, dataset.getStartValue(0, 0));
    Assert.assertEquals(3, dataset.getEndValue(0, 0));
    Assert.assertEquals(4, dataset.getStartValue(1, 0));
    Assert.assertEquals(7, dataset.getEndValue(1, 2));
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/16b -t org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests::newTestMethod1
org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ FAIL
Executed command:  cd /jTrans/Eval/src/Chart/16b && /workspace/defects4j/major/bin/ant -f /workspace/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/workspace/defects4j -Dd4j.dir.projects=/workspace/defects4j/framework/projects -Dbasedir=/jTrans/Eval/src/Chart/16b -Dbuild.compiler=javac1.7  compile.tests 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /workspace/defects4j/framework/projects/defects4j.build.xml

initialise:

compile:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/16b/build
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:57: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 577 source files to /jTrans/Eval/src/Chart/16b/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Transparency.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AlphaComposite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Composite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/AffineTransform.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/ImageIcon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/EventListenerList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InvalidObjectException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventObject.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/CharacterIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/FontMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Polygon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/LineMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/PathIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JScrollPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AWTEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Insets.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseMotionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PageFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/Printable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterJob.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFileChooser.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenuItem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JOptionPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPopupMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings
     [copy] Copying 1 file to /jTrans/Eval/src/Chart/16b/build/org/jfree/chart
     [copy] Copying 12 files to /jTrans/Eval/src/Chart/16b/build/org/jfree/chart
     [copy] Copying 9 files to /jTrans/Eval/src/Chart/16b/build/org/jfree/chart/plot
     [copy] Copying 10 files to /jTrans/Eval/src/Chart/16b/build/org/jfree/chart/editor
     [copy] Copying 5 files to /jTrans/Eval/src/Chart/16b/build/org/jfree/chart/ui

compile-experimental:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:106: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 4 source files to /jTrans/Eval/src/Chart/16b/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Float.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings

compile.tests:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/16b/build-tests
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:123: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 353 source files to /jTrans/Eval/src/Chart/16b/build-tests
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:495: error: no suitable constructor found for DefaultIntervalCategoryDataset()
    [javac]     DefaultIntervalCategoryDataset dataset = new DefaultIntervalCategoryDataset();
    [javac]                                              ^
    [javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(Comparable[],Comparable[],Number[][],Number[][]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(String[],Number[][],Number[][]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(Number[][],Number[][]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(double[][],double[][]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                              ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                                 ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                                    ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                                         ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                                            ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                                               ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                            ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                               ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                                  ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                                       ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                                          ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                                             ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:503: error: cannot find symbol
    [javac]     dataset.setStartData(startData);
    [javac]            ^
    [javac]   symbol:   method setStartData(Number[][])
    [javac]   location: variable dataset of type DefaultIntervalCategoryDataset
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:504: error: cannot find symbol
    [javac]     dataset.setEndData(endData);
    [javac]            ^
    [javac]   symbol:   method setEndData(Number[][])
    [javac]   location: variable dataset of type DefaultIntervalCategoryDataset
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:510: error: cannot find symbol
    [javac]     Assert.assertEquals("Category 1", dataset.getCategoryKey(0));
    [javac]                                              ^
    [javac]   symbol:   method getCategoryKey(int)
    [javac]   location: variable dataset of type DefaultIntervalCategoryDataset
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:511: error: cannot find symbol
    [javac]     Assert.assertEquals("Category 2", dataset.getCategoryKey(1));
    [javac]                                              ^
    [javac]   symbol:   method getCategoryKey(int)
    [javac]   location: variable dataset of type DefaultIntervalCategoryDataset
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:512: error: cannot find symbol
    [javac]     Assert.assertEquals("Category 3", dataset.getCategoryKey(2));
    [javac]                                              ^
    [javac]   symbol:   method getCategoryKey(int)
    [javac]   location: variable dataset of type DefaultIntervalCategoryDataset
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:513: error: no suitable method found for assertEquals(int,Number)
    [javac]     Assert.assertEquals(1, dataset.getStartValue(0, 0));
    [javac]           ^
    [javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
    [javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double) is not applicable
    [javac]       (actual argument Number cannot be converted to double by method invocation conversion)
    [javac]     method Assert.assertEquals(String,long,long) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(long,long) is not applicable
    [javac]       (actual argument Number cannot be converted to long by method invocation conversion)
    [javac]     method Assert.assertEquals(String,float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(Object,Object) is not applicable
    [javac]       (actual argument int cannot be converted to Object by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object,Object) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:514: error: no suitable method found for assertEquals(int,Number)
    [javac]     Assert.assertEquals(3, dataset.getEndValue(0, 0));
    [javac]           ^
    [javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
    [javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double) is not applicable
    [javac]       (actual argument Number cannot be converted to double by method invocation conversion)
    [javac]     method Assert.assertEquals(String,long,long) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(long,long) is not applicable
    [javac]       (actual argument Number cannot be converted to long by method invocation conversion)
    [javac]     method Assert.assertEquals(String,float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(Object,Object) is not applicable
    [javac]       (actual argument int cannot be converted to Object by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object,Object) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:515: error: no suitable method found for assertEquals(int,Number)
    [javac]     Assert.assertEquals(4, dataset.getStartValue(1, 0));
    [javac]           ^
    [javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
    [javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double) is not applicable
    [javac]       (actual argument Number cannot be converted to double by method invocation conversion)
    [javac]     method Assert.assertEquals(String,long,long) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(long,long) is not applicable
    [javac]       (actual argument Number cannot be converted to long by method invocation conversion)
    [javac]     method Assert.assertEquals(String,float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(Object,Object) is not applicable
    [javac]       (actual argument int cannot be converted to Object by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object,Object) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac] /jTrans/Eval/src/Chart/16b/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:516: error: no suitable method found for assertEquals(int,Number)
    [javac]     Assert.assertEquals(7, dataset.getEndValue(1, 2));
    [javac]           ^
    [javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
    [javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double) is not applicable
    [javac]       (actual argument Number cannot be converted to double by method invocation conversion)
    [javac]     method Assert.assertEquals(String,long,long) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(long,long) is not applicable
    [javac]       (actual argument Number cannot be converted to long by method invocation conversion)
    [javac]     method Assert.assertEquals(String,float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(Object,Object) is not applicable
    [javac]       (actual argument int cannot be converted to Object by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object,Object) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac] Note: /jTrans/Eval/src/Chart/16b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] 22 errors
    [javac] 100 warnings

BUILD FAILED
runTest
trigger_code=public void testDefaultIntervalCategoryDataset() {
    DefaultIntervalCategoryDataset dataset = new DefaultIntervalCategoryDataset();
    Comparable[] seriesKeys = {"Series 1", "Series 2"};
    Comparable[] categoryKeys = {"Category 1", "Category 2", "Category 3"};
    Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    Number[][] endData = {{2, 3, 4}, {5, 6, 7}};

    dataset.setSeriesKeys(seriesKeys);
    dataset.setCategoryKeys(categoryKeys);
    dataset.setStartData(startData);
    dataset.setEndData(endData);

    Assert.assertEquals(2, dataset.getSeriesCount());
    Assert.assertEquals(3, dataset.getCategoryCount());
    Assert.assertEquals("Series 1", dataset.getSeriesKey(0));
    Assert.assertEquals("Series 2", dataset.getSeriesKey(1));
    Assert.assertEquals("Category 1", dataset.getCategoryKey(0));
    Assert.assertEquals("Category 2", dataset.getCategoryKey(1));
    Assert.assertEquals("Category 3", dataset.getCategoryKey(2));
    Assert.assertEquals(1, dataset.getStartValue(0, 0));
    Assert.assertEquals(3, dataset.getEndValue(0, 0));
    Assert.assertEquals(4, dataset.getStartValue(1, 0));
    Assert.assertEquals(7, dataset.getEndValue(1, 2));
}
, check_out_path=/jTrans/Eval/src/Chart/16f, test_class_path=org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java
test_code_path=/jTrans/Eval/src/Chart/16f/tests
trigger_method_lines=public void testDefaultIntervalCategoryDataset() {
    DefaultIntervalCategoryDataset dataset = new DefaultIntervalCategoryDataset();
    Comparable[] seriesKeys = {"Series 1", "Series 2"};
    Comparable[] categoryKeys = {"Category 1", "Category 2", "Category 3"};
    Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    Number[][] endData = {{2, 3, 4}, {5, 6, 7}};

    dataset.setSeriesKeys(seriesKeys);
    dataset.setCategoryKeys(categoryKeys);
    dataset.setStartData(startData);
    dataset.setEndData(endData);

    Assert.assertEquals(2, dataset.getSeriesCount());
    Assert.assertEquals(3, dataset.getCategoryCount());
    Assert.assertEquals("Series 1", dataset.getSeriesKey(0));
    Assert.assertEquals("Series 2", dataset.getSeriesKey(1));
    Assert.assertEquals("Category 1", dataset.getCategoryKey(0));
    Assert.assertEquals("Category 2", dataset.getCategoryKey(1));
    Assert.assertEquals("Category 3", dataset.getCategoryKey(2));
    Assert.assertEquals(1, dataset.getStartValue(0, 0));
    Assert.assertEquals(3, dataset.getEndValue(0, 0));
    Assert.assertEquals(4, dataset.getStartValue(1, 0));
    Assert.assertEquals(7, dataset.getEndValue(1, 2));
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/16f -t org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests::newTestMethod1
org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ FAIL
Executed command:  cd /jTrans/Eval/src/Chart/16f && /workspace/defects4j/major/bin/ant -f /workspace/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/workspace/defects4j -Dd4j.dir.projects=/workspace/defects4j/framework/projects -Dbasedir=/jTrans/Eval/src/Chart/16f -Dbuild.compiler=javac1.7  compile.tests 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /workspace/defects4j/framework/projects/defects4j.build.xml

initialise:

compile:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/16f/build
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:57: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 577 source files to /jTrans/Eval/src/Chart/16f/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Transparency.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AlphaComposite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Composite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/AffineTransform.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/ImageIcon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/EventListenerList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InvalidObjectException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventObject.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/CharacterIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/FontMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Polygon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/LineMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/PathIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JScrollPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AWTEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Insets.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseMotionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PageFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/Printable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterJob.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFileChooser.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenuItem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JOptionPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPopupMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings
     [copy] Copying 1 file to /jTrans/Eval/src/Chart/16f/build/org/jfree/chart
     [copy] Copying 12 files to /jTrans/Eval/src/Chart/16f/build/org/jfree/chart
     [copy] Copying 9 files to /jTrans/Eval/src/Chart/16f/build/org/jfree/chart/plot
     [copy] Copying 10 files to /jTrans/Eval/src/Chart/16f/build/org/jfree/chart/editor
     [copy] Copying 5 files to /jTrans/Eval/src/Chart/16f/build/org/jfree/chart/ui

compile-experimental:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:106: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 4 source files to /jTrans/Eval/src/Chart/16f/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Float.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings

compile.tests:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/16f/build-tests
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:123: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 353 source files to /jTrans/Eval/src/Chart/16f/build-tests
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:495: error: no suitable constructor found for DefaultIntervalCategoryDataset()
    [javac]     DefaultIntervalCategoryDataset dataset = new DefaultIntervalCategoryDataset();
    [javac]                                              ^
    [javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(Comparable[],Comparable[],Number[][],Number[][]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(String[],Number[][],Number[][]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(Number[][],Number[][]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(double[][],double[][]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                              ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                                 ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                                    ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                                         ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                                            ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:498: error: incompatible types
    [javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    [javac]                                               ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                            ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                               ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                                  ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                                       ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                                          ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:499: error: incompatible types
    [javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
    [javac]                                             ^
    [javac]   required: Number
    [javac]   found:    int
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:503: error: cannot find symbol
    [javac]     dataset.setStartData(startData);
    [javac]            ^
    [javac]   symbol:   method setStartData(Number[][])
    [javac]   location: variable dataset of type DefaultIntervalCategoryDataset
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:504: error: cannot find symbol
    [javac]     dataset.setEndData(endData);
    [javac]            ^
    [javac]   symbol:   method setEndData(Number[][])
    [javac]   location: variable dataset of type DefaultIntervalCategoryDataset
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:510: error: cannot find symbol
    [javac]     Assert.assertEquals("Category 1", dataset.getCategoryKey(0));
    [javac]                                              ^
    [javac]   symbol:   method getCategoryKey(int)
    [javac]   location: variable dataset of type DefaultIntervalCategoryDataset
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:511: error: cannot find symbol
    [javac]     Assert.assertEquals("Category 2", dataset.getCategoryKey(1));
    [javac]                                              ^
    [javac]   symbol:   method getCategoryKey(int)
    [javac]   location: variable dataset of type DefaultIntervalCategoryDataset
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:512: error: cannot find symbol
    [javac]     Assert.assertEquals("Category 3", dataset.getCategoryKey(2));
    [javac]                                              ^
    [javac]   symbol:   method getCategoryKey(int)
    [javac]   location: variable dataset of type DefaultIntervalCategoryDataset
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:513: error: no suitable method found for assertEquals(int,Number)
    [javac]     Assert.assertEquals(1, dataset.getStartValue(0, 0));
    [javac]           ^
    [javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
    [javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double) is not applicable
    [javac]       (actual argument Number cannot be converted to double by method invocation conversion)
    [javac]     method Assert.assertEquals(String,long,long) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(long,long) is not applicable
    [javac]       (actual argument Number cannot be converted to long by method invocation conversion)
    [javac]     method Assert.assertEquals(String,float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(Object,Object) is not applicable
    [javac]       (actual argument int cannot be converted to Object by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object,Object) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:514: error: no suitable method found for assertEquals(int,Number)
    [javac]     Assert.assertEquals(3, dataset.getEndValue(0, 0));
    [javac]           ^
    [javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
    [javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double) is not applicable
    [javac]       (actual argument Number cannot be converted to double by method invocation conversion)
    [javac]     method Assert.assertEquals(String,long,long) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(long,long) is not applicable
    [javac]       (actual argument Number cannot be converted to long by method invocation conversion)
    [javac]     method Assert.assertEquals(String,float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(Object,Object) is not applicable
    [javac]       (actual argument int cannot be converted to Object by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object,Object) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:515: error: no suitable method found for assertEquals(int,Number)
    [javac]     Assert.assertEquals(4, dataset.getStartValue(1, 0));
    [javac]           ^
    [javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
    [javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double) is not applicable
    [javac]       (actual argument Number cannot be converted to double by method invocation conversion)
    [javac]     method Assert.assertEquals(String,long,long) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(long,long) is not applicable
    [javac]       (actual argument Number cannot be converted to long by method invocation conversion)
    [javac]     method Assert.assertEquals(String,float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(Object,Object) is not applicable
    [javac]       (actual argument int cannot be converted to Object by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object,Object) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac] /jTrans/Eval/src/Chart/16f/tests/org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java:516: error: no suitable method found for assertEquals(int,Number)
    [javac]     Assert.assertEquals(7, dataset.getEndValue(1, 2));
    [javac]           ^
    [javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
    [javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(double,double) is not applicable
    [javac]       (actual argument Number cannot be converted to double by method invocation conversion)
    [javac]     method Assert.assertEquals(String,long,long) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(long,long) is not applicable
    [javac]       (actual argument Number cannot be converted to long by method invocation conversion)
    [javac]     method Assert.assertEquals(String,float,float,float) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(String,double,double,double) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac]     method Assert.assertEquals(Object,Object) is not applicable
    [javac]       (actual argument int cannot be converted to Object by method invocation conversion)
    [javac]     method Assert.assertEquals(String,Object,Object) is not applicable
    [javac]       (actual and formal argument lists differ in length)
    [javac] Note: /jTrans/Eval/src/Chart/16f/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] 22 errors
    [javac] 100 warnings

BUILD FAILED
res_in_bug=Build failed, res_in_fix=Build failed
build_fail_error_message:

[javac]error: no suitable constructor found for DefaultIntervalCategoryDataset()
[javac]     DefaultIntervalCategoryDataset dataset = new DefaultIntervalCategoryDataset();
[javac]                                              ^
[javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(Comparable[],Comparable[],Number[][],Number[][]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(String[],Number[][],Number[][]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(Number[][],Number[][]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(double[][],double[][]) is not applicable
[javac]       (actual and formal argument lists differ in length)

[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                              ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                                 ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                                    ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                                         ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                                            ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                                               ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                            ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                               ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                                  ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                                       ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                                          ^
[javac]   required: Number
[javac]   found:    int

[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                                             ^
[javac]   required: Number
[javac]   found:    int

[javac]error: cannot find symbol
[javac]     dataset.setStartData(startData);
[javac]            ^
[javac]   symbol:   method setStartData(Number[][])
[javac]   location: variable dataset of type DefaultIntervalCategoryDataset

[javac]error: cannot find symbol
[javac]     dataset.setEndData(endData);
[javac]            ^
[javac]   symbol:   method setEndData(Number[][])
[javac]   location: variable dataset of type DefaultIntervalCategoryDataset

[javac]error: cannot find symbol
[javac]     Assert.assertEquals("Category 1", dataset.getCategoryKey(0));
[javac]                                              ^
[javac]   symbol:   method getCategoryKey(int)
[javac]   location: variable dataset of type DefaultIntervalCategoryDataset

[javac]error: cannot find symbol
[javac]     Assert.assertEquals("Category 2", dataset.getCategoryKey(1));
[javac]                                              ^
[javac]   symbol:   method getCategoryKey(int)
[javac]   location: variable dataset of type DefaultIntervalCategoryDataset

[javac]error: cannot find symbol
[javac]     Assert.assertEquals("Category 3", dataset.getCategoryKey(2));
[javac]                                              ^
[javac]   symbol:   method getCategoryKey(int)
[javac]   location: variable dataset of type DefaultIntervalCategoryDataset

[javac]error: no suitable method found for assertEquals(int,Number)
[javac]     Assert.assertEquals(1, dataset.getStartValue(0, 0));
[javac]           ^
[javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
[javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double) is not applicable
[javac]       (actual argument Number cannot be converted to double by method invocation conversion)
[javac]     method Assert.assertEquals(String,long,long) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(long,long) is not applicable
[javac]       (actual argument Number cannot be converted to long by method invocation conversion)
[javac]     method Assert.assertEquals(String,float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(Object,Object) is not applicable
[javac]       (actual argument int cannot be converted to Object by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object,Object) is not applicable
[javac]       (actual and formal argument lists differ in length)

[javac]error: no suitable method found for assertEquals(int,Number)
[javac]     Assert.assertEquals(3, dataset.getEndValue(0, 0));
[javac]           ^
[javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
[javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double) is not applicable
[javac]       (actual argument Number cannot be converted to double by method invocation conversion)
[javac]     method Assert.assertEquals(String,long,long) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(long,long) is not applicable
[javac]       (actual argument Number cannot be converted to long by method invocation conversion)
[javac]     method Assert.assertEquals(String,float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(Object,Object) is not applicable
[javac]       (actual argument int cannot be converted to Object by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object,Object) is not applicable
[javac]       (actual and formal argument lists differ in length)

[javac]error: no suitable method found for assertEquals(int,Number)
[javac]     Assert.assertEquals(4, dataset.getStartValue(1, 0));
[javac]           ^
[javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
[javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double) is not applicable
[javac]       (actual argument Number cannot be converted to double by method invocation conversion)
[javac]     method Assert.assertEquals(String,long,long) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(long,long) is not applicable
[javac]       (actual argument Number cannot be converted to long by method invocation conversion)
[javac]     method Assert.assertEquals(String,float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(Object,Object) is not applicable
[javac]       (actual argument int cannot be converted to Object by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object,Object) is not applicable
[javac]       (actual and formal argument lists differ in length)

[javac]error: no suitable method found for assertEquals(int,Number)
[javac]     Assert.assertEquals(7, dataset.getEndValue(1, 2));
[javac]           ^
[javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
[javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double) is not applicable
[javac]       (actual argument Number cannot be converted to double by method invocation conversion)
[javac]     method Assert.assertEquals(String,long,long) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(long,long) is not applicable
[javac]       (actual argument Number cannot be converted to long by method invocation conversion)
[javac]     method Assert.assertEquals(String,float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(Object,Object) is not applicable
[javac]       (actual argument int cannot be converted to Object by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object,Object) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac] Note: /jTrans/Eval/src/Chart/16b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
[javac] Note: Recompile with -Xlint:deprecation for details.

[user]:# Java Program:
A java program with one or more bugs.
```
/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2008, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -----------------------------------
 * DefaultIntervalCategoryDataset.java
 * -----------------------------------
 * (C) Copyright 2002-2008, by Jeremy Bowman and Contributors.
 *
 * Original Author:  Jeremy Bowman;
 * Contributor(s):   David Gilbert (for Object Refinery Limited);
 *
 * Changes
 * -------
 * 29-Apr-2002 : Version 1, contributed by Jeremy Bowman (DG);
 * 24-Oct-2002 : Amendments for changes made to the dataset interface (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 08-Mar-2007 : Added equals() and clone() overrides (DG);
 * 20-Jun-2007 : Removed deprecated code (DG);
 * 25-Feb-2008 : Fix for the special case where the dataset is empty, see bug 
 *               1897580 (DG)
 *
 */
package org.jfree.data.category;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ResourceBundle;
import org.jfree.data.DataUtilities;
import org.jfree.data.UnknownKeyException;
import org.jfree.data.general.AbstractSeriesDataset;
/**
 * A convenience class that provides a default implementation of the
 * {@link IntervalCategoryDataset} interface.
 * <p>
 * The standard constructor accepts data in a two dimensional array where the
 * first dimension is the series, and the second dimension is the category.
 */
public class DefaultIntervalCategoryDataset extends AbstractSeriesDataset
        implements IntervalCategoryDataset {
    private Comparable[] seriesKeys;
    private Comparable[] categoryKeys;
    private Number[][] startData;
    private Number[][] endData;
    /**
     * Returns the number of series in the dataset (possibly zero).
     *
     * @return The number of series in the dataset.
     * 
     * @see #getRowCount()
     * @see #getCategoryCount()
     */
    public int getSeriesCount() {
        int result = 0;
        if (this.startData != null) {
            result = this.startData.length;
        }
        return result;
    }
    /**
     * Returns the index for the given category.
     *
     * @param category  the category (<code>null</code> not permitted).
     *
     * @return The index.
     * 
     * @see #getColumnIndex(Comparable)
     */
    public int getCategoryIndex(Comparable category) {
        int result = -1;
        for (int i = 0; i < this.categoryKeys.length; i++) {
            if (category.equals(this.categoryKeys[i])) {
                result = i;
                break;
            }
        }
        return result;
    }
    /**
     * Sets the categories for the dataset.
     *
     * @param categoryKeys  an array of objects representing the categories in 
     *                      the dataset.
     *                      
     * @see #getRowKeys()
     * @see #setSeriesKeys(Comparable[])
     */
    public void setCategoryKeys(Comparable[] categoryKeys) {
        if (categoryKeys == null) {
            throw new IllegalArgumentException("Null 'categoryKeys' argument.");
        }
        if (categoryKeys.length != this.startData[0].length) {
            throw new IllegalArgumentException(
                    "The number of categories does not match the data.");
        }
        for (int i = 0; i < categoryKeys.length; i++) {
            if (categoryKeys[i] == null) {
                throw new IllegalArgumentException(
                    "DefaultIntervalCategoryDataset.setCategoryKeys(): "
                    + "null category not permitted.");
            }
        }
        this.categoryKeys = categoryKeys;
        fireDatasetChanged();
    }
}

```
# Test Code:
A test method that can reveal the bug of the java program.
```
public void test

[assistant]:DefaultIntervalCategoryDataset() {
    DefaultIntervalCategoryDataset dataset = new DefaultIntervalCategoryDataset();
    Comparable[] seriesKeys = {"Series 1", "Series 2"};
    Comparable[] categoryKeys = {"Category 1", "Category 2", "Category 3"};
    Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
    Number[][] endData = {{2, 3, 4}, {5, 6, 7}};

    dataset.setSeriesKeys(seriesKeys);
    dataset.setCategoryKeys(categoryKeys);
    dataset.setStartData(startData);
    dataset.setEndData(endData);

    assertEquals(2, dataset.getSeriesCount());
    assertEquals(3, dataset.getCategoryCount());
    assertEquals("Series 1", dataset.getSeriesKey(0));
    assertEquals("Series 2", dataset.getSeriesKey(1));
    assertEquals("Category 1", dataset.getCategoryKey(0));
    assertEquals("Category 2", dataset.getCategoryKey(1));
    assertEquals("Category 3", dataset.getCategoryKey(2));
    assertEquals(1, dataset.getStartValue(0, 0));
    assertEquals(3, dataset.getEndValue(0, 0));
    assertEquals(4, dataset.getStartValue(1, 0));
    assertEquals(7, dataset.getEndValue(1, 2));
}
```

[user]:The test method you provided is not able to be built. Please complete the markdown file again with the error information. The error occurred while building the test method is:
[javac]error: no suitable constructor found for DefaultIntervalCategoryDataset()
[javac]     DefaultIntervalCategoryDataset dataset = new DefaultIntervalCategoryDataset();
[javac]                                              ^
[javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(Comparable[],Comparable[],Number[][],Number[][]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(String[],Number[][],Number[][]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(Number[][],Number[][]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     constructor DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(double[][],double[][]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                              ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                                 ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                                    ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                                         ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                                            ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] startData = {{1, 2, 3}, {4, 5, 6}};
[javac]                                               ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                            ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                               ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                                  ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                                       ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                                          ^
[javac]   required: Number
[javac]   found:    int
[javac]error: incompatible types
[javac]     Number[][] endData = {{2, 3, 4}, {5, 6, 7}};
[javac]                                             ^
[javac]   required: Number
[javac]   found:    int
[javac]error: cannot find symbol
[javac]     dataset.setStartData(startData);
[javac]            ^
[javac]   symbol:   method setStartData(Number[][])
[javac]   location: variable dataset of type DefaultIntervalCategoryDataset
[javac]error: cannot find symbol
[javac]     dataset.setEndData(endData);
[javac]            ^
[javac]   symbol:   method setEndData(Number[][])
[javac]   location: variable dataset of type DefaultIntervalCategoryDataset
[javac]error: cannot find symbol
[javac]     Assert.assertEquals("Category 1", dataset.getCategoryKey(0));
[javac]                                              ^
[javac]   symbol:   method getCategoryKey(int)
[javac]   location: variable dataset of type DefaultIntervalCategoryDataset
[javac]error: cannot find symbol
[javac]     Assert.assertEquals("Category 2", dataset.getCategoryKey(1));
[javac]                                              ^
[javac]   symbol:   method getCategoryKey(int)
[javac]   location: variable dataset of type DefaultIntervalCategoryDataset
[javac]error: cannot find symbol
[javac]     Assert.assertEquals("Category 3", dataset.getCategoryKey(2));
[javac]                                              ^
[javac]   symbol:   method getCategoryKey(int)
[javac]   location: variable dataset of type DefaultIntervalCategoryDataset
[javac]error: no suitable method found for assertEquals(int,Number)
[javac]     Assert.assertEquals(1, dataset.getStartValue(0, 0));
[javac]           ^
[javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
[javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double) is not applicable
[javac]       (actual argument Number cannot be converted to double by method invocation conversion)
[javac]     method Assert.assertEquals(String,long,long) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(long,long) is not applicable
[javac]       (actual argument Number cannot be converted to long by method invocation conversion)
[javac]     method Assert.assertEquals(String,float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(Object,Object) is not applicable
[javac]       (actual argument int cannot be converted to Object by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object,Object) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]error: no suitable method found for assertEquals(int,Number)
[javac]     Assert.assertEquals(3, dataset.getEndValue(0, 0));
[javac]           ^
[javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
[javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double) is not applicable
[javac]       (actual argument Number cannot be converted to double by method invocation conversion)
[javac]     method Assert.assertEquals(String,long,long) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(long,long) is not applicable
[javac]       (actual argument Number cannot be converted to long by method invocation conversion)
[javac]     method Assert.assertEquals(String,float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(Object,Object) is not applicable
[javac]       (actual argument int cannot be converted to Object by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object,Object) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]error: no suitable method found for assertEquals(int,Number)
[javac]     Assert.assertEquals(4, dataset.getStartValue(1, 0));
[javac]           ^
[javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
[javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double) is not applicable
[javac]       (actual argument Number cannot be converted to double by method invocation conversion)
[javac]     method Assert.assertEquals(String,long,long) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(long,long) is not applicable
[javac]       (actual argument Number cannot be converted to long by method invocation conversion)
[javac]     method Assert.assertEquals(String,float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(Object,Object) is not applicable
[javac]       (actual argument int cannot be converted to Object by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object,Object) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]error: no suitable method found for assertEquals(int,Number)
[javac]     Assert.assertEquals(7, dataset.getEndValue(1, 2));
[javac]           ^
[javac]     method Assert.assertEquals(Object[],Object[]) is not applicable
[javac]       (actual argument int cannot be converted to Object[] by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object[],Object[]) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(double,double) is not applicable
[javac]       (actual argument Number cannot be converted to double by method invocation conversion)
[javac]     method Assert.assertEquals(String,long,long) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(long,long) is not applicable
[javac]       (actual argument Number cannot be converted to long by method invocation conversion)
[javac]     method Assert.assertEquals(String,float,float,float) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(String,double,double,double) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac]     method Assert.assertEquals(Object,Object) is not applicable
[javac]       (actual argument int cannot be converted to Object by method invocation conversion)
[javac]     method Assert.assertEquals(String,Object,Object) is not applicable
[javac]       (actual and formal argument lists differ in length)
[javac] Note: /jTrans/Eval/src/Chart/16b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
[javac] Note: Recompile with -Xlint:deprecation for details.

```
public void test

Invoking LLM(gpt-3.5-turbo) for Chart-16 NO.2 try
Invoke failed:This model's maximum context length is 4097 tokens. However, your messages resulted in 4427 tokens. Please reduce the length of the messages.
runTestWithRetry NO.2 try
Fail to invoke LLM.
runTestWithRetry NO.1 try
runTest
trigger_code=public void testGetCategoryIndex() {
    // check an empty dataset
    DefaultIntervalCategoryDataset empty = new DefaultIntervalCategoryDataset(new double[0][0], new double[0][0]);
    int expectedIndex = -1;
    int actualIndex = empty.getCategoryIndex("ABC");
    Assert.assertEquals(expectedIndex, actualIndex);
}
, check_out_path=/jTrans/Eval/src/Chart/16b, test_class_path=org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java
test_code_path=/jTrans/Eval/src/Chart/16b/tests
trigger_method_lines=public void testGetCategoryIndex() {
    // check an empty dataset
    DefaultIntervalCategoryDataset empty = new DefaultIntervalCategoryDataset(new double[0][0], new double[0][0]);
    int expectedIndex = -1;
    int actualIndex = empty.getCategoryIndex("ABC");
    Assert.assertEquals(expectedIndex, actualIndex);
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/16b -t org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests::newTestMethod1
org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 1
runTest
trigger_code=public void testGetCategoryIndex() {
    // check an empty dataset
    DefaultIntervalCategoryDataset empty = new DefaultIntervalCategoryDataset(new double[0][0], new double[0][0]);
    int expectedIndex = -1;
    int actualIndex = empty.getCategoryIndex("ABC");
    Assert.assertEquals(expectedIndex, actualIndex);
}
, check_out_path=/jTrans/Eval/src/Chart/16f, test_class_path=org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests.java
test_code_path=/jTrans/Eval/src/Chart/16f/tests
trigger_method_lines=public void testGetCategoryIndex() {
    // check an empty dataset
    DefaultIntervalCategoryDataset empty = new DefaultIntervalCategoryDataset(new double[0][0], new double[0][0]);
    int expectedIndex = -1;
    int actualIndex = empty.getCategoryIndex("ABC");
    Assert.assertEquals(expectedIndex, actualIndex);
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/16f -t org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests::newTestMethod1
org/jfree/data/category/junit/DefaultIntervalCategoryDatasetTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK

test_results.stdout
Failing tests: 0
-----------------------------------------------
res_in_bug=Test failed, res_in_fix=Test passed
unit_res_in_bug=Build failed,unit_res_in_fix=Build failed,oracle_res_in_bug=Test failed,oracle_res_in_fix=Test passed
