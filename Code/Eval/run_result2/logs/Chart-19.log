Getting Chart-19 focal context...
focal_context=/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -----------------
 * CategoryPlot.java
 * -----------------
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   Jeremy Bowman;
 *                   Arnaud Lelievre;
 *
 * Changes (from 21-Jun-2001)
 * --------------------------
 * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG);
 * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG);
 * 18-Sep-2001 : Updated header (DG);
 * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG);
 * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG);
 * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of 
 *               available space rather than a fixed number of units (DG);
 * 12-Dec-2001 : Changed constructors to protected (DG);
 * 13-Dec-2001 : Added tooltips (DG);
 * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added 
 *               some argument checking code.  Thanks to Taoufik Romdhane for 
 *               suggesting this (DG);
 * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated
 *               alpha-transparency for Plot and subclasses (DG);
 * 06-Mar-2002 : Updated import statements (DG);
 * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code 
 *               to use the CategoryItemRenderer interface (DG);
 * 22-Mar-2002 : Dropped the getCategories() method (DG);
 * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot 
 *               class (DG);
 * 29-Apr-2002 : New methods to support printing values at the end of bars, 
 *               contributed by Jeremy Bowman (DG);
 * 11-May-2002 : New methods for label visibility and overlaid plot support, 
 *               contributed by Jeremy Bowman (DG);
 * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the 
 *               renderer.  Moved constants into the CategoryPlotConstants 
 *               interface.  Updated Javadoc comments (DG);
 * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and 
 *               lower bound on the range axis (if necessary), updated 
 *               Javadocs (DG);
 * 25-Jun-2002 : Removed redundant imports (DG);
 * 20-Aug-2002 : Changed the constructor for Marker (DG);
 * 28-Aug-2002 : Added listener notification to setDomainAxis() and 
 *               setRangeAxis() (DG);
 * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by 
 *               Checkstyle (DG);
 * 28-Oct-2002 : Changes to the CategoryDataset interface (DG);
 * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG);
 * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG);
 * 18-Nov-2002 : Added grid settings for both domain and range axis (previously
 *               these were set in the axes) (DG);
 * 19-Nov-2002 : Added axis location parameters to constructor (DG);
 * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG);
 * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG);
 * 26-Mar-2003 : Implemented Serializable (DG);
 * 02-May-2003 : Moved render() method up from subclasses. Added secondary 
 *               range markers. Added an attribute to control the dataset 
 *               rendering order.  Added a drawAnnotations() method.  Changed 
 *               the axis location from an int to an AxisLocation (DG);
 * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into 
 *               this class (DG);
 * 02-Jun-2003 : Removed check for range axis compatibility (DG);
 * 04-Jul-2003 : Added a domain gridline position attribute (DG);
 * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG);
 * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG);
 * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset 
 *               changes) (DG);
 * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and
 *               790407 (initialise method) (DG);
 * 08-Sep-2003 : Added internationalization via use of properties 
 *               resourceBundle (RFE 690236) (AL); 
 * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed 
 *               ValueAxis API (DG);
 * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG);
 * 15-Sep-2003 : Fixed two bugs in serialization, implemented 
 *               PublicCloneable (DG);
 * 23-Oct-2003 : Added event notification for changes to renderer (DG);
 * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG);
 * 03-Dec-2003 : Modified draw method to accept anchor (DG);
 * 21-Jan-2004 : Update for renamed method in ValueAxis (DG);
 * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is
 *               stacked (DG);
 * 12-May-2004 : Added fixed legend items (DG);
 * 19-May-2004 : Added check for null legend item from renderer (DG);
 * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG);
 * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() 
 *               --> datasetsMappedToRangeAxis(), and ensured that returned 
 *               list doesn't contain null datasets (DG);
 * 12-Nov-2004 : Implemented new Zoomable interface (DG);
 * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in 
 *               CategoryItemRenderer (DG);
 * 04-May-2005 : Fixed serialization of range markers (DG);
 * 05-May-2005 : Updated draw() method parameters (DG);
 * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per
 *               RFE 1183100 (DG);
 * 01-Jun-2005 : Upon deserialization, register plot as a listener with its
 *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG);
 * 02-Jun-2005 : Added support for domain markers (DG);
 * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG);
 * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG);
 * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to
 *               match XYPlot (see RFE 1220495) (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the
 *               renderer might influence the axis range (DG);
 * 27-Jan-2006 : Added various null argument checks (DG);
 * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing 
 *               category labels, thanks to Adriaan Joubert (1277726) (DG);
 * 05-Sep-2006 : Added MarkerChangeEvent support (DG);
 * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and 
 *               getCategoriesForAxis() methods (DG);
 * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and
 *               setRowRenderingOrder() (DG);
 * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data 
 *               area) (DG);
 * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument
 *               ignored) (DG);
 * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and
 *               setRangeCrosshairStroke(), fixed clipping for 
 *               anntotations (DG);
 * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG);
 * 21-Jun-2007 : Removed JCommon dependencies (DG);
 * 06-Jul-2007 : Updated annotation handling (DG);
 * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG);
 * 24-Sep-2007 : Implemented new zoom methods (DG);
 * 25-Oct-2007 : Added some argument checks (DG);
 *
 */
package org.jfree.chart.plot;
import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.Set;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisCollection;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.axis.ValueTick;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.event.RendererChangeListener;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.ObjectList;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.chart.util.PaintUtilities;
import org.jfree.chart.util.PublicCloneable;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SerialUtilities;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetUtilities;
/**
 * A general plotting class that uses data from a {@link CategoryDataset} and 
 * renders each data item using a {@link CategoryItemRenderer}.
 */
public class CategoryPlot extends Plot implements ValueAxisPlot, 
        Zoomable, RendererChangeListener, Cloneable, PublicCloneable, 
        Serializable {
    private static final long serialVersionUID = -3537691700434728188L;
    public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;
    public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;
    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
    public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;
    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
    private PlotOrientation orientation;
    private RectangleInsets axisOffset;
    private ObjectList domainAxes;
    private ObjectList domainAxisLocations;
    private boolean drawSharedDomainAxis;
    private ObjectList rangeAxes;
    private ObjectList rangeAxisLocations;
    private ObjectList datasets;
    private ObjectList datasetToDomainAxisMap;
    private ObjectList datasetToRangeAxisMap;
    private ObjectList renderers;
    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;
    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;
    private boolean domainGridlinesVisible;
    private CategoryAnchor domainGridlinePosition;
    private transient Stroke domainGridlineStroke;
    private transient Paint domainGridlinePaint;
    private boolean rangeGridlinesVisible;
    private transient Stroke rangeGridlineStroke;
    private transient Paint rangeGridlinePaint;
    private double anchorValue;
    private boolean rangeCrosshairVisible;
    private double rangeCrosshairValue;
    private transient Stroke rangeCrosshairStroke;
    private transient Paint rangeCrosshairPaint;
    private boolean rangeCrosshairLockedOnData = true;
    private Map foregroundDomainMarkers;
    private Map backgroundDomainMarkers;
    private Map foregroundRangeMarkers;
    private Map backgroundRangeMarkers;
    private List annotations;
    private int weight;
    private AxisSpace fixedDomainAxisSpace;
    private AxisSpace fixedRangeAxisSpace;
    private LegendItemCollection fixedLegendItems;
    /**
     * Sets the domain axes for this plot and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     * 
     * @param axes  the axes (<code>null</code> not permitted).
     * 
     * @see #setRangeAxes(ValueAxis[])
     */
    public void setDomainAxes(CategoryAxis[] axes) {
        for (int i = 0; i < axes.length; i++) {
            setDomainAxis(i, axes[i], false);   
        }
        notifyListeners(new PlotChangeEvent(this));
    }
    /**
     * Sets the range axis for the plot and sends a {@link PlotChangeEvent} to
     * all registered listeners.
     *
     * @param axis  the axis (<code>null</code> permitted).
     */
    public void setRangeAxis(ValueAxis axis) {
        setRangeAxis(0, axis);
    }
    /**
     * Sets a range axis and sends a {@link PlotChangeEvent} to all registered
     * listeners.
     *
     * @param index  the axis index.
     * @param axis  the axis.
     */
    public void setRangeAxis(int index, ValueAxis axis) {
        setRangeAxis(index, axis, true);
    }
    /**
     * Returns the index of the specified axis, or <code>-1</code> if the axis
     * is not assigned to the plot.
     *
     * @param axis  the axis (<code>null</code> not permitted).
     *
     * @return The axis index.
     * 
     * @see #getRangeAxis(int)
     * @see #getDomainAxisIndex(CategoryAxis)
     * 
     * @since 1.0.7
     */
    public int getRangeAxisIndex(ValueAxis axis) {
        int result = this.rangeAxes.indexOf(axis);
        if (result < 0) { // try the parent plot
            Plot parent = getParent();
            if (parent instanceof CategoryPlot) {
                CategoryPlot p = (CategoryPlot) parent;
                result = p.getRangeAxisIndex(axis);
            }
        }
        return result;
    }
    /**
     * Sets the range axes for this plot and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     * 
     * @param axes  the axes (<code>null</code> not permitted).
     * 
     * @see #setDomainAxes(CategoryAxis[])
     */
    public void setRangeAxes(ValueAxis[] axes) {
        for (int i = 0; i < axes.length; i++) {
            setRangeAxis(i, axes[i], false);   
        }
        notifyListeners(new PlotChangeEvent(this));
    }
    /**
     * Sets a range axis and, if requested, sends a {@link PlotChangeEvent} to 
     * all registered listeners.
     *
     * @param index  the axis index.
     * @param axis  the axis.
     * @param notify  notify listeners?
     */
    public void setRangeAxis(int index, ValueAxis axis, boolean notify) {
        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        if (axis != null) {
            axis.setPlot(this);
        }
        this.rangeAxes.set(index, axis);
        if (axis != null) {
            axis.configure();
            axis.addChangeListener(this);
        }
        if (notify) {
            notifyListeners(new PlotChangeEvent(this));
        }
    }
}

Getting Chart-19 test prefix...
oracle_focal_context=/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -----------------
 * CategoryPlot.java
 * -----------------
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   Jeremy Bowman;
 *                   Arnaud Lelievre;
 *
 * Changes (from 21-Jun-2001)
 * --------------------------
 * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG);
 * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG);
 * 18-Sep-2001 : Updated header (DG);
 * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG);
 * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG);
 * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of 
 *               available space rather than a fixed number of units (DG);
 * 12-Dec-2001 : Changed constructors to protected (DG);
 * 13-Dec-2001 : Added tooltips (DG);
 * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added 
 *               some argument checking code.  Thanks to Taoufik Romdhane for 
 *               suggesting this (DG);
 * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated
 *               alpha-transparency for Plot and subclasses (DG);
 * 06-Mar-2002 : Updated import statements (DG);
 * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code 
 *               to use the CategoryItemRenderer interface (DG);
 * 22-Mar-2002 : Dropped the getCategories() method (DG);
 * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot 
 *               class (DG);
 * 29-Apr-2002 : New methods to support printing values at the end of bars, 
 *               contributed by Jeremy Bowman (DG);
 * 11-May-2002 : New methods for label visibility and overlaid plot support, 
 *               contributed by Jeremy Bowman (DG);
 * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the 
 *               renderer.  Moved constants into the CategoryPlotConstants 
 *               interface.  Updated Javadoc comments (DG);
 * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and 
 *               lower bound on the range axis (if necessary), updated 
 *               Javadocs (DG);
 * 25-Jun-2002 : Removed redundant imports (DG);
 * 20-Aug-2002 : Changed the constructor for Marker (DG);
 * 28-Aug-2002 : Added listener notification to setDomainAxis() and 
 *               setRangeAxis() (DG);
 * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by 
 *               Checkstyle (DG);
 * 28-Oct-2002 : Changes to the CategoryDataset interface (DG);
 * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG);
 * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG);
 * 18-Nov-2002 : Added grid settings for both domain and range axis (previously
 *               these were set in the axes) (DG);
 * 19-Nov-2002 : Added axis location parameters to constructor (DG);
 * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG);
 * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG);
 * 26-Mar-2003 : Implemented Serializable (DG);
 * 02-May-2003 : Moved render() method up from subclasses. Added secondary 
 *               range markers. Added an attribute to control the dataset 
 *               rendering order.  Added a drawAnnotations() method.  Changed 
 *               the axis location from an int to an AxisLocation (DG);
 * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into 
 *               this class (DG);
 * 02-Jun-2003 : Removed check for range axis compatibility (DG);
 * 04-Jul-2003 : Added a domain gridline position attribute (DG);
 * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG);
 * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG);
 * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset 
 *               changes) (DG);
 * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and
 *               790407 (initialise method) (DG);
 * 08-Sep-2003 : Added internationalization via use of properties 
 *               resourceBundle (RFE 690236) (AL); 
 * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed 
 *               ValueAxis API (DG);
 * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG);
 * 15-Sep-2003 : Fixed two bugs in serialization, implemented 
 *               PublicCloneable (DG);
 * 23-Oct-2003 : Added event notification for changes to renderer (DG);
 * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG);
 * 03-Dec-2003 : Modified draw method to accept anchor (DG);
 * 21-Jan-2004 : Update for renamed method in ValueAxis (DG);
 * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is
 *               stacked (DG);
 * 12-May-2004 : Added fixed legend items (DG);
 * 19-May-2004 : Added check for null legend item from renderer (DG);
 * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG);
 * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() 
 *               --> datasetsMappedToRangeAxis(), and ensured that returned 
 *               list doesn't contain null datasets (DG);
 * 12-Nov-2004 : Implemented new Zoomable interface (DG);
 * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in 
 *               CategoryItemRenderer (DG);
 * 04-May-2005 : Fixed serialization of range markers (DG);
 * 05-May-2005 : Updated draw() method parameters (DG);
 * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per
 *               RFE 1183100 (DG);
 * 01-Jun-2005 : Upon deserialization, register plot as a listener with its
 *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG);
 * 02-Jun-2005 : Added support for domain markers (DG);
 * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG);
 * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG);
 * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to
 *               match XYPlot (see RFE 1220495) (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the
 *               renderer might influence the axis range (DG);
 * 27-Jan-2006 : Added various null argument checks (DG);
 * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing 
 *               category labels, thanks to Adriaan Joubert (1277726) (DG);
 * 05-Sep-2006 : Added MarkerChangeEvent support (DG);
 * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and 
 *               getCategoriesForAxis() methods (DG);
 * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and
 *               setRowRenderingOrder() (DG);
 * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data 
 *               area) (DG);
 * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument
 *               ignored) (DG);
 * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and
 *               setRangeCrosshairStroke(), fixed clipping for 
 *               anntotations (DG);
 * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG);
 * 21-Jun-2007 : Removed JCommon dependencies (DG);
 * 06-Jul-2007 : Updated annotation handling (DG);
 * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG);
 * 24-Sep-2007 : Implemented new zoom methods (DG);
 * 25-Oct-2007 : Added some argument checks (DG);
 *
 */
package org.jfree.chart.plot;
import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.Set;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisCollection;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.axis.ValueTick;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.event.RendererChangeListener;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.ObjectList;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.chart.util.PaintUtilities;
import org.jfree.chart.util.PublicCloneable;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SerialUtilities;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetUtilities;
/**
 * A general plotting class that uses data from a {@link CategoryDataset} and 
 * renders each data item using a {@link CategoryItemRenderer}.
 */
public class CategoryPlot extends Plot implements ValueAxisPlot, 
        Zoomable, RendererChangeListener, Cloneable, PublicCloneable, 
        Serializable {
    private static final long serialVersionUID = -3537691700434728188L;
    public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;
    public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;
    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
    public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;
    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
    private PlotOrientation orientation;
    private RectangleInsets axisOffset;
    private ObjectList domainAxes;
    private ObjectList domainAxisLocations;
    private boolean drawSharedDomainAxis;
    private ObjectList rangeAxes;
    private ObjectList rangeAxisLocations;
    private ObjectList datasets;
    private ObjectList datasetToDomainAxisMap;
    private ObjectList datasetToRangeAxisMap;
    private ObjectList renderers;
    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;
    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;
    private boolean domainGridlinesVisible;
    private CategoryAnchor domainGridlinePosition;
    private transient Stroke domainGridlineStroke;
    private transient Paint domainGridlinePaint;
    private boolean rangeGridlinesVisible;
    private transient Stroke rangeGridlineStroke;
    private transient Paint rangeGridlinePaint;
    private double anchorValue;
    private boolean rangeCrosshairVisible;
    private double rangeCrosshairValue;
    private transient Stroke rangeCrosshairStroke;
    private transient Paint rangeCrosshairPaint;
    private boolean rangeCrosshairLockedOnData = true;
    private Map foregroundDomainMarkers;
    private Map backgroundDomainMarkers;
    private Map foregroundRangeMarkers;
    private Map backgroundRangeMarkers;
    private List annotations;
    private int weight;
    private AxisSpace fixedDomainAxisSpace;
    private AxisSpace fixedRangeAxisSpace;
    private LegendItemCollection fixedLegendItems;
    /**
     * Returns the index of the specified axis, or <code>-1</code> if the axis
     * is not assigned to the plot.
     *
     * @param axis  the axis (<code>null</code> not permitted).
     *
     * @return The axis index.
     * 
     * @see #getRangeAxis(int)
     * @see #getDomainAxisIndex(CategoryAxis)
     * 
     * @since 1.0.7
     */
    public int getRangeAxisIndex(ValueAxis axis) {
        int result = this.rangeAxes.indexOf(axis);
        if (result < 0) { // try the parent plot
            Plot parent = getParent();
            if (parent instanceof CategoryPlot) {
                CategoryPlot p = (CategoryPlot) parent;
                result = p.getRangeAxisIndex(axis);
            }
        }
        return result;
    }
    /**
     * Sets the range axis for the plot and sends a {@link PlotChangeEvent} to
     * all registered listeners.
     *
     * @param axis  the axis (<code>null</code> permitted).
     */
    public void setRangeAxis(ValueAxis axis) {
        setRangeAxis(0, axis);
    }
    /**
     * Sets a range axis and sends a {@link PlotChangeEvent} to all registered
     * listeners.
     *
     * @param index  the axis index.
     * @param axis  the axis.
     */
    public void setRangeAxis(int index, ValueAxis axis) {
        setRangeAxis(index, axis, true);
    }
    /**
     * Sets a range axis and, if requested, sends a {@link PlotChangeEvent} to 
     * all registered listeners.
     *
     * @param index  the axis index.
     * @param axis  the axis.
     * @param notify  notify listeners?
     */
    public void setRangeAxis(int index, ValueAxis axis, boolean notify) {
        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        if (axis != null) {
            axis.setPlot(this);
        }
        this.rangeAxes.set(index, axis);
        if (axis != null) {
            axis.configure();
            axis.addChangeListener(this);
        }
        if (notify) {
            notifyListeners(new PlotChangeEvent(this));
        }
    }
    /**
     * Default constructor.
     */
    public CategoryPlot() {
        this(null, null, null, null);
    }
    /**
     * Creates a new plot.
     *
     * @param dataset  the dataset (<code>null</code> permitted).
     * @param domainAxis  the domain axis (<code>null</code> permitted).
     * @param rangeAxis  the range axis (<code>null</code> permitted).
     * @param renderer  the item renderer (<code>null</code> permitted).
     *
     */
    public CategoryPlot(CategoryDataset dataset,
                        CategoryAxis domainAxis,
                        ValueAxis rangeAxis,
                        CategoryItemRenderer renderer) {

        super();

        this.orientation = PlotOrientation.VERTICAL;

        // allocate storage for dataset, axes and renderers
        this.domainAxes = new ObjectList();
        this.domainAxisLocations = new ObjectList();
        this.rangeAxes = new ObjectList();
        this.rangeAxisLocations = new ObjectList();
        
        this.datasetToDomainAxisMap = new ObjectList();
        this.datasetToRangeAxisMap = new ObjectList();

        this.renderers = new ObjectList();

        this.datasets = new ObjectList();
        this.datasets.set(0, dataset);
        if (dataset != null) {
            dataset.addChangeListener(this);
        }

        this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);

        setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
        setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);

        this.renderers.set(0, renderer);
        if (renderer != null) {
            renderer.setPlot(this);
            renderer.addChangeListener(this);
        }

        this.domainAxes.set(0, domainAxis);
        this.mapDatasetToDomainAxis(0, 0);
        if (domainAxis != null) {
            domainAxis.setPlot(this);
            domainAxis.addChangeListener(this);
        }
        this.drawSharedDomainAxis = false;

        this.rangeAxes.set(0, rangeAxis);
        this.mapDatasetToRangeAxis(0, 0);
        if (rangeAxis != null) {
            rangeAxis.setPlot(this);
            rangeAxis.addChangeListener(this);
        }
        
        configureDomainAxes();
        configureRangeAxes();

        this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
        this.domainGridlinePosition = CategoryAnchor.MIDDLE;
        this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
        this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;

        this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
        this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
        this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;

        this.foregroundDomainMarkers = new HashMap();
        this.backgroundDomainMarkers = new HashMap();
        this.foregroundRangeMarkers = new HashMap();
        this.backgroundRangeMarkers = new HashMap();

        Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 
                0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 
                0.5f), new BasicStroke(1.0f), 0.6f);
        addRangeMarker(baseline, Layer.BACKGROUND);

        this.anchorValue = 0.0;

        this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
        this.rangeCrosshairValue = 0.0;
        this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
        
        this.annotations = new java.util.ArrayList();

    }
}

test_class_path=org/jfree/chart/plot/junit/CategoryPlotTests.java, test_prefix=    public void testGetRangeAxisIndex() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        NumberAxis rangeAxis2 = new NumberAxis("Y2");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        _tmp_var_0_ = 0;
        _tmp_var_1_ =  plot.getRangeAxisIndex(rangeAxis1);
        $ASSERT$
        _tmp_var_2_ = -1;
        _tmp_var_3_ =  plot.getRangeAxisIndex(rangeAxis2);
        $ASSERT$
        plot.setRangeAxis(1, rangeAxis2);
        _tmp_var_4_ = 1;
        _tmp_var_5_ =  plot.getRangeAxisIndex(rangeAxis2);
        $ASSERT$
        _tmp_var_6_ = -1;
        _tmp_var_7_ =  plot.getRangeAxisIndex(new NumberAxis("Y2"));
        $ASSERT$
        boolean pass = false;
        try {
            plot.getRangeAxisIndex(null);
        }
        catch ($EXCEPTION$ e) {
            pass = true;
        }
        _tmp_var_8_ = pass;
        $ASSERT$
    }

Constructing unit test prompt for Chart-19
unit_test_prompt=# Java Program:
A java program with one or more bugs.
```
/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -----------------
 * CategoryPlot.java
 * -----------------
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   Jeremy Bowman;
 *                   Arnaud Lelievre;
 *
 * Changes (from 21-Jun-2001)
 * --------------------------
 * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG);
 * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG);
 * 18-Sep-2001 : Updated header (DG);
 * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG);
 * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG);
 * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of 
 *               available space rather than a fixed number of units (DG);
 * 12-Dec-2001 : Changed constructors to protected (DG);
 * 13-Dec-2001 : Added tooltips (DG);
 * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added 
 *               some argument checking code.  Thanks to Taoufik Romdhane for 
 *               suggesting this (DG);
 * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated
 *               alpha-transparency for Plot and subclasses (DG);
 * 06-Mar-2002 : Updated import statements (DG);
 * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code 
 *               to use the CategoryItemRenderer interface (DG);
 * 22-Mar-2002 : Dropped the getCategories() method (DG);
 * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot 
 *               class (DG);
 * 29-Apr-2002 : New methods to support printing values at the end of bars, 
 *               contributed by Jeremy Bowman (DG);
 * 11-May-2002 : New methods for label visibility and overlaid plot support, 
 *               contributed by Jeremy Bowman (DG);
 * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the 
 *               renderer.  Moved constants into the CategoryPlotConstants 
 *               interface.  Updated Javadoc comments (DG);
 * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and 
 *               lower bound on the range axis (if necessary), updated 
 *               Javadocs (DG);
 * 25-Jun-2002 : Removed redundant imports (DG);
 * 20-Aug-2002 : Changed the constructor for Marker (DG);
 * 28-Aug-2002 : Added listener notification to setDomainAxis() and 
 *               setRangeAxis() (DG);
 * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by 
 *               Checkstyle (DG);
 * 28-Oct-2002 : Changes to the CategoryDataset interface (DG);
 * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG);
 * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG);
 * 18-Nov-2002 : Added grid settings for both domain and range axis (previously
 *               these were set in the axes) (DG);
 * 19-Nov-2002 : Added axis location parameters to constructor (DG);
 * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG);
 * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG);
 * 26-Mar-2003 : Implemented Serializable (DG);
 * 02-May-2003 : Moved render() method up from subclasses. Added secondary 
 *               range markers. Added an attribute to control the dataset 
 *               rendering order.  Added a drawAnnotations() method.  Changed 
 *               the axis location from an int to an AxisLocation (DG);
 * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into 
 *               this class (DG);
 * 02-Jun-2003 : Removed check for range axis compatibility (DG);
 * 04-Jul-2003 : Added a domain gridline position attribute (DG);
 * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG);
 * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG);
 * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset 
 *               changes) (DG);
 * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and
 *               790407 (initialise method) (DG);
 * 08-Sep-2003 : Added internationalization via use of properties 
 *               resourceBundle (RFE 690236) (AL); 
 * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed 
 *               ValueAxis API (DG);
 * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG);
 * 15-Sep-2003 : Fixed two bugs in serialization, implemented 
 *               PublicCloneable (DG);
 * 23-Oct-2003 : Added event notification for changes to renderer (DG);
 * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG);
 * 03-Dec-2003 : Modified draw method to accept anchor (DG);
 * 21-Jan-2004 : Update for renamed method in ValueAxis (DG);
 * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is
 *               stacked (DG);
 * 12-May-2004 : Added fixed legend items (DG);
 * 19-May-2004 : Added check for null legend item from renderer (DG);
 * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG);
 * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() 
 *               --> datasetsMappedToRangeAxis(), and ensured that returned 
 *               list doesn't contain null datasets (DG);
 * 12-Nov-2004 : Implemented new Zoomable interface (DG);
 * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in 
 *               CategoryItemRenderer (DG);
 * 04-May-2005 : Fixed serialization of range markers (DG);
 * 05-May-2005 : Updated draw() method parameters (DG);
 * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per
 *               RFE 1183100 (DG);
 * 01-Jun-2005 : Upon deserialization, register plot as a listener with its
 *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG);
 * 02-Jun-2005 : Added support for domain markers (DG);
 * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG);
 * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG);
 * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to
 *               match XYPlot (see RFE 1220495) (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the
 *               renderer might influence the axis range (DG);
 * 27-Jan-2006 : Added various null argument checks (DG);
 * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing 
 *               category labels, thanks to Adriaan Joubert (1277726) (DG);
 * 05-Sep-2006 : Added MarkerChangeEvent support (DG);
 * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and 
 *               getCategoriesForAxis() methods (DG);
 * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and
 *               setRowRenderingOrder() (DG);
 * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data 
 *               area) (DG);
 * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument
 *               ignored) (DG);
 * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and
 *               setRangeCrosshairStroke(), fixed clipping for 
 *               anntotations (DG);
 * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG);
 * 21-Jun-2007 : Removed JCommon dependencies (DG);
 * 06-Jul-2007 : Updated annotation handling (DG);
 * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG);
 * 24-Sep-2007 : Implemented new zoom methods (DG);
 * 25-Oct-2007 : Added some argument checks (DG);
 *
 */
package org.jfree.chart.plot;
import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.Set;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisCollection;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.axis.ValueTick;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.event.RendererChangeListener;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.ObjectList;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.chart.util.PaintUtilities;
import org.jfree.chart.util.PublicCloneable;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SerialUtilities;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetUtilities;
/**
 * A general plotting class that uses data from a {@link CategoryDataset} and 
 * renders each data item using a {@link CategoryItemRenderer}.
 */
public class CategoryPlot extends Plot implements ValueAxisPlot, 
        Zoomable, RendererChangeListener, Cloneable, PublicCloneable, 
        Serializable {
    private static final long serialVersionUID = -3537691700434728188L;
    public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;
    public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;
    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
    public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;
    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
    private PlotOrientation orientation;
    private RectangleInsets axisOffset;
    private ObjectList domainAxes;
    private ObjectList domainAxisLocations;
    private boolean drawSharedDomainAxis;
    private ObjectList rangeAxes;
    private ObjectList rangeAxisLocations;
    private ObjectList datasets;
    private ObjectList datasetToDomainAxisMap;
    private ObjectList datasetToRangeAxisMap;
    private ObjectList renderers;
    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;
    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;
    private boolean domainGridlinesVisible;
    private CategoryAnchor domainGridlinePosition;
    private transient Stroke domainGridlineStroke;
    private transient Paint domainGridlinePaint;
    private boolean rangeGridlinesVisible;
    private transient Stroke rangeGridlineStroke;
    private transient Paint rangeGridlinePaint;
    private double anchorValue;
    private boolean rangeCrosshairVisible;
    private double rangeCrosshairValue;
    private transient Stroke rangeCrosshairStroke;
    private transient Paint rangeCrosshairPaint;
    private boolean rangeCrosshairLockedOnData = true;
    private Map foregroundDomainMarkers;
    private Map backgroundDomainMarkers;
    private Map foregroundRangeMarkers;
    private Map backgroundRangeMarkers;
    private List annotations;
    private int weight;
    private AxisSpace fixedDomainAxisSpace;
    private AxisSpace fixedRangeAxisSpace;
    private LegendItemCollection fixedLegendItems;
    /**
     * Sets the domain axes for this plot and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     * 
     * @param axes  the axes (<code>null</code> not permitted).
     * 
     * @see #setRangeAxes(ValueAxis[])
     */
    public void setDomainAxes(CategoryAxis[] axes) {
        for (int i = 0; i < axes.length; i++) {
            setDomainAxis(i, axes[i], false);   
        }
        notifyListeners(new PlotChangeEvent(this));
    }
    /**
     * Sets the range axis for the plot and sends a {@link PlotChangeEvent} to
     * all registered listeners.
     *
     * @param axis  the axis (<code>null</code> permitted).
     */
    public void setRangeAxis(ValueAxis axis) {
        setRangeAxis(0, axis);
    }
    /**
     * Sets a range axis and sends a {@link PlotChangeEvent} to all registered
     * listeners.
     *
     * @param index  the axis index.
     * @param axis  the axis.
     */
    public void setRangeAxis(int index, ValueAxis axis) {
        setRangeAxis(index, axis, true);
    }
    /**
     * Returns the index of the specified axis, or <code>-1</code> if the axis
     * is not assigned to the plot.
     *
     * @param axis  the axis (<code>null</code> not permitted).
     *
     * @return The axis index.
     * 
     * @see #getRangeAxis(int)
     * @see #getDomainAxisIndex(CategoryAxis)
     * 
     * @since 1.0.7
     */
    public int getRangeAxisIndex(ValueAxis axis) {
        int result = this.rangeAxes.indexOf(axis);
        if (result < 0) { // try the parent plot
            Plot parent = getParent();
            if (parent instanceof CategoryPlot) {
                CategoryPlot p = (CategoryPlot) parent;
                result = p.getRangeAxisIndex(axis);
            }
        }
        return result;
    }
    /**
     * Sets the range axes for this plot and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     * 
     * @param axes  the axes (<code>null</code> not permitted).
     * 
     * @see #setDomainAxes(CategoryAxis[])
     */
    public void setRangeAxes(ValueAxis[] axes) {
        for (int i = 0; i < axes.length; i++) {
            setRangeAxis(i, axes[i], false);   
        }
        notifyListeners(new PlotChangeEvent(this));
    }
    /**
     * Sets a range axis and, if requested, sends a {@link PlotChangeEvent} to 
     * all registered listeners.
     *
     * @param index  the axis index.
     * @param axis  the axis.
     * @param notify  notify listeners?
     */
    public void setRangeAxis(int index, ValueAxis axis, boolean notify) {
        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        if (axis != null) {
            axis.setPlot(this);
        }
        this.rangeAxes.set(index, axis);
        if (axis != null) {
            axis.configure();
            axis.addChangeListener(this);
        }
        if (notify) {
            notifyListeners(new PlotChangeEvent(this));
        }
    }
}

```
# Test Code:
A test method that can reveal the bug of the java program.
```
public void test
Invoking LLM(gpt-3.5-turbo) for Chart-19 unit test
unit_test_response=CategoryPlot() {
    CategoryPlot plot = new CategoryPlot();
    ValueAxis domainAxis = new ValueAxis("X");
    ValueAxis rangeAxis = new ValueAxis("Y");
    plot.setDomainAxis(domainAxis);
    plot.setRangeAxis(rangeAxis);
    CategoryItemRenderer renderer = new LineAndShapeRenderer();
    plot.setRenderer(renderer);
    CategoryDataset dataset = new DefaultCategoryDataset();
    dataset.addValue(1.0, "Series 1", "Category 1");
    dataset.addValue(2.0, "Series 1", "Category 2");
    dataset.addValue(3.0, "Series 1", "Category 3");
    plot.setDataset(dataset);
    JFreeChart chart = new JFreeChart(plot);
    assertEquals(1, chart.getPlot().getDataset().getRowCount()); // should pass
}
```
Constructing test code for Chart-19 unit test
Finished constructing test code for Chart-19 unit test
Finished invoking LLM(gpt-3.5-turbo) for Chart-19 unit test
Constructing oracle test prompt for Chart-19
oracle_test_prompt=# Java Program:
A java program with one or more bugs.
```
/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -----------------
 * CategoryPlot.java
 * -----------------
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   Jeremy Bowman;
 *                   Arnaud Lelievre;
 *
 * Changes (from 21-Jun-2001)
 * --------------------------
 * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG);
 * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG);
 * 18-Sep-2001 : Updated header (DG);
 * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG);
 * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG);
 * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of 
 *               available space rather than a fixed number of units (DG);
 * 12-Dec-2001 : Changed constructors to protected (DG);
 * 13-Dec-2001 : Added tooltips (DG);
 * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added 
 *               some argument checking code.  Thanks to Taoufik Romdhane for 
 *               suggesting this (DG);
 * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated
 *               alpha-transparency for Plot and subclasses (DG);
 * 06-Mar-2002 : Updated import statements (DG);
 * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code 
 *               to use the CategoryItemRenderer interface (DG);
 * 22-Mar-2002 : Dropped the getCategories() method (DG);
 * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot 
 *               class (DG);
 * 29-Apr-2002 : New methods to support printing values at the end of bars, 
 *               contributed by Jeremy Bowman (DG);
 * 11-May-2002 : New methods for label visibility and overlaid plot support, 
 *               contributed by Jeremy Bowman (DG);
 * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the 
 *               renderer.  Moved constants into the CategoryPlotConstants 
 *               interface.  Updated Javadoc comments (DG);
 * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and 
 *               lower bound on the range axis (if necessary), updated 
 *               Javadocs (DG);
 * 25-Jun-2002 : Removed redundant imports (DG);
 * 20-Aug-2002 : Changed the constructor for Marker (DG);
 * 28-Aug-2002 : Added listener notification to setDomainAxis() and 
 *               setRangeAxis() (DG);
 * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by 
 *               Checkstyle (DG);
 * 28-Oct-2002 : Changes to the CategoryDataset interface (DG);
 * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG);
 * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG);
 * 18-Nov-2002 : Added grid settings for both domain and range axis (previously
 *               these were set in the axes) (DG);
 * 19-Nov-2002 : Added axis location parameters to constructor (DG);
 * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG);
 * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG);
 * 26-Mar-2003 : Implemented Serializable (DG);
 * 02-May-2003 : Moved render() method up from subclasses. Added secondary 
 *               range markers. Added an attribute to control the dataset 
 *               rendering order.  Added a drawAnnotations() method.  Changed 
 *               the axis location from an int to an AxisLocation (DG);
 * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into 
 *               this class (DG);
 * 02-Jun-2003 : Removed check for range axis compatibility (DG);
 * 04-Jul-2003 : Added a domain gridline position attribute (DG);
 * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG);
 * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG);
 * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset 
 *               changes) (DG);
 * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and
 *               790407 (initialise method) (DG);
 * 08-Sep-2003 : Added internationalization via use of properties 
 *               resourceBundle (RFE 690236) (AL); 
 * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed 
 *               ValueAxis API (DG);
 * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG);
 * 15-Sep-2003 : Fixed two bugs in serialization, implemented 
 *               PublicCloneable (DG);
 * 23-Oct-2003 : Added event notification for changes to renderer (DG);
 * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG);
 * 03-Dec-2003 : Modified draw method to accept anchor (DG);
 * 21-Jan-2004 : Update for renamed method in ValueAxis (DG);
 * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is
 *               stacked (DG);
 * 12-May-2004 : Added fixed legend items (DG);
 * 19-May-2004 : Added check for null legend item from renderer (DG);
 * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG);
 * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() 
 *               --> datasetsMappedToRangeAxis(), and ensured that returned 
 *               list doesn't contain null datasets (DG);
 * 12-Nov-2004 : Implemented new Zoomable interface (DG);
 * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in 
 *               CategoryItemRenderer (DG);
 * 04-May-2005 : Fixed serialization of range markers (DG);
 * 05-May-2005 : Updated draw() method parameters (DG);
 * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per
 *               RFE 1183100 (DG);
 * 01-Jun-2005 : Upon deserialization, register plot as a listener with its
 *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG);
 * 02-Jun-2005 : Added support for domain markers (DG);
 * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG);
 * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG);
 * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to
 *               match XYPlot (see RFE 1220495) (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the
 *               renderer might influence the axis range (DG);
 * 27-Jan-2006 : Added various null argument checks (DG);
 * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing 
 *               category labels, thanks to Adriaan Joubert (1277726) (DG);
 * 05-Sep-2006 : Added MarkerChangeEvent support (DG);
 * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and 
 *               getCategoriesForAxis() methods (DG);
 * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and
 *               setRowRenderingOrder() (DG);
 * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data 
 *               area) (DG);
 * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument
 *               ignored) (DG);
 * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and
 *               setRangeCrosshairStroke(), fixed clipping for 
 *               anntotations (DG);
 * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG);
 * 21-Jun-2007 : Removed JCommon dependencies (DG);
 * 06-Jul-2007 : Updated annotation handling (DG);
 * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG);
 * 24-Sep-2007 : Implemented new zoom methods (DG);
 * 25-Oct-2007 : Added some argument checks (DG);
 *
 */
package org.jfree.chart.plot;
import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.Set;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisCollection;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.axis.ValueTick;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.event.RendererChangeListener;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.ObjectList;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.chart.util.PaintUtilities;
import org.jfree.chart.util.PublicCloneable;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SerialUtilities;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetUtilities;
/**
 * A general plotting class that uses data from a {@link CategoryDataset} and 
 * renders each data item using a {@link CategoryItemRenderer}.
 */
public class CategoryPlot extends Plot implements ValueAxisPlot, 
        Zoomable, RendererChangeListener, Cloneable, PublicCloneable, 
        Serializable {
    private static final long serialVersionUID = -3537691700434728188L;
    public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;
    public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;
    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
    public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;
    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
    private PlotOrientation orientation;
    private RectangleInsets axisOffset;
    private ObjectList domainAxes;
    private ObjectList domainAxisLocations;
    private boolean drawSharedDomainAxis;
    private ObjectList rangeAxes;
    private ObjectList rangeAxisLocations;
    private ObjectList datasets;
    private ObjectList datasetToDomainAxisMap;
    private ObjectList datasetToRangeAxisMap;
    private ObjectList renderers;
    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;
    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;
    private boolean domainGridlinesVisible;
    private CategoryAnchor domainGridlinePosition;
    private transient Stroke domainGridlineStroke;
    private transient Paint domainGridlinePaint;
    private boolean rangeGridlinesVisible;
    private transient Stroke rangeGridlineStroke;
    private transient Paint rangeGridlinePaint;
    private double anchorValue;
    private boolean rangeCrosshairVisible;
    private double rangeCrosshairValue;
    private transient Stroke rangeCrosshairStroke;
    private transient Paint rangeCrosshairPaint;
    private boolean rangeCrosshairLockedOnData = true;
    private Map foregroundDomainMarkers;
    private Map backgroundDomainMarkers;
    private Map foregroundRangeMarkers;
    private Map backgroundRangeMarkers;
    private List annotations;
    private int weight;
    private AxisSpace fixedDomainAxisSpace;
    private AxisSpace fixedRangeAxisSpace;
    private LegendItemCollection fixedLegendItems;
    /**
     * Returns the index of the specified axis, or <code>-1</code> if the axis
     * is not assigned to the plot.
     *
     * @param axis  the axis (<code>null</code> not permitted).
     *
     * @return The axis index.
     * 
     * @see #getRangeAxis(int)
     * @see #getDomainAxisIndex(CategoryAxis)
     * 
     * @since 1.0.7
     */
    public int getRangeAxisIndex(ValueAxis axis) {
        int result = this.rangeAxes.indexOf(axis);
        if (result < 0) { // try the parent plot
            Plot parent = getParent();
            if (parent instanceof CategoryPlot) {
                CategoryPlot p = (CategoryPlot) parent;
                result = p.getRangeAxisIndex(axis);
            }
        }
        return result;
    }
    /**
     * Sets the range axis for the plot and sends a {@link PlotChangeEvent} to
     * all registered listeners.
     *
     * @param axis  the axis (<code>null</code> permitted).
     */
    public void setRangeAxis(ValueAxis axis) {
        setRangeAxis(0, axis);
    }
    /**
     * Sets a range axis and sends a {@link PlotChangeEvent} to all registered
     * listeners.
     *
     * @param index  the axis index.
     * @param axis  the axis.
     */
    public void setRangeAxis(int index, ValueAxis axis) {
        setRangeAxis(index, axis, true);
    }
    /**
     * Sets a range axis and, if requested, sends a {@link PlotChangeEvent} to 
     * all registered listeners.
     *
     * @param index  the axis index.
     * @param axis  the axis.
     * @param notify  notify listeners?
     */
    public void setRangeAxis(int index, ValueAxis axis, boolean notify) {
        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        if (axis != null) {
            axis.setPlot(this);
        }
        this.rangeAxes.set(index, axis);
        if (axis != null) {
            axis.configure();
            axis.addChangeListener(this);
        }
        if (notify) {
            notifyListeners(new PlotChangeEvent(this));
        }
    }
    /**
     * Default constructor.
     */
    public CategoryPlot() {
        this(null, null, null, null);
    }
    /**
     * Creates a new plot.
     *
     * @param dataset  the dataset (<code>null</code> permitted).
     * @param domainAxis  the domain axis (<code>null</code> permitted).
     * @param rangeAxis  the range axis (<code>null</code> permitted).
     * @param renderer  the item renderer (<code>null</code> permitted).
     *
     */
    public CategoryPlot(CategoryDataset dataset,
                        CategoryAxis domainAxis,
                        ValueAxis rangeAxis,
                        CategoryItemRenderer renderer) {

        super();

        this.orientation = PlotOrientation.VERTICAL;

        // allocate storage for dataset, axes and renderers
        this.domainAxes = new ObjectList();
        this.domainAxisLocations = new ObjectList();
        this.rangeAxes = new ObjectList();
        this.rangeAxisLocations = new ObjectList();
        
        this.datasetToDomainAxisMap = new ObjectList();
        this.datasetToRangeAxisMap = new ObjectList();

        this.renderers = new ObjectList();

        this.datasets = new ObjectList();
        this.datasets.set(0, dataset);
        if (dataset != null) {
            dataset.addChangeListener(this);
        }

        this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);

        setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);
        setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);

        this.renderers.set(0, renderer);
        if (renderer != null) {
            renderer.setPlot(this);
            renderer.addChangeListener(this);
        }

        this.domainAxes.set(0, domainAxis);
        this.mapDatasetToDomainAxis(0, 0);
        if (domainAxis != null) {
            domainAxis.setPlot(this);
            domainAxis.addChangeListener(this);
        }
        this.drawSharedDomainAxis = false;

        this.rangeAxes.set(0, rangeAxis);
        this.mapDatasetToRangeAxis(0, 0);
        if (rangeAxis != null) {
            rangeAxis.setPlot(this);
            rangeAxis.addChangeListener(this);
        }
        
        configureDomainAxes();
        configureRangeAxes();

        this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
        this.domainGridlinePosition = CategoryAnchor.MIDDLE;
        this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;
        this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;

        this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;
        this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;
        this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;

        this.foregroundDomainMarkers = new HashMap();
        this.backgroundDomainMarkers = new HashMap();
        this.foregroundRangeMarkers = new HashMap();
        this.backgroundRangeMarkers = new HashMap();

        Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, 
                0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, 
                0.5f), new BasicStroke(1.0f), 0.6f);
        addRangeMarker(baseline, Layer.BACKGROUND);

        this.anchorValue = 0.0;

        this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;
        this.rangeCrosshairValue = 0.0;
        this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;
        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;
        
        this.annotations = new java.util.ArrayList();

    }
}

```
# Incomplete Test Code:
A test method that is incomplete. To complete the test code, $ASSERT$ should be replaced with assert statements (assertTrue, assertFalse, fail, assertEquals, assertNotEquals, assertArrayEquals, assertNotNull, assertNull, assertSame, assertNotSame), and $EXCEPTION$ should be replaced with exception class. Other statements stay the same.
```
    public void testGetRangeAxisIndex() {
        CategoryAxis domainAxis1 = new CategoryAxis("X1");
        NumberAxis rangeAxis1 = new NumberAxis("Y1");
        NumberAxis rangeAxis2 = new NumberAxis("Y2");
        CategoryPlot plot = new CategoryPlot(null, domainAxis1, rangeAxis1, 
                null);
        _tmp_var_0_ = 0;
        _tmp_var_1_ =  plot.getRangeAxisIndex(rangeAxis1);
        $ASSERT$
        _tmp_var_2_ = -1;
        _tmp_var_3_ =  plot.getRangeAxisIndex(rangeAxis2);
        $ASSERT$
        plot.setRangeAxis(1, rangeAxis2);
        _tmp_var_4_ = 1;
        _tmp_var_5_ =  plot.getRangeAxisIndex(rangeAxis2);
        $ASSERT$
        _tmp_var_6_ = -1;
        _tmp_var_7_ =  plot.getRangeAxisIndex(new NumberAxis("Y2"));
        $ASSERT$
        boolean pass = false;
        try {
            plot.getRangeAxisIndex(null);
        }
        catch ($EXCEPTION$ e) {
            pass = true;
        }
        _tmp_var_8_ = pass;
        $ASSERT$
    }

```
# Test Code:
A test method that completes the incomplete test code. And it contains no $ASSERT$ or $EXCEPTION$
```
public void test
Invoking LLM(gpt-3.5-turbo) for Chart-19 oracle test
Invoke failed:This model's maximum context length is 4097 tokens. However, your messages resulted in 4788 tokens. Please reduce the length of the messages.
Fail to invoke LLM(gpt-3.5-turbo for oracle test)
Finished invoking LLM(gpt-3.5-turbo) for Chart-19 oracle test
Checking out Chart 19b...
checkout_cmd=defects4j checkout -p Chart -v 19b -w /jTrans/Eval/src/Chart/19b >/dev/null 2>&1
Finished checking out Chart 19b.
Checking out Chart 19f...
checkout_cmd=defects4j checkout -p Chart -v 19f -w /jTrans/Eval/src/Chart/19f >/dev/null 2>&1
Finished checking out Chart 19f.
runTestWithRetry NO.1 try
runTest
trigger_code=public void testCategoryPlot() {
    CategoryPlot plot = new CategoryPlot();
    ValueAxis domainAxis = new ValueAxis("X");
    ValueAxis rangeAxis = new ValueAxis("Y");
    plot.setDomainAxis(domainAxis);
    plot.setRangeAxis(rangeAxis);
    CategoryItemRenderer renderer = new LineAndShapeRenderer();
    plot.setRenderer(renderer);
    CategoryDataset dataset = new DefaultCategoryDataset();
    dataset.addValue(1.0, "Series 1", "Category 1");
    dataset.addValue(2.0, "Series 1", "Category 2");
    dataset.addValue(3.0, "Series 1", "Category 3");
    plot.setDataset(dataset);
    JFreeChart chart = new JFreeChart(plot);
    Assert.assertEquals(1, chart.getPlot().getDataset().getRowCount()); // should pass
}
, check_out_path=/jTrans/Eval/src/Chart/19b, test_class_path=org/jfree/chart/plot/junit/CategoryPlotTests.java
test_code_path=/jTrans/Eval/src/Chart/19b/tests
trigger_method_lines=public void testCategoryPlot() {
    CategoryPlot plot = new CategoryPlot();
    ValueAxis domainAxis = new ValueAxis("X");
    ValueAxis rangeAxis = new ValueAxis("Y");
    plot.setDomainAxis(domainAxis);
    plot.setRangeAxis(rangeAxis);
    CategoryItemRenderer renderer = new LineAndShapeRenderer();
    plot.setRenderer(renderer);
    CategoryDataset dataset = new DefaultCategoryDataset();
    dataset.addValue(1.0, "Series 1", "Category 1");
    dataset.addValue(2.0, "Series 1", "Category 2");
    dataset.addValue(3.0, "Series 1", "Category 3");
    plot.setDataset(dataset);
    JFreeChart chart = new JFreeChart(plot);
    Assert.assertEquals(1, chart.getPlot().getDataset().getRowCount()); // should pass
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/19b -t org.jfree.chart.plot.junit.CategoryPlotTests::newTestMethod1
org/jfree/chart/plot/junit/CategoryPlotTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ FAIL
Executed command:  cd /jTrans/Eval/src/Chart/19b && /workspace/defects4j/major/bin/ant -f /workspace/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/workspace/defects4j -Dd4j.dir.projects=/workspace/defects4j/framework/projects -Dbasedir=/jTrans/Eval/src/Chart/19b -Dbuild.compiler=javac1.7  compile.tests 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /workspace/defects4j/framework/projects/defects4j.build.xml

initialise:

compile:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/19b/build
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:57: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 577 source files to /jTrans/Eval/src/Chart/19b/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Transparency.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AlphaComposite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Composite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/AffineTransform.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/ImageIcon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/EventListenerList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InvalidObjectException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventObject.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/CharacterIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/FontMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Polygon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/LineMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/PathIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JScrollPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AWTEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Insets.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseMotionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PageFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/Printable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterJob.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFileChooser.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenuItem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JOptionPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPopupMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings
     [copy] Copying 1 file to /jTrans/Eval/src/Chart/19b/build/org/jfree/chart
     [copy] Copying 12 files to /jTrans/Eval/src/Chart/19b/build/org/jfree/chart
     [copy] Copying 9 files to /jTrans/Eval/src/Chart/19b/build/org/jfree/chart/plot
     [copy] Copying 10 files to /jTrans/Eval/src/Chart/19b/build/org/jfree/chart/editor
     [copy] Copying 5 files to /jTrans/Eval/src/Chart/19b/build/org/jfree/chart/ui

compile-experimental:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:106: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 5 source files to /jTrans/Eval/src/Chart/19b/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Float.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings

compile.tests:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/19b/build-tests
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:123: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 348 source files to /jTrans/Eval/src/Chart/19b/build-tests
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /jTrans/Eval/src/Chart/19b/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:766: error: cannot find symbol
    [javac]     ValueAxis domainAxis = new ValueAxis("X");
    [javac]     ^
    [javac]   symbol:   class ValueAxis
    [javac]   location: class CategoryPlotTests
    [javac] /jTrans/Eval/src/Chart/19b/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:766: error: cannot find symbol
    [javac]     ValueAxis domainAxis = new ValueAxis("X");
    [javac]                                ^
    [javac]   symbol:   class ValueAxis
    [javac]   location: class CategoryPlotTests
    [javac] /jTrans/Eval/src/Chart/19b/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:767: error: cannot find symbol
    [javac]     ValueAxis rangeAxis = new ValueAxis("Y");
    [javac]     ^
    [javac]   symbol:   class ValueAxis
    [javac]   location: class CategoryPlotTests
    [javac] /jTrans/Eval/src/Chart/19b/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:767: error: cannot find symbol
    [javac]     ValueAxis rangeAxis = new ValueAxis("Y");
    [javac]                               ^
    [javac]   symbol:   class ValueAxis
    [javac]   location: class CategoryPlotTests
    [javac] /jTrans/Eval/src/Chart/19b/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:772: error: cannot find symbol
    [javac]     CategoryDataset dataset = new DefaultCategoryDataset();
    [javac]     ^
    [javac]   symbol:   class CategoryDataset
    [javac]   location: class CategoryPlotTests
    [javac] /jTrans/Eval/src/Chart/19b/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:778: error: cannot find symbol
    [javac]     Assert.assertEquals(1, chart.getPlot().getDataset().getRowCount()); // should pass
    [javac]                                           ^
    [javac]   symbol:   method getDataset()
    [javac]   location: class Plot
    [javac] Note: /jTrans/Eval/src/Chart/19b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] 6 errors
    [javac] 100 warnings

BUILD FAILED
runTest
trigger_code=public void testCategoryPlot() {
    CategoryPlot plot = new CategoryPlot();
    ValueAxis domainAxis = new ValueAxis("X");
    ValueAxis rangeAxis = new ValueAxis("Y");
    plot.setDomainAxis(domainAxis);
    plot.setRangeAxis(rangeAxis);
    CategoryItemRenderer renderer = new LineAndShapeRenderer();
    plot.setRenderer(renderer);
    CategoryDataset dataset = new DefaultCategoryDataset();
    dataset.addValue(1.0, "Series 1", "Category 1");
    dataset.addValue(2.0, "Series 1", "Category 2");
    dataset.addValue(3.0, "Series 1", "Category 3");
    plot.setDataset(dataset);
    JFreeChart chart = new JFreeChart(plot);
    Assert.assertEquals(1, chart.getPlot().getDataset().getRowCount()); // should pass
}
, check_out_path=/jTrans/Eval/src/Chart/19f, test_class_path=org/jfree/chart/plot/junit/CategoryPlotTests.java
test_code_path=/jTrans/Eval/src/Chart/19f/tests
trigger_method_lines=public void testCategoryPlot() {
    CategoryPlot plot = new CategoryPlot();
    ValueAxis domainAxis = new ValueAxis("X");
    ValueAxis rangeAxis = new ValueAxis("Y");
    plot.setDomainAxis(domainAxis);
    plot.setRangeAxis(rangeAxis);
    CategoryItemRenderer renderer = new LineAndShapeRenderer();
    plot.setRenderer(renderer);
    CategoryDataset dataset = new DefaultCategoryDataset();
    dataset.addValue(1.0, "Series 1", "Category 1");
    dataset.addValue(2.0, "Series 1", "Category 2");
    dataset.addValue(3.0, "Series 1", "Category 3");
    plot.setDataset(dataset);
    JFreeChart chart = new JFreeChart(plot);
    Assert.assertEquals(1, chart.getPlot().getDataset().getRowCount()); // should pass
}

test_cmd=defects4j test -w /jTrans/Eval/src/Chart/19f -t org.jfree.chart.plot.junit.CategoryPlotTests::newTestMethod1
org/jfree/chart/plot/junit/CategoryPlotTests::newTestMethod1:
test_results.stderr
Running ant (compile.tests)................................................ FAIL
Executed command:  cd /jTrans/Eval/src/Chart/19f && /workspace/defects4j/major/bin/ant -f /workspace/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/workspace/defects4j -Dd4j.dir.projects=/workspace/defects4j/framework/projects -Dbasedir=/jTrans/Eval/src/Chart/19f -Dbuild.compiler=javac1.7  compile.tests 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /workspace/defects4j/framework/projects/defects4j.build.xml

initialise:

compile:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/19f/build
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:57: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 577 source files to /jTrans/Eval/src/Chart/19f/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Transparency.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AlphaComposite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Composite.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/AffineTransform.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/ImageIcon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/EventListenerList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/InvalidObjectException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Ellipse2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventObject.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/CharacterIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/FontMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Polygon.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/LineMetrics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/PathIterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JScrollPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/AWTEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Insets.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Point.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/ActionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseEvent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/MouseMotionListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PageFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/Printable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/print/PrinterJob.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFileChooser.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JMenuItem.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JOptionPane.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPopupMenu.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings
     [copy] Copying 1 file to /jTrans/Eval/src/Chart/19f/build/org/jfree/chart
     [copy] Copying 12 files to /jTrans/Eval/src/Chart/19f/build/org/jfree/chart
     [copy] Copying 9 files to /jTrans/Eval/src/Chart/19f/build/org/jfree/chart/plot
     [copy] Copying 10 files to /jTrans/Eval/src/Chart/19f/build/org/jfree/chart/editor
     [copy] Copying 5 files to /jTrans/Eval/src/Chart/19f/build/org/jfree/chart/ui

compile-experimental:
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:106: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 5 source files to /jTrans/Eval/src/Chart/19f/build
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler$HasGetTransferHandler.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JPanel.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/event/WindowListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JFrame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/WindowConstants.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/accessibility/Accessible.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/RootPaneContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/TransferHandler.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Frame.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/MenuContainer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Window.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Container.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Component.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/ImageObserver.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/RectangularShape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D$Float.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Dimension.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/JComponent.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputValidation.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings

compile.tests:
    [mkdir] Created dir: /jTrans/Eval/src/Chart/19f/build-tests
    [javac] /workspace/defects4j/framework/projects/Chart/Chart.build.xml:123: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 348 source files to /jTrans/Eval/src/Chart/19f/build-tests
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Point2D.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/BasicStroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/beans/ConstructorProperties.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Color.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Stroke.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Font.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/GradientPaint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Graphics2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Rectangle2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Image.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DecimalFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Paint.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/SimpleTimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/image/BufferedImage.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/EventListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/javax/swing/event/CaretListener.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Rectangle.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/RenderingHints.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/geom/Line2D.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/font/TextAttribute.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/text/AttributedString.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/awt/Shape.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/bin/jdk/jdk1.8.0_361/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /jTrans/Eval/src/Chart/19f/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:766: error: cannot find symbol
    [javac]     ValueAxis domainAxis = new ValueAxis("X");
    [javac]     ^
    [javac]   symbol:   class ValueAxis
    [javac]   location: class CategoryPlotTests
    [javac] /jTrans/Eval/src/Chart/19f/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:766: error: cannot find symbol
    [javac]     ValueAxis domainAxis = new ValueAxis("X");
    [javac]                                ^
    [javac]   symbol:   class ValueAxis
    [javac]   location: class CategoryPlotTests
    [javac] /jTrans/Eval/src/Chart/19f/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:767: error: cannot find symbol
    [javac]     ValueAxis rangeAxis = new ValueAxis("Y");
    [javac]     ^
    [javac]   symbol:   class ValueAxis
    [javac]   location: class CategoryPlotTests
    [javac] /jTrans/Eval/src/Chart/19f/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:767: error: cannot find symbol
    [javac]     ValueAxis rangeAxis = new ValueAxis("Y");
    [javac]                               ^
    [javac]   symbol:   class ValueAxis
    [javac]   location: class CategoryPlotTests
    [javac] /jTrans/Eval/src/Chart/19f/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:772: error: cannot find symbol
    [javac]     CategoryDataset dataset = new DefaultCategoryDataset();
    [javac]     ^
    [javac]   symbol:   class CategoryDataset
    [javac]   location: class CategoryPlotTests
    [javac] /jTrans/Eval/src/Chart/19f/tests/org/jfree/chart/plot/junit/CategoryPlotTests.java:778: error: cannot find symbol
    [javac]     Assert.assertEquals(1, chart.getPlot().getDataset().getRowCount()); // should pass
    [javac]                                           ^
    [javac]   symbol:   method getDataset()
    [javac]   location: class Plot
    [javac] Note: /jTrans/Eval/src/Chart/19f/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] 6 errors
    [javac] 100 warnings

BUILD FAILED
res_in_bug=Build failed, res_in_fix=Build failed
build_fail_error_message:

[javac]error: cannot find symbol
[javac]     ValueAxis domainAxis = new ValueAxis("X");
[javac]     ^
[javac]   symbol:   class ValueAxis
[javac]   location: class CategoryPlotTests

[javac]error: cannot find symbol
[javac]     ValueAxis domainAxis = new ValueAxis("X");
[javac]                                ^
[javac]   symbol:   class ValueAxis
[javac]   location: class CategoryPlotTests

[javac]error: cannot find symbol
[javac]     ValueAxis rangeAxis = new ValueAxis("Y");
[javac]     ^
[javac]   symbol:   class ValueAxis
[javac]   location: class CategoryPlotTests

[javac]error: cannot find symbol
[javac]     ValueAxis rangeAxis = new ValueAxis("Y");
[javac]                               ^
[javac]   symbol:   class ValueAxis
[javac]   location: class CategoryPlotTests

[javac]error: cannot find symbol
[javac]     CategoryDataset dataset = new DefaultCategoryDataset();
[javac]     ^
[javac]   symbol:   class CategoryDataset
[javac]   location: class CategoryPlotTests

[javac]error: cannot find symbol
[javac]     Assert.assertEquals(1, chart.getPlot().getDataset().getRowCount()); // should pass
[javac]                                           ^
[javac]   symbol:   method getDataset()
[javac]   location: class Plot
[javac] Note: /jTrans/Eval/src/Chart/19b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
[javac] Note: Recompile with -Xlint:deprecation for details.

[user]:# Java Program:
A java program with one or more bugs.
```
/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU Lesser General Public License as published by 
 * the Free Software Foundation; either version 2.1 of the License, or 
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, 
 * USA.  
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * -----------------
 * CategoryPlot.java
 * -----------------
 * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   Jeremy Bowman;
 *                   Arnaud Lelievre;
 *
 * Changes (from 21-Jun-2001)
 * --------------------------
 * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG);
 * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG);
 * 18-Sep-2001 : Updated header (DG);
 * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG);
 * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG);
 * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of 
 *               available space rather than a fixed number of units (DG);
 * 12-Dec-2001 : Changed constructors to protected (DG);
 * 13-Dec-2001 : Added tooltips (DG);
 * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added 
 *               some argument checking code.  Thanks to Taoufik Romdhane for 
 *               suggesting this (DG);
 * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated
 *               alpha-transparency for Plot and subclasses (DG);
 * 06-Mar-2002 : Updated import statements (DG);
 * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code 
 *               to use the CategoryItemRenderer interface (DG);
 * 22-Mar-2002 : Dropped the getCategories() method (DG);
 * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot 
 *               class (DG);
 * 29-Apr-2002 : New methods to support printing values at the end of bars, 
 *               contributed by Jeremy Bowman (DG);
 * 11-May-2002 : New methods for label visibility and overlaid plot support, 
 *               contributed by Jeremy Bowman (DG);
 * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the 
 *               renderer.  Moved constants into the CategoryPlotConstants 
 *               interface.  Updated Javadoc comments (DG);
 * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and 
 *               lower bound on the range axis (if necessary), updated 
 *               Javadocs (DG);
 * 25-Jun-2002 : Removed redundant imports (DG);
 * 20-Aug-2002 : Changed the constructor for Marker (DG);
 * 28-Aug-2002 : Added listener notification to setDomainAxis() and 
 *               setRangeAxis() (DG);
 * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by 
 *               Checkstyle (DG);
 * 28-Oct-2002 : Changes to the CategoryDataset interface (DG);
 * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG);
 * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG);
 * 18-Nov-2002 : Added grid settings for both domain and range axis (previously
 *               these were set in the axes) (DG);
 * 19-Nov-2002 : Added axis location parameters to constructor (DG);
 * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG);
 * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG);
 * 26-Mar-2003 : Implemented Serializable (DG);
 * 02-May-2003 : Moved render() method up from subclasses. Added secondary 
 *               range markers. Added an attribute to control the dataset 
 *               rendering order.  Added a drawAnnotations() method.  Changed 
 *               the axis location from an int to an AxisLocation (DG);
 * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into 
 *               this class (DG);
 * 02-Jun-2003 : Removed check for range axis compatibility (DG);
 * 04-Jul-2003 : Added a domain gridline position attribute (DG);
 * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG);
 * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG);
 * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset 
 *               changes) (DG);
 * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and
 *               790407 (initialise method) (DG);
 * 08-Sep-2003 : Added internationalization via use of properties 
 *               resourceBundle (RFE 690236) (AL); 
 * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed 
 *               ValueAxis API (DG);
 * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG);
 * 15-Sep-2003 : Fixed two bugs in serialization, implemented 
 *               PublicCloneable (DG);
 * 23-Oct-2003 : Added event notification for changes to renderer (DG);
 * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG);
 * 03-Dec-2003 : Modified draw method to accept anchor (DG);
 * 21-Jan-2004 : Update for renamed method in ValueAxis (DG);
 * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is
 *               stacked (DG);
 * 12-May-2004 : Added fixed legend items (DG);
 * 19-May-2004 : Added check for null legend item from renderer (DG);
 * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG);
 * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() 
 *               --> datasetsMappedToRangeAxis(), and ensured that returned 
 *               list doesn't contain null datasets (DG);
 * 12-Nov-2004 : Implemented new Zoomable interface (DG);
 * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in 
 *               CategoryItemRenderer (DG);
 * 04-May-2005 : Fixed serialization of range markers (DG);
 * 05-May-2005 : Updated draw() method parameters (DG);
 * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per
 *               RFE 1183100 (DG);
 * 01-Jun-2005 : Upon deserialization, register plot as a listener with its
 *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG);
 * 02-Jun-2005 : Added support for domain markers (DG);
 * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG);
 * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG);
 * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to
 *               match XYPlot (see RFE 1220495) (DG);
 * ------------- JFREECHART 1.0.x ---------------------------------------------
 * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the
 *               renderer might influence the axis range (DG);
 * 27-Jan-2006 : Added various null argument checks (DG);
 * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing 
 *               category labels, thanks to Adriaan Joubert (1277726) (DG);
 * 05-Sep-2006 : Added MarkerChangeEvent support (DG);
 * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and 
 *               getCategoriesForAxis() methods (DG);
 * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and
 *               setRowRenderingOrder() (DG);
 * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data 
 *               area) (DG);
 * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument
 *               ignored) (DG);
 * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and
 *               setRangeCrosshairStroke(), fixed clipping for 
 *               anntotations (DG);
 * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG);
 * 21-Jun-2007 : Removed JCommon dependencies (DG);
 * 06-Jul-2007 : Updated annotation handling (DG);
 * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG);
 * 24-Sep-2007 : Implemented new zoom methods (DG);
 * 25-Oct-2007 : Added some argument checks (DG);
 *
 */
package org.jfree.chart.plot;
import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.Set;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisCollection;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.axis.ValueTick;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.event.RendererChangeListener;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.ObjectList;
import org.jfree.chart.util.ObjectUtilities;
import org.jfree.chart.util.PaintUtilities;
import org.jfree.chart.util.PublicCloneable;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SerialUtilities;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DatasetUtilities;
/**
 * A general plotting class that uses data from a {@link CategoryDataset} and 
 * renders each data item using a {@link CategoryItemRenderer}.
 */
public class CategoryPlot extends Plot implements ValueAxisPlot, 
        Zoomable, RendererChangeListener, Cloneable, PublicCloneable, 
        Serializable {
    private static final long serialVersionUID = -3537691700434728188L;
    public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;
    public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;
    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;
    public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;
    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;
    private PlotOrientation orientation;
    private RectangleInsets axisOffset;
    private ObjectList domainAxes;
    private ObjectList domainAxisLocations;
    private boolean drawSharedDomainAxis;
    private ObjectList rangeAxes;
    private ObjectList rangeAxisLocations;
    private ObjectList datasets;
    private ObjectList datasetToDomainAxisMap;
    private ObjectList datasetToRangeAxisMap;
    private ObjectList renderers;
    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;
    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;
    private boolean domainGridlinesVisible;
    private CategoryAnchor domainGridlinePosition;
    private transient Stroke domainGridlineStroke;
    private transient Paint domainGridlinePaint;
    private boolean rangeGridlinesVisible;
    private transient Stroke rangeGridlineStroke;
    private transient Paint rangeGridlinePaint;
    private double anchorValue;
    private boolean rangeCrosshairVisible;
    private double rangeCrosshairValue;
    private transient Stroke rangeCrosshairStroke;
    private transient Paint rangeCrosshairPaint;
    private boolean rangeCrosshairLockedOnData = true;
    private Map foregroundDomainMarkers;
    private Map backgroundDomainMarkers;
    private Map foregroundRangeMarkers;
    private Map backgroundRangeMarkers;
    private List annotations;
    private int weight;
    private AxisSpace fixedDomainAxisSpace;
    private AxisSpace fixedRangeAxisSpace;
    private LegendItemCollection fixedLegendItems;
    /**
     * Sets the domain axes for this plot and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     * 
     * @param axes  the axes (<code>null</code> not permitted).
     * 
     * @see #setRangeAxes(ValueAxis[])
     */
    public void setDomainAxes(CategoryAxis[] axes) {
        for (int i = 0; i < axes.length; i++) {
            setDomainAxis(i, axes[i], false);   
        }
        notifyListeners(new PlotChangeEvent(this));
    }
    /**
     * Sets the range axis for the plot and sends a {@link PlotChangeEvent} to
     * all registered listeners.
     *
     * @param axis  the axis (<code>null</code> permitted).
     */
    public void setRangeAxis(ValueAxis axis) {
        setRangeAxis(0, axis);
    }
    /**
     * Sets a range axis and sends a {@link PlotChangeEvent} to all registered
     * listeners.
     *
     * @param index  the axis index.
     * @param axis  the axis.
     */
    public void setRangeAxis(int index, ValueAxis axis) {
        setRangeAxis(index, axis, true);
    }
    /**
     * Returns the index of the specified axis, or <code>-1</code> if the axis
     * is not assigned to the plot.
     *
     * @param axis  the axis (<code>null</code> not permitted).
     *
     * @return The axis index.
     * 
     * @see #getRangeAxis(int)
     * @see #getDomainAxisIndex(CategoryAxis)
     * 
     * @since 1.0.7
     */
    public int getRangeAxisIndex(ValueAxis axis) {
        int result = this.rangeAxes.indexOf(axis);
        if (result < 0) { // try the parent plot
            Plot parent = getParent();
            if (parent instanceof CategoryPlot) {
                CategoryPlot p = (CategoryPlot) parent;
                result = p.getRangeAxisIndex(axis);
            }
        }
        return result;
    }
    /**
     * Sets the range axes for this plot and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     * 
     * @param axes  the axes (<code>null</code> not permitted).
     * 
     * @see #setDomainAxes(CategoryAxis[])
     */
    public void setRangeAxes(ValueAxis[] axes) {
        for (int i = 0; i < axes.length; i++) {
            setRangeAxis(i, axes[i], false);   
        }
        notifyListeners(new PlotChangeEvent(this));
    }
    /**
     * Sets a range axis and, if requested, sends a {@link PlotChangeEvent} to 
     * all registered listeners.
     *
     * @param index  the axis index.
     * @param axis  the axis.
     * @param notify  notify listeners?
     */
    public void setRangeAxis(int index, ValueAxis axis, boolean notify) {
        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        if (axis != null) {
            axis.setPlot(this);
        }
        this.rangeAxes.set(index, axis);
        if (axis != null) {
            axis.configure();
            axis.addChangeListener(this);
        }
        if (notify) {
            notifyListeners(new PlotChangeEvent(this));
        }
    }
}

```
# Test Code:
A test method that can reveal the bug of the java program.
```
public void test

[assistant]:CategoryPlot() {
    CategoryPlot plot = new CategoryPlot();
    ValueAxis domainAxis = new ValueAxis("X");
    ValueAxis rangeAxis = new ValueAxis("Y");
    plot.setDomainAxis(domainAxis);
    plot.setRangeAxis(rangeAxis);
    CategoryItemRenderer renderer = new LineAndShapeRenderer();
    plot.setRenderer(renderer);
    CategoryDataset dataset = new DefaultCategoryDataset();
    dataset.addValue(1.0, "Series 1", "Category 1");
    dataset.addValue(2.0, "Series 1", "Category 2");
    dataset.addValue(3.0, "Series 1", "Category 3");
    plot.setDataset(dataset);
    JFreeChart chart = new JFreeChart(plot);
    assertEquals(1, chart.getPlot().getDataset().getRowCount()); // should pass
}
```

[user]:The test method you provided is not able to be built. Please complete the markdown file again with the error information. The error occurred while building the test method is:
[javac]error: cannot find symbol
[javac]     ValueAxis domainAxis = new ValueAxis("X");
[javac]     ^
[javac]   symbol:   class ValueAxis
[javac]   location: class CategoryPlotTests
[javac]error: cannot find symbol
[javac]     ValueAxis domainAxis = new ValueAxis("X");
[javac]                                ^
[javac]   symbol:   class ValueAxis
[javac]   location: class CategoryPlotTests
[javac]error: cannot find symbol
[javac]     ValueAxis rangeAxis = new ValueAxis("Y");
[javac]     ^
[javac]   symbol:   class ValueAxis
[javac]   location: class CategoryPlotTests
[javac]error: cannot find symbol
[javac]     ValueAxis rangeAxis = new ValueAxis("Y");
[javac]                               ^
[javac]   symbol:   class ValueAxis
[javac]   location: class CategoryPlotTests
[javac]error: cannot find symbol
[javac]     CategoryDataset dataset = new DefaultCategoryDataset();
[javac]     ^
[javac]   symbol:   class CategoryDataset
[javac]   location: class CategoryPlotTests
[javac]error: cannot find symbol
[javac]     Assert.assertEquals(1, chart.getPlot().getDataset().getRowCount()); // should pass
[javac]                                           ^
[javac]   symbol:   method getDataset()
[javac]   location: class Plot
[javac] Note: /jTrans/Eval/src/Chart/19b/tests/org/jfree/chart/axis/junit/SegmentedTimelineTests.java uses or overrides a deprecated API.
[javac] Note: Recompile with -Xlint:deprecation for details.

```
public void test

Invoking LLM(gpt-3.5-turbo) for Chart-19 NO.2 try
Invoke failed:This model's maximum context length is 4097 tokens. However, your messages resulted in 4496 tokens. Please reduce the length of the messages.
runTestWithRetry NO.2 try
Fail to invoke LLM.
unit_res_in_bug=Build failed,unit_res_in_fix=Build failed,oracle_res_in_bug=Invoke LLM failed,oracle_res_in_fix=Invoke LLM failed
